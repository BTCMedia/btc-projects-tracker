<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/">
  <author>
    <name>flip_btc</name>
  </author>
  <id>https://release-tracker.b.tc/</id>
  <title>Bitcoin Projects Release Tracker</title>
  <updated>2022-01-28T14:12:14+00:00</updated>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.2"/>
    <summary>### Bug fixes:

* Newly created guest cannot login (#3373) @dennisreimann
* Guest users shouldn't see Payouts menu item @NicolasDorier
* Add plugins link in server nav @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.4.2</title>
    <updated>2022-01-28T13:58:43Z</updated>
    <dc:date>2022-01-28T13:58:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.0-pre6</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.0-pre6"/>
    <summary></summary>
    <title>cryptoadvance/specter-desktop: v1.8.0-pre6</title>
    <updated>2022-01-28T12:04:34Z</updated>
    <dc:date>2022-01-28T12:04:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.3.1</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.3.1"/>
    <summary>This is a minor bug fix release for an issue that may cause historical mempool graphs to appear incorrectly after upgrading from v2.2 - we recommend upgrading directly to v2.3.1 instead of v2.3.0 if you are currently using v2.2

### Changelog

* Don't set `autocommit=0` flag when migrating SQL database 

**Full Changelog**: https://github.com/mempool/mempool/compare/v2.3.0...v2.3.1</summary>
    <title>mempool/mempool: v2.3.1</title>
    <updated>2022-01-28T04:48:57Z</updated>
    <dc:date>2022-01-28T04:48:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.1"/>
    <summary>Bug fixes:

Fix: Existing Lightning addresses were not loaded (#3367 #3368) @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.4.1</title>
    <updated>2022-01-28T01:48:32Z</updated>
    <dc:date>2022-01-28T01:48:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.0"/>
    <summary>BTCPay Server started in August 2017 and meanwhile has been evolving incrementally thanks to the feedback of the community.

It was finally time to cleanup the UI/UX and technical debt we accumulated over the years.

We enumerate here a lot of new features and bug fixes, but we do not enumerate the UI/UX changes, we dedicated a separate [blog post for this topic](https://blog.btcpayserver.org/btcpay-server-1-4-0/).

The heavy lifting of this work has been mainly brought to you thanks to the collaboration of @dstrukt and @dennisreimann.
We thank also all the testers we brought us feedback, and all of you who participated in the weekly design meetings.

The work on the UI/UX is however never over and we will keep on improving it based on your feedback.

Note: If you are using our docker deployment on a raspberry pi 4, there is a small chance your docker version does not support the new docker image.
If you have any issue with raspberry pi 4, you need to update your docker version following steps on [this blog post](https://blog.samcater.com/fix-workaround-rpi4-docker-libseccomp2-docker-20/).
Note that you do not need to update libseccomp2, our update process does this for you automatically.

### New features:

* Greenfield: Add a `missingPermission` field to 403 errors (#3195) @NicolasDorier @woutersamaey
* Support for new TLS version of SMTP server (#3202) @NicolasDorier
* Greenfield: Added field &quot;StoreId&quot; to a Payment Request (#3223) @woutersamaey
* Greenfield: Can create a payment request without specifying currency (would then use store's default currency) (#3222) @NicolasDorier
* Add login code, for easy login to BTCPay Server via a mobile device (#2504) @Kukks
* Add LNUrl Auth support as second factor auth (#3083) @Kukks
* Batch unarchive invoices (#3264) @dennisreimann

### Bug fixes:

* Fix: BTCPay would crash if running in an unexpected working directory (#1894 #3295) @NicolasDorier
* Fix: Can't add security device on safari (#3197 #3322) @Kukks
* If a root path was used, the Notification dropdown wouldn't automatically fetch new notifications @NicolasDorier
* Clipboard wasn't working over http, mainly used in at home setups (#3296) @dennisreimann
* Greenfield: Creating a payment request would fail if expiry was specified (#3222) @NicolasDorier
* In wallet's receive if you copy a p2sh address, it would be truncated (#3218) @dennisreimann
* Shopify: Fix partial payments. Generate an invoice based on outstanding amount instead of total. (#3193 #3203) @Kukks
* BTCPay Server instance sends 2 emails after invoice is set as expired, paid or confirmed/complete (#968) @NicolasDorier
* Greenfield: Payment Method update was impossible if using internal ln node while being guest (#2860) @NicolasDorier
* Checkout: Error when changing payment method in invoice (#3075) @dennisreimann
* Greenfield: `created` field of payment request should be a unix timestamp @woutersamaey (#3221)
* Fix LN Node availability check (#3189) @dennisreimann
* Fix CSP violations in payment button page (#3334) @dennisreimann

### Improvements:

* Use the invoice terminology Processing/Settled in the UI rather than Paid/Confirmed/Complete.
* Add loading indicator for &quot;Pay&quot; button in POS terminal app (#3342 #3336) @ubolator
* Do not use uppercase in urls (#921) @NicolasDorier
* Add a copy Tor URL in the footer (#2692 #3290) @dennisreimann
* Improve permissions error messages of Greenfield API (#3256 #3212 #3220 #3204 #2795) @NicolasDorier @Kukks
* Greenfield API: Remove redundant/unused parameters in payment methods @ubolator
* Greenfield: Getting the fee rate should work with CanViewStoreSettings permission (#3217) @woutersamaey
* Add suggestion list for currency text inputs (#3347) @NicolasDorier
* Add warning about the security tradeoff the paybutton (#3340) @NicolasDorier
* Migrating from .NET 3.1 to .NET 6.0 @NicolasDorier
* Use C# 10.0 @NicolasDorier

### Breaking changes:

* If you activated plugins, you will need to update them.
* We removed support for ETH/ERC20
* Greenfield: `created` field of payment request should be a unix timestamp @woutersamaey (#3221)
* Some Rapsberry PI 4 deployment with old version of docker might experience issues (see [this blog post](https://blog.samcater.com/fix-workaround-rpi4-docker-libseccomp2-docker-20/) to update docker, libseccomp2 is already updated as part of our update flow)
</summary>
    <title>btcpayserver/btcpayserver: v1.4.0</title>
    <updated>2022-01-27T13:26:33Z</updated>
    <dc:date>2022-01-27T13:26:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.8.2</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.8.2"/>
    <summary>This is a follow-up release that temporarily deactivates the `DAO needs to resync` popup to prevent presenting too many false positives to the user. It will be re-enabled again in the release after.

See https://github.com/bisq-network/bisq/commit/013dc982366ba348bcc8c179caad7dc498bc8535.

Here are the release notes from v1.8.1:

## Release notes
This release improves mediation, extends API capabilities (still in beta), and fixes lots of smaller issues across the board.

### Improvements
- [Add option to automatically send log files to mediators in chat](https://github.com/bisq-network/bisq/pull/5953)
- [Improve user experience once mediation has been accepted by both parties](https://github.com/bisq-network/bisq/pull/5870)
- [Enable fractional percentages in dispute payout calculation field](https://github.com/bisq-network/bisq/pull/5960)
- [SEPA Account: Make account name and accepted countries editable](https://github.com/bisq-network/bisq/pull/5930)
- [Add `Edit offer` button in offer book for own offers](https://github.com/bisq-network/bisq/pull/5955)
- [Wording for BSQ swap cancellation popups &amp; withdrawal prompt](https://github.com/bisq-network/bisq/pull/5957)
- [Increase dark mode contrast for fillable fields](https://github.com/bisq-network/bisq/pull/5962)
- [Adapt edit explorer indicator styling](https://github.com/bisq-network/bisq/pull/5950)

### Bug fixes
- [Fix trade fee validation bug for multiple BSQ UTXOs inputs](https://github.com/bisq-network/bisq/pull/5949)
- [Fix fat finger protection during offer creation](https://github.com/bisq-network/bisq/pull/5914)
- [Fix exception while taking offer when an account has no selected currency](https://github.com/bisq-network/bisq/pull/5933)
- [OfferBook: Show complete text of action button if enough space is available](https://github.com/bisq-network/bisq/pull/5907)
- [Reset the icon color properly for market price margin information/warning](https://github.com/bisq-network/bisq/pull/5931)

### Development &amp; Documentation
- [API: Add methods `failtrade`, `unfailtrade`](https://github.com/bisq-network/bisq/pull/5961)
- [API: Rename method `keepfunds` to `closetrade`](https://github.com/bisq-network/bisq/pull/5951)
- [API: Deprecate `getmyoffer`](https://github.com/bisq-network/bisq/pull/5938)
- [API: Fix CLI's `--payment-account-id` option name, document `createcryptopaymentacct`](https://github.com/bisq-network/bisq/pull/5939)
- [API: XMR/BTC trading pair support](https://github.com/bisq-network/bisq/pull/5893)
- [API: Support and test creation of Swift accounts](https://github.com/bisq-network/bisq/pull/5852)
- [API: `getoffer` &amp; `gettrade` support for BSQ swaps](https://github.com/bisq-network/bisq/pull/5827)
- [Improve DAO state store persistence and statistics logging](https://github.com/bisq-network/bisq/pull/5935)
- [CI Security: Use Github actions via sha1 (not tags) and keep them updated via dependabot](https://github.com/bisq-network/bisq/pull/5943)
- [Upgrade log4j 2.15.0 =&gt; 2.17.0](https://github.com/bisq-network/bisq/pull/5928)
- [Set Gradle java src &amp; target compatibility to version 11](https://github.com/bisq-network/bisq/pull/5860)
- [Fixed annoying semicolon colors.](https://github.com/bisq-network/bisq/pull/5892)
- [Make all scripts executable](https://github.com/bisq-network/bisq/pull/5879)
- [Add @KanoczTomas BTC node with onion v3 address](https://github.com/bisq-network/bisq/pull/5918)

### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.8.2.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.8.2-all.jar
The output need to match the value from the Bisq-1.8.2.jar.txt file.

There are three hashes within the Bisq-1.8.2.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.5 and the v1.8.2 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.8.2.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:
- @alvasw 
- @cbeams
- @cd2357  
- @chimp1984 
- @dbast
- @Emzy
- @ghubstan 
- @jmacxx 
- @KanoczTomas 
- @MwithM 
- @nutel65
- @ripcurlx 
- @sqrrm 
- @stejbac 
- @xyzmaker123 

A special thanks to our first time contributors:
- @dbast
  - [CI Security: Use Github actions via sha1 (not tags) and keep them updated via dependabot](https://github.com/bisq-network/bisq/pull/5943)
  - [Update Gradle wrapper to 7.3.3](https://github.com/bisq-network/bisq/pull/5936)
- @nutel65 
  - [Fixed annoying semicolon colors](https://github.com/bisq-network/bisq/pull/5892)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.8.2</title>
    <updated>2022-01-24T10:03:34Z</updated>
    <dc:date>2022-01-24T10:03:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.6-beta</id>
    <link href="https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.6-beta"/>
    <summary>## Release notes

### Bug Fixes

* **lnd:** improve handling for detecting wallet state ([d0c1702](https://github.com/LN-Zap/zap-desktop/commit/d0c17028796decfc0803a7330d839e22e3015aa9))

### Changelog
The full list of changes since 0.7.5-beta can be found here:

https://github.com/LN-Zap/zap-desktop/compare/v0.7.5-beta...v0.7.6-beta

## Verifying the Release

Please refer to [our documentation](https://github.com/LN-Zap/zap-desktop#documentation) for [instructions on how to verify the release](https://github.com/LN-Zap/zap-desktop/blob/master/docs/SIGNATURES.md).</summary>
    <title>LN-Zap/zap-desktop: v0.7.6-beta</title>
    <updated>2022-01-23T14:01:34Z</updated>
    <dc:date>2022-01-23T14:01:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.20</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.20"/>
    <summary>## Main changes

### Payment expiry can be modified

Invoice default expiry is still 1 week, but can now be modified in the payment options screen.

### Prevent sending more than twice the requested amount

This is to prevent a frustrating scenario for the user where the app will let you overpay more than twice an invoice, even though we know the receiving node will most certainly reject the payment in accordance to BOLT11. (See #232)

### Full list of changes

- **app**: https://github.com/ACINQ/phoenix/compare/android-legacy-v1.4.19...android-legacy-v1.4.20

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.20</title>
    <updated>2022-01-20T19:19:18Z</updated>
    <dc:date>2022-01-20T19:19:18Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.11</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.11"/>
    <summary>Umbrel 0.4.11 brings 4 brand new apps in the Umbrel App Store — ItchySats, Lightning Shell, Helipad, and SatSale, updated apps, latest Electrum server, performance improvements, bug fixes, and more.

Thanks to @prusnak and @tlindi for helping with the electrs update and @nevets963 for reporting missing JWT auth on some API endpoints 👏💜</summary>
    <title>getumbrel/umbrel: v0.4.11</title>
    <updated>2022-01-17T13:12:32Z</updated>
    <dc:date>2022-01-17T13:12:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.3.0</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.3.0"/>
    <summary>This release introduces a new design for our historical mempool chart legend and API documentation, and improves support for Bitcoin Core v22 and Taproot transactions, among many other enhancements and fixes. All users are encouraged to upgrade.

&lt;img width=&quot;1234&quot; alt=&quot;Screen Shot 2022-01-12 at 20 13 28&quot; src=&quot;https://user-images.githubusercontent.com/232186/149650209-80434411-8c4d-4a0f-a573-2684823648fe.png&quot;&gt;

## Notes
* Requires Node.js v16.10.0, npm 7.24.0, MariaDB v10.5
* Requires manually updating nginx.conf if not using Docker
* Docker installation config vars have changed, see README
* MySQL tables now automatically created and/or migrated
* Bitcoin, Liquid, and Bisq now hosted on separate FQDNs

## Highlights
* Replaced chartist library with apache/echarts (#738)
* Upgraded to Angular 13.1 and NgBootstrap 11 (#1124)
* Fixed display of mempool graphs data on time axis (#1004)
* Fixed off-by-one fee rate tier in mempool graphs data (#908)
* Fixed addresses not displaying using Bitcoin Core v22 (#779)
* Improved data resolution of historical mempool graphs (#1044)
* Improved layout design of API docs page (#994, #1027)
* Added new chart timespans for 2 year / 3 year (#905)
* Added ability to drag blockchain horizontally (#1024)
* Added ability to highlight outputs using vout index (#880)
* Added web form to Broadcast Transaction using raw hex (#881)
* Added tag for transactions that spend Taproot outputs (#918)
* Added version and locktime data to transaction page (#930)
* Added halving and event countdown with fireworks (#912, #923)
* Added locales Romanian, Macedonian and Thai (#791, #792, #942)
* Added graph for L-BTC in circulation on Liquid dashboard (#799)
* Added support for Liquid Testnet (#1052, #1053, #1131)

## Changelog
* Fix API docs examples for Raspberry Pi users using romanz/electrs by @wiz in https://github.com/mempool/mempool/pull/772
* Feature: New charts library. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/738
* Disable mouseover legend for mobile users. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/789
* Fix RTL issues by @TechMiX in https://github.com/mempool/mempool/pull/782
* Add new locale: Romanian (ro) by @wiz in https://github.com/mempool/mempool/pull/791
* Add new locale: Macedonian (mk) by @wiz in https://github.com/mempool/mempool/pull/792
* Set canonical URLs for new 3 site structure by @wiz in https://github.com/mempool/mempool/pull/775
* Credit Romanian and Macedonian translators. by @softsimon in https://github.com/mempool/mempool/pull/793
* Pulled from transifex by @softsimon in https://github.com/mempool/mempool/pull/794
* Handle changes to address RPC api in bitcoin core 22 by @softsimon in https://github.com/mempool/mempool/pull/779
* Always use local hostname for API examples. by @softsimon in https://github.com/mempool/mempool/pull/800
* Transifex language fixes to Romanian, Makedonian and Hungarian. by @softsimon in https://github.com/mempool/mempool/pull/801
* Add Zeus LN as Community Integration by @wiz in https://github.com/mempool/mempool/pull/803
* UI/UX: Fix charts css styling. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/795
* Remove warden from list of Community Integrations by @wiz in https://github.com/mempool/mempool/pull/804
* Update the URL for Unchained Capital to unchained.com by @wiz in https://github.com/mempool/mempool/pull/805
* Upgrading to Angular 12 and NgBootstrap 10 by @softsimon in https://github.com/mempool/mempool/pull/806
* Liquid L-BTC widgets (Backend) by @softsimon in https://github.com/mempool/mempool/pull/799
* Update production backend configuration files by @wiz in https://github.com/mempool/mempool/pull/809
* L-BTC in circulation dashboard widgete by @softsimon in https://github.com/mempool/mempool/pull/810
* Handle search for Liquid block hashes in search bar. by @softsimon in https://github.com/mempool/mempool/pull/812
* Fix for fee rounding not using locale by @softsimon in https://github.com/mempool/mempool/pull/813
* Check for data to possibly fix Liquid test by @softsimon in https://github.com/mempool/mempool/pull/819
* UI/UX: Add inverted feature to mempool fee chart. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/820
* Adding POST /tx API to bitcoind mode by @softsimon in https://github.com/mempool/mempool/pull/821
* Fix tooltip mempool chart hover selection. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/823
* Sort block transactions first by height and then time by @softsimon in https://github.com/mempool/mempool/pull/814
* L-BTC graph: Minor styling update by @softsimon in https://github.com/mempool/mempool/pull/824
* Fix the focus effect on the mempool graph. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/825
* Fix for stuck Bisq transaction page when filtering by @softsimon in https://github.com/mempool/mempool/pull/826
* Change total sum column to fixed color. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/831
* Remove circle symbols when hovering the series. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/837
* Fix parse numbers localized. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/838
* Fix lint 'no-shadowed-variable'. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/839
* Fix total percentage bar value. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/843
* Fix confirmations button positioning. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/840
* Remove vbytesPipe from series data. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/846
* Add mark line to mempool chart. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/845
* Update README preview image by @softsimon in https://github.com/mempool/mempool/pull/848
* Use MEMPOOL_BLOCKS_AMOUNT config in the frontend by @softsimon in https://github.com/mempool/mempool/pull/853
* Display mempool graph on the Liquid dashboard by @softsimon in https://github.com/mempool/mempool/pull/855
* Remove sitemap.xml from robots.txt by @wiz in https://github.com/mempool/mempool/pull/857
* Display correct amount of mempool blocks on mobile by @softsimon in https://github.com/mempool/mempool/pull/856
* Add mempool chart filtering. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/847
* UI/UX: Make tooltip looks bigger on mempool fee chart. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/862
* Set the iOS status bar when viewing as progressive web app by @wiz in https://github.com/mempool/mempool/pull/866
* UI/UX: Fix fee rate tiers on graphs. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/867
* UI/UX: Fix mempool chart tooltip at dashboard component. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/868
* Ref: Fix typo. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/874
* Broadcast transaction form by @softsimon in https://github.com/mempool/mempool/pull/879
* Add output ID to transaction info by @softsimon in https://github.com/mempool/mempool/pull/880
* Fix ws api docs by @knorrium in https://github.com/mempool/mempool/pull/887
* Add instructions on how to contribute to the Frontend codebase by @knorrium in https://github.com/mempool/mempool/pull/894
* e2e BASE_MODULE cleanup by @knorrium in https://github.com/mempool/mempool/pull/893
* Handle new type of Electrum Server error. by @softsimon in https://github.com/mempool/mempool/pull/884
* UI/UX: Fix height inconsistencies between components. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/873
* UI/UX: Fix Liquid.network missing tooltip series name. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/892
* UI/UX: Fix buttons positions at graphs page. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/890
* UI/UX: Add 2y and 3y statistics time span. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/905
* UI/UX: Fix rtl mobile header menu. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/897
* Enable address autocomplete for all networks by @wiz in https://github.com/mempool/mempool/pull/916
* Doc: Fix nginx package name. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/902
* Adding Taproot transaction tag by @softsimon in https://github.com/mempool/mempool/pull/918
* Display previous output types by @softsimon in https://github.com/mempool/mempool/pull/920
* Fix menu button styles. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/921
* Localization: Add localize strings at echarts tooltip. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/898
* Update mainnet partial address tests by @knorrium in https://github.com/mempool/mempool/pull/922
* Add special blocks animation: fireworks. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/912
* Adding taproot countdown by @softsimon in https://github.com/mempool/mempool/pull/923
* Fix: mempool empty block. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/932
* Adding version and locktime to transaction details by @softsimon in https://github.com/mempool/mempool/pull/930
* Fix local dev proxy by @knorrium in https://github.com/mempool/mempool/pull/928
* Display lower &lt;1 s/vB fee rate tiers for Liquid by @softsimon in https://github.com/mempool/mempool/pull/910
* Handle recent difficulty adjustment estimate gracefully by @softsimon in https://github.com/mempool/mempool/pull/941
* Fix for empty mempool block position by @softsimon in https://github.com/mempool/mempool/pull/940
* Fix: op_return tooltip position. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/935
* Enable i18n locale Thai (th) by @wiz in https://github.com/mempool/mempool/pull/942
* Delete nginx logs after 10 days and explain this in our Privacy Policy by @wiz in https://github.com/mempool/mempool/pull/943
* Post TX API for HTML forms by @softsimon in https://github.com/mempool/mempool/pull/881
* Fix time span menu styles. by @MiguelMedeiros in https://github.com/mempool/mempool/pull/950
* Fixing Bisq transactions page and skeleton loaders by @softsimon in https://github.com/mempool/mempool/pull/954
* Moving chart loading spinner to chart component by @softsimon in https://github.com/mempool/mempool/pull/944
* Extracting i18n from templates by @softsimon in https://github.com/mempool/mempool/pull/956
* Merged block header and markets i18n strings by @softsimon in https://github.com/mempool/mempool/pull/957
* Adding missing loading spinner to L-BTC peg graph by @softsimon in https://github.com/mempool/mempool/pull/959
* Handle database disabled config when running Liquid by @softsimon in https://github.com/mempool/mempool/pull/963
* Remodeling how historical fees are stored and presented. by @softsimon in https://github.com/mempool/mempool/pull/961
* Update i18n strings from Transifex by @wiz in https://github.com/mempool/mempool/pull/968
* Square -&gt; Spiral 🌀 by @wiz in https://github.com/mempool/mempool/pull/967
* Center the Enterprise Sponsor logos on About page by @wiz in https://github.com/mempool/mempool/pull/970
* Display missing taproot inner script by @softsimon in https://github.com/mempool/mempool/pull/974
* Set Dockerfiles to use Node v16.10.0 by @knorrium in https://github.com/mempool/mempool/pull/980
* Adding Core Contributors on the About page by @softsimon in https://github.com/mempool/mempool/pull/982
* Update README for upcoming v2.3.0 release by @wiz in https://github.com/mempool/mempool/pull/984
* Move npm deps in package.json to fix `npm install --prod` by @wiz in https://github.com/mempool/mempool/pull/981
* Fix string for Project Staff on About page by @wiz in https://github.com/mempool/mempool/pull/983
* Pin node version on e2e GHA by @knorrium in https://github.com/mempool/mempool/pull/988
* Update Cypress dependencies by @knorrium in https://github.com/mempool/mempool/pull/989
* Add .nvmrc file by @knorrium in https://github.com/mempool/mempool/pull/991
* Fixing broken Liquid peg-in and peg-out links by @softsimon in https://github.com/mempool/mempool/pull/986
* Upgrading frontend to Angular 13 by @softsimon in https://github.com/mempool/mempool/pull/993
* Fix graph issue in #992 by @hunicus in https://github.com/mempool/mempool/pull/995
* Upgrading backend libraries by @softsimon in https://github.com/mempool/mempool/pull/997
* Tweak upgrade script to search for remote origin branches by @wiz in https://github.com/mempool/mempool/pull/996
* Move /api to /docs/api by @hunicus in https://github.com/mempool/mempool/pull/994
* Pulling from Transifex by @softsimon in https://github.com/mempool/mempool/pull/998
* Documentation i18n title by @softsimon in https://github.com/mempool/mempool/pull/999
* Add Liquid peg in and peg out tests by @knorrium in https://github.com/mempool/mempool/pull/1000
* Extracting updated i18n strings by @softsimon in https://github.com/mempool/mempool/pull/1001
* Improve x-axis labels and graph data ticks by @nymkappa in https://github.com/mempool/mempool/pull/1004
* Add Blockstream as Enterprise Sponsor by @wiz in https://github.com/mempool/mempool/pull/1008
* Tweak the graph x-axis label date formatting for better i18n by @wiz in https://github.com/mempool/mempool/pull/1009
* Fixing broken RBF alert by @softsimon in https://github.com/mempool/mempool/pull/1011
* Correcting CPFP button position on mobile by @softsimon in https://github.com/mempool/mempool/pull/1012
* Add tests for RBF txs by @knorrium in https://github.com/mempool/mempool/pull/1015
* Revert &quot;Remove dead code FeeDistributionGraphComponent&quot; by @softsimon in https://github.com/mempool/mempool/pull/1017
* Correcting minor interface typing error by @softsimon in https://github.com/mempool/mempool/pull/1019
* UX: Fixing overflowing unconfidential Liquid address by @softsimon in https://github.com/mempool/mempool/pull/1018
* Add failing test for Liquid unconfidential address layout issue by @knorrium in https://github.com/mempool/mempool/pull/1016
* User can drag the blockchain blocks horizontally with the mouse by @nymkappa in https://github.com/mempool/mempool/pull/1024
* Update GitHub issue templates to redirect support requests to chat by @wiz in https://github.com/mempool/mempool/pull/1031
* Update links on About page by @wiz in https://github.com/mempool/mempool/pull/1032
* Revamp docs layout by @hunicus in https://github.com/mempool/mempool/pull/1027
* Extracting i18n string by @softsimon in https://github.com/mempool/mempool/pull/1033
* Switch the 24h chart to 1 min data ticks by @nymkappa in https://github.com/mempool/mempool/pull/1038
* Liquid icons api by @softsimon in https://github.com/mempool/mempool/pull/1010
* Automated database creation and migration by @softsimon in https://github.com/mempool/mempool/pull/1003
* Pulled from transifex by @softsimon in https://github.com/mempool/mempool/pull/1043
* Increase graphs data resolution by @nymkappa in https://github.com/mempool/mempool/pull/1044
* Add support for liquidtestnet in production backend and nginx by @wiz in https://github.com/mempool/mempool/pull/1053
* Update Specter logo on About page by @wiz in https://github.com/mempool/mempool/pull/1056
* Tweak hover effect on profile photos on About page by @wiz in https://github.com/mempool/mempool/pull/1057
* Adding Liquid Testnet as frontend option by @softsimon in https://github.com/mempool/mempool/pull/1052
* Fixing misplaced Unknown text after the Coinbase by @softsimon in https://github.com/mempool/mempool/pull/1060
* Fix backend support for 'liquidtestnet' network by @softsimon in https://github.com/mempool/mempool/pull/1062
* Add missing liquidtestnet backend to upgrade script by @wiz in https://github.com/mempool/mempool/pull/1064
* Block navigation routing fix by @softsimon in https://github.com/mempool/mempool/pull/1065
* Refactoring the Liquid and LiquidTestnet check to a common function. by @softsimon in https://github.com/mempool/mempool/pull/1066
* Fixing missing assets data for Liquid Testnet native asset by @softsimon in https://github.com/mempool/mempool/pull/1080
* Liquid testnet navbar color by @softsimon in https://github.com/mempool/mempool/pull/1067
* Liquid support to the Graph fee filter dropdown by @softsimon in https://github.com/mempool/mempool/pull/1079
* Transifex pull by @softsimon in https://github.com/mempool/mempool/pull/1083
* Tweak html description meta tags / SEO service page titles by @wiz in https://github.com/mempool/mempool/pull/1084
* Add Citadel as Community Integration on About page by @wiz in https://github.com/mempool/mempool/pull/1085
* Transifex pull by @softsimon in https://github.com/mempool/mempool/pull/1086
* Update production configurations + README for v2.3 by @wiz in https://github.com/mempool/mempool/pull/1081
* Remove all references to SQL tables import by @softsimon in https://github.com/mempool/mempool/pull/1087
* Transifex pull by @softsimon in https://github.com/mempool/mempool/pull/1092
* Transifex pull by @softsimon in https://github.com/mempool/mempool/pull/1093
* Transifex pull by @softsimon in https://github.com/mempool/mempool/pull/1099
* Bisq: Adding missing privacy policy, locale selector by @softsimon in https://github.com/mempool/mempool/pull/1102
* Making frontend network URLs configurable by @softsimon in https://github.com/mempool/mempool/pull/1100
* Fix matomo hostname for bisq.markets html by @wiz in https://github.com/mempool/mempool/pull/1103
* Ending support for /bisq /liquid and /liquidtestnet by @softsimon in https://github.com/mempool/mempool/pull/1104
* Pull translated strings from Transifex by @wiz in https://github.com/mempool/mempool/pull/1107
* Pull translated strings from Transifex by @wiz in https://github.com/mempool/mempool/pull/1109
* Bumping mempool.js lib to 2.3.0 by @softsimon in https://github.com/mempool/mempool/pull/1114
* Cap extreme vbytes_per_second values by @nymkappa in https://github.com/mempool/mempool/pull/1110
* INDEX 'added' in statistics table by @nymkappa in https://github.com/mempool/mempool/pull/1112
* Pull translated strings from Transifex by @wiz in https://github.com/mempool/mempool/pull/1116
* Mouse scroll is not captured anymore by graphs in the dashboard page by @nymkappa in https://github.com/mempool/mempool/pull/1118
* statistics: `ORDER BY id` =&gt; `ORDER BY added` by @nymkappa in https://github.com/mempool/mempool/pull/1119
* Link the git commit hash to GitHub on the About page by @knorrium in https://github.com/mempool/mempool/pull/1125
* Bumping minor Angular version and major ngBootstrap by @softsimon in https://github.com/mempool/mempool/pull/1124
* Add production Tor configuration to repo by @wiz in https://github.com/mempool/mempool/pull/1111
* Wrap migration with transactions by @nymkappa in https://github.com/mempool/mempool/pull/1121
* Adding current language to network dropdown links by @softsimon in https://github.com/mempool/mempool/pull/1113
* Improve nginx caching and use redirects for i18n by @wiz in https://github.com/mempool/mempool/pull/1129
* Update liquidtestnet docs by @hunicus in https://github.com/mempool/mempool/pull/1131
* Removing statistics cache and setting headers by @softsimon in https://github.com/mempool/mempool/pull/1130
* Disable graph touch interaction in dashboard on mobile so we can scroll properly by @nymkappa in https://github.com/mempool/mempool/pull/1133
* Add nginx cache warmer script for production use by @wiz in https://github.com/mempool/mempool/pull/1134
* Updates to the docker-compose setup by @knorrium in https://github.com/mempool/mempool/pull/1120
* Fix typo in nginx-cache-warmer script by @wiz in https://github.com/mempool/mempool/pull/1135
* Fix Docker README by @knorrium in https://github.com/mempool/mempool/pull/1136
* Order by native `statistics.added` field for better query performances by @nymkappa in https://github.com/mempool/mempool/pull/1139
* Remove unused fields from statistics queries since we don't use them in the front end by @nymkappa in https://github.com/mempool/mempool/pull/1141
* Fix newsyslog.conf owner and pidfile location by @wiz in https://github.com/mempool/mempool/pull/1140
* Fixing high vulnerabilities by @softsimon in https://github.com/mempool/mempool/pull/1143
* Update production nginx.conf resource cache times by @wiz in https://github.com/mempool/mempool/pull/1144
* Update nginx.conf for mempool.space services APIs by @wiz in https://github.com/mempool/mempool/pull/1142
* Adding translators to About page by @softsimon in https://github.com/mempool/mempool/pull/1132
* Fix HTML theme color for iOS status bar by @wiz in https://github.com/mempool/mempool/pull/1145
* Adding missing Liquid Testnet Status page by @softsimon in https://github.com/mempool/mempool/pull/1148
* Utilize gettxout to display spent/unspent by @softsimon in https://github.com/mempool/mempool/pull/1147
* Pull translated strings from Transifex by @wiz in https://github.com/mempool/mempool/pull/1149

## New Contributors
* @hunicus made their first contribution in https://github.com/mempool/mempool/pull/995
* @nymkappa made their first contribution in https://github.com/mempool/mempool/pull/1004

**Full Changelog**: https://github.com/mempool/mempool/compare/v2.2.2...v2.3.0</summary>
    <title>mempool/mempool: v2.3.0</title>
    <updated>2022-01-16T08:13:39Z</updated>
    <dc:date>2022-01-16T08:13:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.16</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.16"/>
    <summary>* ADD: show frozen amount on send screen, warn in case of send MAX or amount exceeds balance 
* ADD: MZN Fiat 
* ADD: support truncated words during slip39 wallet import 
* FIX: Show alert when unsupported server is attempted to be saved 
* FIX: Incorrect side of transactions displayed when both send and receive wallets are on same device </summary>
    <title>BlueWallet/BlueWallet: v6.2.16</title>
    <updated>2022-01-03T22:59:22Z</updated>
    <dc:date>2022-01-03T22:59:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.4</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.4"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#094-dec-30-2021</summary>
    <title>romanz/electrs: v0.9.4</title>
    <updated>2022-01-03T16:40:56Z</updated>
    <dc:date>2022-01-03T16:40:56Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits-legend/releases/tag/0.4.0</id>
    <link href="https://github.com/lnbits/lnbits-legend/releases/tag/0.4.0"/>
    <summary></summary>
    <title>lnbits/lnbits-legend: 0.4.0</title>
    <updated>2021-12-21T20:43:35Z</updated>
    <dc:date>2021-12-21T20:43:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.104</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.104"/>
    <summary>## API Updates
 * A `PaymentFailed` event is now provided to indicate a payment has failed
   fully. This event is generated either after
   `ChannelManager::abandon_payment` is called for a given payment, or the
   payment times out, and there are no further pending HTLCs for the payment.
   This event should be used to detect payment failure instead of
   `PaymentPathFailed::all_paths_failed`, unless no payment retries occur via
   `ChannelManager::retry_payment` (#1202).
 * Payment secrets are now generated deterministically using material from
   the new `KeysInterface::get_inbound_payment_key_material` (#1177).
 * A `PaymentPathSuccessful` event has been added to ease passing success info
   to a scorer, along with a `Score::payment_path_successful` method to accept
   such info (#1178, #1197).
 * `Score::channel_penalty_msat` has additional arguments describing the
   channel's capacity and the HTLC amount being sent over the channel (#1166).
 * A new log level `Gossip` has been added, which is used for verbose
   information generated during network graph sync. Enabling the
   `max_level_trace` feature or ignoring `Gossip` log entries reduces log
   growth during initial start up from many GiB to several MiB (#1145).
 * The `allow_wallclock_use` feature has been removed in favor of only using
   the `std` and `no-std` features (#1212).
 * `NetworkGraph` can now remove channels that we haven't heard updates for in
   two weeks with `NetworkGraph::remove_stale_channels{,with_time}`. The first
   is called automatically if a `NetGraphMsgHandler` is passed to
   `BackgroundProcessor::start` (#1212).
 * `InvoicePayer::pay_pubkey` was added to enable sending &quot;keysend&quot; payments to
   supported recipients, using the `InvoicePayer` to handle retires (#1160).
 * `user_payment_id` has been removed from `PaymentPurpose`, and
   `ChannelManager::create_inbound_payment{,_for_hash}` (#1180).
 * Updated documentation for several `ChannelManager` functions to remove stale
   references to panics which no longer occur (#1201).
 * The `Score` and `LockableScore` objects have moved into the
   `routing::scoring` module instead of being in the `routing` module (#1166).
 * The `Time` parameter to `ScorerWithTime` is no longer longer exposed,
   instead being fixed based on the `std`/`no-std` feature (#1184).
 * `ChannelDetails::balance_msat` was added to fetch a channel's balance
   without subtracting the reserve values, lining up with on-chain claim amounts
   less on-chain fees (#1203).
 * An explicit `UserConfig::accept_inbound_channels` flag is now provided,
   removing the need to set `min_funding_satoshis` to &gt; 21 million BTC (#1173).
 * Inbound channels that fail to see the funding transaction confirm within
   2016 blocks are automatically force-closed with
   `ClosureReason::FundingTimedOut` (#1083).
 * We now accept a channel_reserve value of 0 from counterparties, as it is
   insecure for our counterparty but not us (#1163).
 * `NetAddress::OnionV2` parsing was removed as version 2 onion services are no
   longer supported in modern Tor (#1204).
 * Generation and signing of anchor outputs is now supported in the
   `KeysInterface`, though no support for them exists in the channel itself (#1176)

## Bug Fixes
 * Fixed a race condition in `InvoicePayer` where paths may be retried after
   the retry count has been exceeded. In this case the
   `Event::PaymentPathFailed::all_paths_failed` field is not a reliable payment
   failure indicator. There was no acceptable alternative indicator,
   `Event::PaymentFailed` as been added to provide one (#1202).
 * Reduced the blocks-before-timeout we expect of outgoing HTLCs before
   refusing to forward. This check was overly strict and resulted in refusing
   to forward som HTLCs to a next hop that had a lower security threshold than
   us (#1119).
 * LDK no longer attempt to update the channel fee for outbound channels when
   we cannot afford the new fee. This could have caused force-closure by our
   channel counterparty (#1054).
 * Fixed several bugs which may have prevented the reliable broadcast of our
   own channel announcements and updates (#1169).
 * Fixed a rare bug which may have resulted in spurious route finding failures
   when using last-hop hints and MPP with large value payments (#1168).
 * `KeysManager::spend_spendable_outputs` no longer adds a change output that
   is below the dust threshold for non-standard change scripts (#1131).
 * Fixed a minor memory leak when attempting to send a payment that fails due
   to an error when updating the `ChannelMonitor` (#1143).
 * Fixed a bug where a `FeeEstimator` that returns values rounded to the next
   sat/vbyte may result in force-closures (#1208).
 * Handle MPP timeout HTLC error codes, instead of considering the recipient to
   have sent an invalid error, removing them from the network graph (#1148)

## Serialization Compatibility
 * All above new events/fields are ignored by prior clients. All above new
   events/fields are not present when reading objects serialized by prior
   versions of the library.
 * Payment secrets are now generated deterministically. This reduces the memory
   footprint for inbound payments, however, newly-generated inbound payments
   using `ChannelManager::create_inbound_payment{,_for_hash}` will not be
   receivable using versions prior to 0.0.104.
   `ChannelManager::create_inbound_payment{,_for_hash}_legacy` are provided for
   backwards compatibility (#1177).
 * `PaymentPurpose::InvoicePayment::user_payment_id` will be 0 when reading
   objects written with 0.0.104 when read by 0.0.103 and previous (#1180).

In total, this release features 51 files changed, 5356 insertions, 2238
deletions in 107 commits from 9 authors, in alphabetical order:
 * Antoine Riard
 * Conor Okus
 * Devrandom
 * Duncan Dean
 * Elias Rohrer
 * Jeffrey Czyz
 * Ken Sedgwick
 * Matt Corallo
 * Valentine Wallace</summary>
    <title>lightningdevkit/rust-lightning: v0.0.104</title>
    <updated>2021-12-17T23:36:26Z</updated>
    <dc:date>2021-12-17T23:36:26Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.15</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.15"/>
    <summary>* FIX: Sign/Verify crash</summary>
    <title>BlueWallet/BlueWallet: v6.2.15</title>
    <updated>2021-12-15T06:49:39Z</updated>
    <dc:date>2021-12-15T06:49:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.7</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.7"/>
    <summary>### Improvements:

* Update of Bitbank rate provider (#3157) @junderw

### Bug fixes:

* Fix visual bug when decoding PSBT (#3172) @dennisreimann
* Swagger fixes: improve API docs and property types (#3170) @woutersamaey
* Fix copy pay button code (#3175) @dennisreimann
* Fix LN Node availability check (#3189) @dennisreimann
* `available` property of nodes returned by /api/v1/server/info wasn't actually set (ee1a034c0ab7744a2988e5da874084bc7dfa8b73) @NicolasDorier
* Format perk value correctly in crowdfund app (#3141) @bolatovumar
* Invoice page: Dropdown magically disappears (#3167 #3169) @trigger67</summary>
    <title>btcpayserver/btcpayserver: v1.3.7</title>
    <updated>2021-12-14T03:21:10Z</updated>
    <dc:date>2021-12-14T03:21:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.14</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.14"/>
    <summary>* ADD: Send support for Taproot address type
* FIX: Statusbar style on sign/verify 
* FIX: reject unknown segwit versions as invalid address 
* FIX: scan BC-UR Crypto-Account animated 
* FIX: reject unknown segwit versions as invalid address 
* FIX: Multisig Provide signature button not scrollable #4238 
* FIX: open bankid and external explorer</summary>
    <title>BlueWallet/BlueWallet: v6.2.14</title>
    <updated>2021-12-13T16:27:17Z</updated>
    <dc:date>2021-12-13T16:27:17Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.10</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.10"/>
    <summary>Umbrel 0.4.10 brings a brand new app to the Umbrel App Store — Uptime Kuma, support for Boltz swaps in Ride The Lightning app, updated apps including the latest Lightning Terminal app which contains an important security fix, bug fixes, and more.

Thanks to @phaus for packaging Uptime Kuma and @aphex3k for bringing Boltz swaps to Ride The Lightning on Umbrel 👏💜</summary>
    <title>getumbrel/umbrel: v0.4.10</title>
    <updated>2021-12-13T11:59:12Z</updated>
    <dc:date>2021-12-13T11:59:12Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.5-beta</id>
    <link href="https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.5-beta"/>
    <summary>## Release notes

### Features

* add support for lnd 0.14.1 ([25756a5](https://github.com/LN-Zap/zap-desktop/commit/25756a5cf5457625a2a5850a5219e61df01f0649))

### Changelog
The full list of changes since 0.7.4-beta can be found here:

https://github.com/LN-Zap/zap-desktop/compare/v0.7.4-beta...v0.7.5-beta

## Verifying the Release

Please refer to [our documentation](https://github.com/LN-Zap/zap-desktop#documentation) for [instructions on how to verify the release](https://github.com/LN-Zap/zap-desktop/blob/master/docs/SIGNATURES.md).</summary>
    <title>LN-Zap/zap-desktop: v0.7.5-beta</title>
    <updated>2021-12-12T21:14:45Z</updated>
    <dc:date>2021-12-12T21:14:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.8.0</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.8.0"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

## Release notes
This release introduces [BSQ swaps](https://bisq.wiki/BSQ_swaps): an instant, trustless, and cheaper way to exchange BTC with BSQ.
It also ships four new payment methods: ACH Transfer, Domestic Wire Transfer, Tikkie and TransferWise-USD.
In addition, this release significantly reduces resources necessary for parsing DAO blocks. You'll find further improvements and bug fixes across the board!

### Improvements
- BSQ swaps: [1](https://github.com/bisq-network/bisq/pull/5775), [2](https://github.com/bisq-network/bisq/pull/5729), [3](https://github.com/bisq-network/bisq/pull/5886), [4](https://github.com/bisq-network/bisq/pull/5858), [5](https://github.com/bisq-network/bisq/pull/5889)
- [Add payment methods ACH Transfer and Domestic Wire Transfer](https://github.com/bisq-network/bisq/pull/5823)
- [Add payment methods Tikkie and TransferWise-USD](https://github.com/bisq-network/bisq/pull/5821)
- Optimize DAO charts: [1](https://github.com/bisq-network/bisq/pull/5795), [2](https://github.com/bisq-network/bisq/pull/5855)
- [Optimize trade chart view](https://github.com/bisq-network/bisq/pull/5794)
- [Extract persistence of BSQ blocks out of DaoStateStore](https://github.com/bisq-network/bisq/pull/5790)
- [Improve DAO state monitoring](https://github.com/bisq-network/bisq/pull/5782)
- [Improve fee handling](https://github.com/bisq-network/bisq/pull/5826)
- [Improve FilterManager](https://github.com/bisq-network/bisq/pull/5854)
- [Avoid that outdated donation and fee addresses are used.](https://github.com/bisq-network/bisq/pull/5764)
- [Add penalty calculation to dispute agent UI](https://github.com/bisq-network/bisq/pull/5834)
- [Option to not repeat popup message of locked up funds from failed trade](https://github.com/bisq-network/bisq/pull/5771)
- [Confirm button state for BTC seller to be disabled in mediation](https://github.com/bisq-network/bisq/pull/5808)
- [Add &quot;Buy BSQ&quot; button next to trade fee selector](https://github.com/bisq-network/bisq/pull/5055)
- [Improve shutdown process](https://github.com/bisq-network/bisq/pull/5905)
- [Increase trade protocol timeout from 60 sec to 120 sec](https://github.com/bisq-network/bisq/pull/5904)
- [Add Polish translation](https://github.com/bisq-network/bisq/pull/5883)
- Improve trade statistics validation: [1](https://github.com/bisq-network/bisq/pull/5853), [2](https://github.com/bisq-network/bisq/pull/5849)

### Bug fixes
- [Fix calculation &amp; display of Locked Funds](https://github.com/bisq-network/bisq/pull/5813)
- [Fix display of missing Failed Trade tab](https://github.com/bisq-network/bisq/pull/5831)
- [Fix blockchain reorg handling](https://github.com/bisq-network/bisq/pull/5819)
- [Fix incorrect app initialization](https://github.com/bisq-network/bisq/pull/5817)
- [Fix incorrect re-opening of dispute ticket by mailbox message](https://github.com/bisq-network/bisq/pull/5878)
- [Prevent NPE in case delayedPayoutTx is not present (failed trade)](https://github.com/bisq-network/bisq/pull/5797)
- [Include holder name field for Monese &amp; Satispay accounts](https://github.com/bisq-network/bisq/pull/5791)
- [Gracefully handle null data in refresh offer message and log error](https://github.com/bisq-network/bisq/pull/5788)
- [Always use fresh address for MULTI_SIG context to prevent problems with address re-usage when funding](https://github.com/bisq-network/bisq/pull/5885)
- [Fix updating of Locked Balance display](https://github.com/bisq-network/bisq/pull/5842)
- [Fix Exception in Portfolio History when a canceled offer with a different onion address os displayed](https://github.com/bisq-network/bisq/pull/5842)
- [Avoid Log4J &quot;Log4Shell&quot; exploit](https://github.com/bisq-network/bisq/pull/5910)

### Development &amp; Documentation
- Upgrade to Gradle 7.3: [1](https://github.com/bisq-network/bisq/pull/5824), [2](https://github.com/bisq-network/bisq/pull/5838), [3](https://github.com/bisq-network/bisq/pull/5839), [4](https://github.com/bisq-network/bisq/pull/5851)
- [Small debugging utils](https://github.com/bisq-network/bisq/pull/5818)
- [API: Deprecate and replace hard-coded CLI console output formatters](https://github.com/bisq-network/bisq/pull/5812)
- [GitHub build: Cache gradle dependencies](https://github.com/bisq-network/bisq/pull/5805)
- [Add I2P as enum entry](https://github.com/bisq-network/bisq/pull/5840)
- [Update package.gradle: rely on local JDK 15](https://github.com/bisq-network/bisq/pull/5864)

### New Assets
- [Changes required for GRIN re-listing](https://github.com/bisq-network/bisq/pull/5820)

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.8.0.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.8.0-all.jar
The output need to match the value from the Bisq-1.8.0.jar.txt file.

There are three hashes within the Bisq-1.8.0.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.5 and the v1.8.0 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.8.0.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:
- @cbeams 
- @cd2357 
- @chimp1984 
- @ghubstan 
- @Jakub-CZ 
- @jmacxx 
- @m52go 
- @ripcurlx 
- @sqrrm  
- @wiz 

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.8.0</title>
    <updated>2021-12-10T18:25:56Z</updated>
    <dc:date>2021-12-10T18:25:56Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/v0.3.13</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/v0.3.13"/>
    <summary>Dependabot updates and pinning unchained-libraries</summary>
    <title>unchained-capital/caravan: v0.3.13</title>
    <updated>2021-12-09T21:48:57Z</updated>
    <dc:date>2021-12-09T21:48:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/v0.3.12</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/v0.3.12"/>
    <summary>Dependabot updates and pinning unchained-libraries</summary>
    <title>unchained-capital/caravan: v0.3.12</title>
    <updated>2021-12-09T21:42:01Z</updated>
    <dc:date>2021-12-09T21:42:01Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0.1</id>
    <link href="https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0.1"/>
    <summary>Changelog:

- fix for header sync performance
- fix for createrawtransaction RPC: make pegin-related fields optional
- add evbparams to manipulate BIP9 deployments, similar to Bitcoin Core's vbparams
- make dynafed signalling opt-out instead of opt-in
- improve logging</summary>
    <title>ElementsProject/elements: elements-0.21.0.1</title>
    <updated>2021-12-07T19:22:17Z</updated>
    <dc:date>2021-12-07T19:22:17Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.2</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.2"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/Specter-Setup-v1.7.2.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/SpecterDesktop-v1.7.2.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/specter_desktop-v1.7.2-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/specterd-v1.7.2-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/specterd-v1.7.2-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/specterd-v1.7.2-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.2/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Feature: Default blockchain rescan to first Taproot block for Taproot wallets #1479 (kdmukai)
- Feature: Encrypted user data storage #1453 (kdmukai)
- Feature: More options for address labels imports #1470 (Manolis)
- Feature: Improved export and restore hot wallet process #1495 (singlatushar07)
- Bugfix: Adds `no_wait` option to rpc calls #1485 (kdmukai)
- Bugfix: Adjust build-badge to Cirrus #1464 (Kim Neunert)
- Bugfix: csrf-exempt for /toggle_hide_sensitive_info endpoint #1478 (Kim Neunert)
- Bugfix: Custom autohide bugfix #1468 (kdmukai)
- Bugfix: Default state for left nav &quot;Devices&quot; should be hidden #1481 (kdmukai)
- Bugfix: 'Specter' object has no attribute 'user_manager' #1476 (Manolis)
- Bugfix: tests on master #1465 (Kim Neunert)
- Documentation: hosted at docs.specter.solutions #1463 (Kim Neunert)
- Chore: Taproot test case #1482 (kdmukai)</summary>
    <title>cryptoadvance/specter-desktop: v1.7.2</title>
    <updated>2021-11-30T11:39:32Z</updated>
    <dc:date>2021-11-30T11:39:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.9</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.9"/>
    <summary>Umbrel 0.4.9 brings two-factor authentication (2FA) to add an extra layer of security to your Umbrel, LND 0.14.1, two brand new apps in the Umbrel App Store — Tallycoin Connect and Syncthing, updated apps, bug fixes, and more.</summary>
    <title>getumbrel/umbrel: v0.4.9</title>
    <updated>2021-11-27T13:22:11Z</updated>
    <dc:date>2021-11-27T13:22:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.13</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.13"/>
    <summary>* ADD: Rate last updated date 
* ADD: Danish currency. 
* ADD: Truncate prop on Copy to Clipboard component 
* ADD: Update Outdated Rate 
* ADD: Log openURL error 

* FIX: Can't adjust multisig setting on 4&quot; iPhone #4206 
* FIX: Rare crash on multisig wallet details screen
* FIX: Use containedModal on macOS to unblock prompt UI 
* FIX: Pull-to-refresh on main screen 
* FIX: refresh lndhub wallet balance after paying for invoice by scanning qrcode on main screen 
* FIX: import custom derivation path with passphrase 
* FIX: 0 amounts in custom receive would result in undefined 
* FIX: lnPayURL scan wallet currency in BTC or local currency 
* FIX: Use haptic system settings for  biometrics use 
* FIX: scroll index was being reset on focus 
* FIX: lightning address should now work with .onion addresses 
* FIX: Dont allow navigation to other screens when loading 

* DEL: Remove contextMenuHidden 
* TST: cosign with non-zero account (HD single-sig) 
</summary>
    <title>BlueWallet/BlueWallet: v6.2.13</title>
    <updated>2021-11-25T14:43:12Z</updated>
    <dc:date>2021-11-25T14:43:12Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.14.1-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.14.1-beta"/>
    <summary>This marks the first minor release of the `0.14.x` release cycle! This is primarily a bug fix release that fixes: an issue that would arise with `lnd` nodes older than 2 years in certain circumstances, a fix to ensure we always advertise a consistent of feature bits, and most importantly **a fix to ensure compatibility for new channel opens with the latest versions of c-lightning+eclair**. 

# Database Migrations

There are two database migrations for this version in `lnd` (that were included in 0.14.0): One optimizes the storage structure of HTLCs for faster payments and the other removes old channel state data from closed channels to free up disk space. See the [release notes `v0.14.0-beta`](https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.0.md) (and [`v0.14.1-beta`](https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.1.md)) for more information.

NOTE: Compacting the DB is recommended after running the migration to reclaim the freed up space.
# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/guggero.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-guggero-v0.14.1-beta.sig` and `manifest-v0.14.1-beta.txt` are in the current directory) with:

```
gpg --verify manifest-guggero-v0.14.1-beta.sig manifest-v0.14.1-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Wed 24 Nov 2021 11:15:46 PM CET
gpg:                using RSA key F4FC70F07310028424EFC20A8E4256593F177720
gpg: Good signature from &quot;Oliver Gugger &lt;gugger@gmail.com&gt;&quot; [ultimate]
Primary key fingerprint: F4FC 70F0 7310 0284 24EF  C20A 8E42 5659 3F17 7720
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-guggero-v0.14.1-beta.sig.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-guggero-v0.14.1-beta.sig.ots -f manifest-guggero-v0.14.1-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/blob/master/docs/release.md) for how this can be achieved.
The release binaries are compiled with `go1.17.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.14.1-beta
gpg: Signature made Wed 24 Nov 2021 11:04:06 PM CET
gpg:                using RSA key F4FC70F07310028424EFC20A8E4256593F177720
gpg: Good signature from &quot;Oliver Gugger &lt;gugger@gmail.com&gt;&quot; [ultimate]
Primary key fingerprint: F4FC 70F0 7310 0284 24EF  C20A 8E42 5659 3F17 7720
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.14.1-beta /verify-install.sh v0.14.1-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.14.1-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.14.1-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.1-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.1-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

Read the full release notes here: https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.0.md
and here: https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.1.md

# Contributors (Alphabetical Order) -- combined 0.14+0.14.1

Abubakar Nur Khalil
Adrian-Stefan Mares
Alex Bosworth
Alyssa Hertig
András Bánki-Horváth
Bjarne Magnussen
Carla Kirk-Cohen
Carsten Otto
Conner Fromknecht
Elle Mouton
ErikEk
Eugene Siegel
Hampus Sjöberg
Harsha Goli
Jamie Turley
Jesse de Wit
Johan T. Halseth
Johnny Holton
Joost Jager
Jordi Montes
Juan Pablo Civile
Kishin Kato
Leonhard Weese
Martin Habovštiak
Michael Rhee
Naveen Srinivasan
Olaoluwa Osuntokun
Oliver Gugger
Priyansh Rastogi
Roei Erez
Simon Males
Stevie Zollo
Torkel Rogstad
Wilmer Paulino
Yong Yu
Zero-1729
benthecarman
de6df1re
github2k20
mateuszmp
nathanael
nayuta-ueno
offerm
positiveblue
xanoni
</summary>
    <title>lightningnetwork/lnd: v0.14.1-beta</title>
    <updated>2021-11-24T23:33:17Z</updated>
    <dc:date>2021-11-24T23:33:17Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.6</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.6"/>
    <summary>### Improvements:

* Fix breaking changes of LND API 0.14 @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.3.6</title>
    <updated>2021-11-20T13:53:08Z</updated>
    <dc:date>2021-11-20T13:53:08Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.3</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.3"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#093-nov-20-2021</summary>
    <title>romanz/electrs: v0.9.3</title>
    <updated>2021-11-19T21:05:07Z</updated>
    <dc:date>2021-11-19T21:05:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.14.0-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.14.0-beta"/>
    <summary># Note
`lnd` 0.14.0 has a known issue regarding channel negotiation (e.g. opening channels) with other Lightning implementations. Please upgrade to `lnd` 0.14.1 which mitigates this issue.

# Database Migrations

There are two database migrations for this version in `lnd`: One optimizes the storage structure of HTLCs for faster payments and the other removes old channel state data from closed channels to free up disk space. See the [release notes](https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.0.md) for more information.

NOTE: Compacting the DB is recommended after running the migration to reclaim the freed up space.
# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.14.0-beta.sig` and `manifest-v0.14.0-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.14.0-beta.sig manifest-v0.14.0-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Wed Nov 17 13:20:26 2021 PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.14.0-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.14.0-beta.sig.ots -f manifest-roasbeef-v0.14.0-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/blob/master/docs/release.md) for how this can be achieved.
The release binaries are compiled with `go1.17.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.14.0-beta
gpg: Signature made Wed 17 Nov 2021 08:04:23 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.14.0-beta /verify-install.sh v0.14.0-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.14.0-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.14.0-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.0-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.0-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

Read the full release notes here: https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.0.md

# Contributors (Alphabetical Order)

Abubakar Nur Khalil
Adrian-Stefan Mares
Alex Bosworth
Alyssa Hertig
András Bánki-Horváth
Bjarne Magnussen
Carla Kirk-Cohen
Carsten Otto
Conner Fromknecht
Elle Mouton
ErikEk
Eugene Siegel
Hampus Sjöberg
Harsha Goli
Jesse de Wit
Johan T. Halseth
Johnny Holton
Joost Jager
Jordi Montes
Juan Pablo Civile
Kishin Kato
Leonhard Weese
Martin Habovštiak
Michael Rhee
Naveen Srinivasan
Olaoluwa Osuntokun
Oliver Gugger
Priyansh Rastogi
Roei Erez
Simon Males
Stevie Zollo
Torkel Rogstad
Wilmer Paulino
Yong Yu
Zero-1729
benthecarman
de6df1re
github2k20
mateuszmp
nathanael
offerm
positiveblue
xanoni
</summary>
    <title>lightningnetwork/lnd: v0.14.0-beta</title>
    <updated>2021-11-17T21:22:27Z</updated>
    <dc:date>2021-11-17T21:22:27Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.5</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.5"/>
    <summary>### Bug fixes:

* Fix: Checkout page of for invoices of 0 amount shouldn't crash, but 404 @NicolasDorier
* Swagger doc: Fix type of property cryptoCode (#3088) @ndeet
* Fix bug with fraction amount display in crowdfund app (#3098) @bolatovumar
* Swagger doc: Update Swagger docs for webhook event types (#3104) @bolatovumar
* Payout/pull payment page would crash if no payment method are set on the store @satwo

### Improvements:

* Add crypto code for invoice and pull payment payout API response (#3099) @bolatovumar
* Prevent creation of on-chain invoices below the dust limit (#3082) @satwo
</summary>
    <title>btcpayserver/btcpayserver: v1.3.5</title>
    <updated>2021-11-15T13:57:07Z</updated>
    <dc:date>2021-11-15T13:57:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.8</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.8"/>
    <summary>Umbrel 0.4.8 brings a new security feature — unique cryptographically secure default app passwords derived from your 24 secret words. This will help protect your Umbrel even if an app's unique Tor URL gets leaked and you have not changed that app's default password.

If you have currently installed ThunderHub, Lightning Terminal, Ride The Lightning, Squeaknode or Code Server on your Umbrel, their default passwords will automatically upgrade to the newer, more secure passwords which can be found on their app store listing pages. In case you have already updated passwords of these apps manually, you can continue to use the same.</summary>
    <title>getumbrel/umbrel: v0.4.8</title>
    <updated>2021-11-15T13:45:11Z</updated>
    <dc:date>2021-11-15T13:45:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.7</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.7"/>
    <summary>This version of Umbrel brings LND 0.13.4 and updated apps (BTCPay Server, Specter Desktop, Pi-hole, Lightning Terminal, and more) to the Umbrel App Store.

LND 0.13.4 fixes a bug discovered in the previous version which will break Neutrino functionality after the Taproot activation in ~3 days. Because Neutrino is only used when Bitcoin Core is still syncing, in short: if Bitcoin Core on your Umbrel hasn't finished syncing, please update immediately. If Bitcoin Core on your Umbrel is 100% synced already, you remain unaffected by this bug and can update at your convenience.</summary>
    <title>getumbrel/umbrel: v0.4.7</title>
    <updated>2021-11-10T12:22:19Z</updated>
    <dc:date>2021-11-10T12:22:19Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.13.4-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.13.4-beta"/>
    <summary>This is a small patch release [that fixes a Taproot related bug for Neutrino](https://github.com/lightninglabs/neutrino/pull/234). If you run neutrino in production, we _strongly_ recommend you update to this version before Taproot activation to ensure your node keeps moving forward in the chain. 

This release only contains a single commit on top of the prior 0.13.3 minor release: https://github.com/lightningnetwork/lnd/compare/0-13-3-branch...0-13-4-branch?expand=1

# Database Migrations

This release does not contain any database migrations.

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://keybase.io/bitconner/pgp_keys.asc | gpg --import
curl https://keybase.io/roasbeef/pgp_keys.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.13.4-beta.sig` and `manifest-v0.13.4-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.13.4-beta.sig manifest-v0.13.4-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Wed Sep 30 17:35:20 2020 PDT
gpg:                using RSA key 4AB7F8DA6FAEBB3B70B1F903BC13F65E2DC84465
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.13.4-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.13.4-beta.sig.ots -f manifest-roasbeef-v0.13.4-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.16.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.13.4-beta
gpg: Signature made Tue Sep 15 18:55:00 2020 PDT
gpg:                using RSA key 4AB7F8DA6FAEBB3B70B1F903BC13F65E2DC84465
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.13.4-beta /verify-install.sh v0.13.4-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.13.4-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.13.4-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.4-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.4-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

This release bumps the Neutrino dependency to the version that [ignores not yet supported Taproot outputs in downloaded blocks](https://github.com/lightninglabs/neutrino/pull/234).

# Contributors (Alphabetical Order)

Olaoluwa Osuntokun
</summary>
    <title>lightningnetwork/lnd: v0.13.4-beta</title>
    <updated>2021-11-09T19:19:31Z</updated>
    <dc:date>2021-11-09T19:19:31Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.4</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.4"/>
    <summary>### Bug fixes:

* Fix: Do not crash when redirect url is not provided to Authorize page @Kukks
* Fix: Disabling lightning should also disable LNURL @Kukks
* Fix: Paging in payouts did not take additional parameters in consideration @Kukks
* Fix: Payout actions button was misaligned @Kukks
* Fix: Amount validation for payout creation min amount was missing @Kukks

### Improvements:

* Point of Sale Print view improvements (#3050) @satwo @dennisreimann
* Upgrade to Bootstrap 5.1.3 @dennisreimann
* Updates display names (#3036) @dstrukt</summary>
    <title>btcpayserver/btcpayserver: v1.3.4</title>
    <updated>2021-11-09T15:25:46Z</updated>
    <dc:date>2021-11-09T15:25:46Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.1</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.1"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/Specter-Setup-v1.7.1.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/SpecterDesktop-v1.7.1.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/specter_desktop-v1.7.1-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/specterd-v1.7.1-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/specterd-v1.7.1-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/specterd-v1.7.1-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.1/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`

# Release notes
- Bugfix: Bitcoin Core as default for fee estimation, error handling improvements #1408 (Kim Neunert)
- Bugfix: fix unknown version bug in pip-installs fixes #1442 #1450 (Kim Neunert)
- Bugfix: no threading for update after creation of wallets #1457 (Kim Neunert)
- Bugfix: version.txt does not get detected #1462 (Kim Neunert)
- Chore: Bump electron from 10.2.0 to 11.5.0 in /pyinstaller/electron #1429 (dependabot[bot])
- Chore: Release signature process #1459 (Kim Neunert)
</summary>
    <title>cryptoadvance/specter-desktop: v1.7.1</title>
    <updated>2021-11-05T20:09:19Z</updated>
    <dc:date>2021-11-05T20:09:19Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.3"/>
    <summary>### Bug fixes:

* LNAddress wasn't working if the store supported an altcoin @NicolasDorier
* Fix maintainance view @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.3.3</title>
    <updated>2021-11-05T03:38:10Z</updated>
    <dc:date>2021-11-05T03:38:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.2"/>
    <summary>This feature include a critical security patch. The vulnerability impacts owner of shared instances which share their internal lightning nodes. Credits to @yilakb to have noticed us.

### New Features:

* Greenfield: Adds the Archive status to Invoice model @TheHazeEffect
* Greenfield: Add pagination to the get invoices operation @TheHazeEffect

### Bug fixes:

* Crowdfunding topup invoice doesn't work when there isn't a perk added (#3048 #3064) @satwo
* Crowdfund: Fix perk value display (#3060) @dennisreimann
* LNAddress wasn't working if the store supported an altcoin @NicolasDorier
* Lightning address payment would fail if millisatoshi is not 0 mod 1000 on LND (#3056) @NicolasDorier
* The Test Connection feature during lightning setup was hidding cause of failure @NicolasDorier
* Creating a new invoice in payment request with LNURL activated would crash @NicolasDorier
* Improve error reporting in (#3065) @NicolasDorier
* After loading the Update PoS Settings page and selecting an item to edit, it will always show the price type selected as Fixed regardless of what the actual price type is. (#3049) @fabu21
* Fixes label on Point of Sale page (#3037) @dstrukt

### Improvements:

* If no default payment method, the fallback should be in order of preference: BTC, then Lightning (via BOLT11)
* UI Improvement of the maintenance page @dstrukt
* In the invoice's details page, show the url of webhook's deliveries (#3034) @satwo
* Improves upload button for files  (#3044) @dstrukt</summary>
    <title>btcpayserver/btcpayserver: v1.3.2</title>
    <updated>2021-11-04T15:38:13Z</updated>
    <dc:date>2021-11-04T15:38:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v0.10.2</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v0.10.2"/>
    <summary>We're pleased to announce the 0.10.2 release of c-lightning, named by @vincenzopalazzo.

This is a recommended upgrade: this release includes the patch for the recently disclosed [CVE-2021-41592][cve].

[cve]: https://nvd.nist.gov/vuln/detail/CVE-2021-41592

## Highlights for Users

 - Payments can now be retried without affecting the status of prior attempts.
 - The route selection will now use the log-propability-based channel selection to increase success rate and reduce time to completion.
 - `close` now reports the feeranges each side enforced, which allows users to determine which side caused a high or low feerate.
 - Removal of old HTLC information and vacuuming shrinks large lightningd.sqlite3 by a factor of 2-3.

# Highlights for the Network

 - `setchannelfee` now has a grace period during which both old and new fee policies are considered. This prevents a fee update from making the channel unusable until the update propagated.
 - We now perform quick-close if the peer supports it.
 - We send regular pings to detect dead connections (particularly for Tor).
 - Errors returning a channel_update no longer return an outdated one.
 - Anchor output mutual close allow a fee higher than the final commitment transaction
 
# Highlights for Developers

 - Plugins now are notified about an upcoming shutdown, allowing them to store data and clean up before exiting.
 - The datastore API (`datastore`, `deldatastore`, and `listdatastore`) exposes a simple key-value store, allowing plugin authors to store data in the c-lightning database.
 - `ping` now only works if we have a channel with the peer.
 - Relaxed the sqlite3 version match requirements to be at least a minimum version and a major version match

More details can be found in the changelog.

Thanks to everyone for their contributions and bug reports; please keep them coming.

Since 0.10.1, we've had 333 commits from 19 different authors over 85 days.

A special thanks goes to the 4 first time contributors:

 - Dustin Dettmer
 - Michael Folkson
 - jerzybrzoska
 - Devrandom

Cheers,
Christian, Rusty, Lisa.</summary>
    <title>ElementsProject/lightning: v0.10.2</title>
    <updated>2021-11-03T17:48:57Z</updated>
    <dc:date>2021-11-03T17:48:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.103</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.103"/>
    <summary>## API Updates
 * This release is almost entirely focused on a new API in the
   `lightning-invoice` crate - the `InvoicePayer`. `InvoicePayer` is a
   struct which takes a reference to a `ChannelManager` and a `Router`
   and retries payments as paths fail. It limits retries to a configurable
   number, but is not serialized to disk and may retry additional times across
   a serialization/load. In order to learn about failed payments, it must
   receive `Event`s directly from the `ChannelManager`, wrapping a
   user-provided `EventHandler` which it provides all unhandled events to
   (#1059).
 * `get_route` has been renamed `find_route` (#1059) and now takes a
   `RouteParameters` struct in replacement of a number of its long list of
   arguments (#1134). The `Payee` in the `RouteParameters` is stored in the
   `Route` object returned and provided in the `RouteParameters` contained in
   `Event::PaymentPathFailed` (#1059).
 * `ChannelMonitor`s must now be persisted after calls that provide new block
   data, prior to `MonitorEvent`s being passed back to `ChannelManager` for
   processing. If you are using a `ChainMonitor` this is handled for you.
   The `Persist` API has been updated to `Option`ally take the
   `ChannelMonitorUpdate` as persistence events that result from chain data no
   longer have a corresponding update (#1108).
 * `routing::Score` now has a `payment_path_failed` method which it can use to
   learn which channels often fail payments. It is automatically called by
   `InvoicePayer` for failed payment paths (#1144).
 * The default `Scorer` implementation is now a type alias to a type generic
   across different clocks and supports serialization to persist scoring data
   across restarts (#1146).
 * `Event::PaymentSent` now includes the full fee which was spent across all
   payment paths which were fulfilled or pending when the payment was fulfilled
   (#1142).
 * `Event::PaymentSent` and `Event::PaymentPathFailed` now include the
   `PaymentId` which matches the `PaymentId` returned from
   `ChannelManager::send_payment` or `InvoicePayer::pay_invoice` (#1059).
 * `NetGraphMsgHandler` now takes a `Deref` to the `NetworkGraph`, allowing for
   shared references to the graph data to make serialization and references to
   the graph data in the `InvoicePayer`'s `Router` simpler (#1149).
 * `routing::Score::channel_penalty_msat` has been updated to provide the
   `NodeId` of both the source and destination nodes of a channel (#1133).

## Bug Fixes
 * Previous versions would often disconnect peers during initial graph sync due
   to ping timeouts while processing large numbers of gossip messages. We now
   delay disconnecting peers if we receive messages from them even if it takes
   a while to receive a pong from them. Further, we avoid sending too many
   gossip messages between pings to ensure we should always receive pongs in a
   timely manner (#1137).
 * If a payment was sent, creating an outbound HTLC and sending it to our
   counterparty (implying the `ChannelMonitor` was persisted on disk), but the
   `ChannelManager` was not persisted prior to shutdown/crash, no
   `Event::PaymentPathFailed` event was generated if the HTLC was eventually
   failed on chain. Events are now consistent irrespective of `ChannelManager`
   persistence or non-persistence (#1104).

## Serialization Compatibility
 * All above new Events/fields are ignored by prior clients. All above new
   Events/fields are not present when reading objects serialized by prior
   versions of the library.
 * Payments for which a `Route` was generated using a previous version or for
   which the payment was originally sent by a previous version of the library
   will not be retried by an `InvoicePayer`.

This release was singularly focused and some contributions by third parties
were delayed.
In total, this release features 38 files changed, 4414 insertions, and 969
deletions in 71 commits from 2 authors, in alphabetical order:

 * Jeffrey Czyz
 * Matt Corallo</summary>
    <title>lightningdevkit/rust-lightning: v0.0.103</title>
    <updated>2021-11-03T03:33:02Z</updated>
    <dc:date>2021-11-03T03:33:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.13.0</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.13.0"/>
    <summary># Summary

This release contains an important stability upgrade on Tor. Some of our users encountered network instability like delays on Tor so it is recommended to upgrade your client to this version. In addition, there were some minor bug fixes as well. Make sure your Tor client is not running in the background so Wasabi can update it - the easiest way is to restart your machine and start the new version of Wasabi. 

- Updated Tor client to [0.4.5.10](https://blog.torproject.org/node/2062).

# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [Installation Instructions](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET Core 3.1.407-win-x64.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.13.

# Release Notes

- **Knots update** https://github.com/zkSNACKs/WalletWasabi/issues/5995
- **Minor bugfixes** https://github.com/zkSNACKs/WalletWasabi/pull/5982 https://github.com/zkSNACKs/WalletWasabi/pull/6131 https://github.com/zkSNACKs/WalletWasabi/pull/4207
- **Tor update** https://github.com/zkSNACKs/WalletWasabi/pull/6569
- **Fallback mechanism** https://github.com/zkSNACKs/WalletWasabi/pull/6575 https://github.com/zkSNACKs/WalletWasabi/pull/6577
- **PR for all changes** https://github.com/zkSNACKs/WalletWasabi/pull/6572
</summary>
    <title>zkSNACKs/WalletWasabi: v1.1.13.0</title>
    <updated>2021-11-02T11:48:07Z</updated>
    <dc:date>2021-11-02T11:48:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.2</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.2"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#092-oct-31-2021</summary>
    <title>romanz/electrs: v0.9.2</title>
    <updated>2021-10-31T06:33:41Z</updated>
    <dc:date>2021-10-31T06:33:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.1"/>
    <summary>### Bug fixes:

* Fix: The checkout page would reload the page when changing payment method, causing an annoying flickering @NicolasDorier
* Fix: When browsing to BTCPay with explicit paymentMethodId such as `https://btcpay.../i/{invoiceId}/{paymentMethodId}`, it was impossible to switch to any other payment method @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.3.1</title>
    <updated>2021-10-30T05:08:09Z</updated>
    <dc:date>2021-10-30T05:08:09Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.3.0"/>
    <summary>See [our blog post](https://blog.btcpayserver.org/btcpay-server-1-3-0/) for an overview.

### Improvements:

* Various Bootstrap related updates (#2785 #2841 #2870 #2893 #2915 #2932 #2957) @dennisreimann @dstrukt @bolatovumar 
* Various GreenField API improvements (#2817 #2880 #2905 #2934) @bolatovumar @kukks @woutersamaey
* PSBT UI improvements (#2713) @dennisreimann 
* Revamp Theme system (#2794 #2927) @dennisreimann @dstrukt
* Revamp confirmation modals (#2614) @dennisreimann @dstrukt
* Unify Fido2 authentication under two-factor tab (#2866) @dennisreimann
* Remove slack link (#2887) @dstrukt
* Improve warning when creating invoice without wallet (#2844) @bolatovumar
* Improve public LN node info (#2876) @dennisreimann
* Adds social links to footer @1nF0rmed 
* Switch to offcanvas navigation system @dennisreimann
* Crowdfund public UI re-design (#2918 #2926 #2938) @dennisreimann
* Remove Coinswitch entirely @kukks 
* Improve display and structure of payment related configuration (#2945) @dennisreimann
* Coin selection improvements (#2956) @dennisreimann
* Add Passport hardware wallet option to the wallet import screens (#2962) @BitcoinQnA
* Improve language dropdown UX (#2972 #2976) @dennisreimann @satwo
* Add paging to pull payments list page (#2997) @kukks
* Pull payments &amp; Payouts moved to store from wallet pages (#2987) @kukks
* Add number formatting in crowdfund app @bolatovumar
* Improve the language dropdown of the checkout (#2971) @satwo
* Validation of payment method criteria fails silently in keypad-only PoS (#2991) @satwo

### New features:

* Taproot support (#2830 #2837) @sageprogrammer @nicolasdorier
* Specify default payment method through UI and Greenfield API (#2815 #2986) @bolatovumar @NicolasDorier
* Disallow cancelling payment request when &quot;Allow payee to create invoices in their own denomination&quot; is not enabled (#2843) @bolatovumar
* Support custom currencies for Pay button generator (#2896) @bolatovumar
* Show total balance on wallets list (#2882) @maxdignan @dennisreimann
* Greenfield: Payment Settled Webhook event (#2944) @kukks
* Add ability to set invoice status from details page (#2923) @bolatovumar
* Add ability to accept tips in POS terminal (#2983) @bolatovumar
* Add ability to wipe all the transactions of a wallet for admins (#2857) @NicolasDorier
* Allow User to delete own account (#2949)  @kukks
* Allow email notifications when creating invoices from Web UI (#2959) @sipsorcery
* Dev Cheat mode (#2672 #2965) @NicolasDorier @woutersamaey
* Add support for CryptoMarket exchange rates (more accurate rates for Chilean Pesos, Brazilian Reals and Argentine Peso) @bolatovumar
* Add support for rpio exchange rate (close #2960) @NicolasDorier
* Greenfield: Provide negative undue when overpaid. (#2936) @kukks
* Support topup invoices in apps (#2958) @kukks
* Support Lightning in Pull Payments. (#2958) @kukks
* Support LNURL and Lightning address in Pull Payments (#2958) @kukks
* Add boolean overPaid to the invoice settled webhook @NicolasDorier
* Ability to display and update the appname in crowdfund and PoS @satwo
* Add ability to require refund email from app level @bolatovumar
* Azerbaijan support for the checkout (Orkhan Guliyev)

### Bug fixes:

* Fix Summernote editor (#2829) @dennisreimann 
* Fix topup invoices not created when payment method criteria specified (#2847) @bolatovumar 
* Check for empty theme URI before saving theme settings (#2851) @bolatovumar 
* Signing a transaction with too many inputs (around 500), should not timeout @nicolasdorier
* Fix Vault issues: If signing took more than one minute, the connection to HWI would drop @nicolasdorier
* Fix CSP issues (#2872 #2946 #2954) @nicolasdorier @dennisreimann  @bolatovumar 
* Fix issues with Authorization Request page (#2894) @bolatovumar
* Do not activate payment methods for non-new invoices @nicolasdorier
* Fix camera not working on wallet send (Fix #2922) @nicolasdorier
* Properly handle InvoiceMetadata string properties (Fix #2906) @NicolasDorier
* fix: Plugins disabled message never dissappers even after re-enabling it. @kukks
* Fix: Impossible to see relative time of transaction in wallet list @NicolasDorier
* Fix bug: Importing seed with Is hot wallet checked was not working (#2966) @NicolasDorier
* fix pos app logo (#2977) @satwo
* Fix cryptic error message issue (#2978) @Bananenbieger123
* Fix BIP21 pull payment support (#2985) @kukks
* Fix: favicon wasn't shown if using rootpath @NicolasDorier
* Fix: The redirect url of crowdfund invoices wasn't set correctly if rootpath is used @NicolasDorier
* Fix: Many SVG assets were not showing properly if rootpath is used @NicolasDorier
* Fix: Fonts and Home background not loading properly when using rootpath @NicolasDorier
* If the local culture of the server was not english, numeric values greenfield were not properly interpreted @NicolasDorier
* Default payment method settings was not working properly @satwo @NicolasDorier
 * Fix scanning of animated QR codes (#3003) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.3.0</title>
    <updated>2021-10-29T15:19:07Z</updated>
    <dc:date>2021-10-29T15:19:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.19</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.19"/>
    <summary>## Main changes

### Fix payment details screen for lnurl-pay

Phoenix now correctly displays the description of a lnurl payment, as well as other metadata that the service could have provided (such as identifiers for lightning addresses).

### Full list of changes

- **app**: https://github.com/ACINQ/phoenix/compare/android-legacy-v1.4.17...android-legacy-v1.4.19
(this diff is very large because it contains the merge with the phoenix-kmm repository)

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.19</title>
    <updated>2021-10-29T13:49:37Z</updated>
    <dc:date>2021-10-29T13:49:37Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.12</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.12"/>
    <summary>FIX: Manage funds</summary>
    <title>BlueWallet/BlueWallet: v6.2.12</title>
    <updated>2021-10-26T22:12:33Z</updated>
    <dc:date>2021-10-26T22:12:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.7.5</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.7.5"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

## Release notes
This release introduces 13 new payment methods: Strike, Verse, Monese, Satispay, Bizum, Pix, Nequi, CelPay, PayTM, UPI, RTGS, NEFT and IMPS. It also upgrades Tor to the its latest version and moves all remaining nodes to Tor v3 addresses. And as always, there are many additional bug fixes and minor improvements across the board.

### Improvements
- [Allow standard mark &amp; copy functionality for displayed text fields](https://github.com/bisq-network/bisq/pull/5747)
- [Allow trader chat to continue after trade complete](https://github.com/bisq-network/bisq/pull/5742)
- [Show a warning if PC has been in sleep mode](https://github.com/bisq-network/bisq/pull/5719)
- [Display support agent's Keybase link when opening mediation / arbitration](https://github.com/bisq-network/bisq/pull/5716)
- [Add payment methods Strike and Verse](https://github.com/bisq-network/bisq/pull/5752)
- [Add payment methods Monese and Satispay](https://github.com/bisq-network/bisq/pull/5745)
- [Add payment methods Bizum and Pix](https://github.com/bisq-network/bisq/pull/5741)
- [Add payment methods Nequi and CelPay](https://github.com/bisq-network/bisq/pull/5724)
- [Add five Indian payment methods: PayTM, UPI, RTGS, NEFT and IMPS](https://github.com/bisq-network/bisq/pull/5696)
- [Remove trade id reference for Amazon gift card](https://github.com/bisq-network/bisq/pull/5727)
- [Add new v3 onions for wiz's bitcoin nodes](https://github.com/bisq-network/bisq/pull/5767)
- [Upgrade Tor to v0.4.5.10](https://github.com/bisq-network/bisq/pull/5763)

### Bug fixes
- [Fix issue of Trade Step 1 validation done too soon](https://github.com/bisq-network/bisq/pull/5746)
- [Fix exception in create offer screen](https://github.com/bisq-network/bisq/pull/5753)
- [Fix logic of SEPA country comparison routine](https://github.com/bisq-network/bisq/pull/5748)
- [Disable GC calls if fullDaoNode is set (like in case of seed nodes)](https://github.com/bisq-network/bisq/pull/5728)
- [Fix data handling if DAO is deactivated](https://github.com/bisq-network/bisq/pull/5711)
- [Fix typo (SHA)](https://github.com/bisq-network/bisq/pull/5760)

### Development &amp; Documentation
- [Update Tor upgrade documentation](https://github.com/bisq-network/bisq/pull/5758)
- [Remove v2 nodes and backup nodes from DAO monitor](https://github.com/bisq-network/bisq/pull/5731)
- [Replace Adopt with Zulu for GitHub builds](https://github.com/bisq-network/bisq/pull/5676)
- [Refactor desktop Closed Tradable model utils for API](https://github.com/bisq-network/bisq/pull/5743)
- [Move volume formatting from DisplayUtils to VolumeUtil](https://github.com/bisq-network/bisq/pull/5740)
- [Call `keepfunds` (close trade) on both sides of trade simulation](https://github.com/bisq-network/bisq/pull/5708)
- [CLI bug fix: show trade's contract volume, not moving offer volume](https://github.com/bisq-network/bisq/pull/5704)
- [Add custom bisq.properties to API test harness](https://github.com/bisq-network/bisq/pull/5718)

### New Assets
- [Add Tether (ERC20)](https://github.com/bisq-network/bisq/pull/5735).

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.7.4.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.7.4-all.jar
The output need to match the value from the Bisq-1.7.4.jar.txt file.

There are three hashes within the Bisq-1.7.4.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 11.0.10 and the v1.7.4 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.7.4.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @cd2357 
- @chimp1984 
- @Emzy 
- @geertjanw 
- @ghubstan 
- @Jakub-CZ 
- @jmacxx 
- @ripcurlx 
- @sqrrm  

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.7.5</title>
    <updated>2021-10-26T20:11:11Z</updated>
    <dc:date>2021-10-26T20:11:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.6</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.6"/>
    <summary>This version of Umbrel contains a bugfix for the Samourai Server app's connectivity issue. If you're facing an issue with it currently, please try re-installing the app again after the update.</summary>
    <title>getumbrel/umbrel: v0.4.6</title>
    <updated>2021-10-26T12:27:08Z</updated>
    <dc:date>2021-10-26T12:27:08Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.11</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.11"/>
    <summary>**Highlights:**

- Stability and improvements release


**Changelog:**

- ADD: Rate information in Currency Settings 
- ADD: loc sync ar, he, it 
- ADD: Add unique ID in Settings
- ADD: GCC Arab countries; Saudi riyal, Emirati dirham, Bahraini dinar, Omani rial, Kuwaiti dinar.


- FIX: LNDHub Tor Import 
- FIX: Device UID was removable 
- FIX: RTL fixes 
- FIX: Some android devices where unable to process onPress 
- FIX: QR reader freezes on MAC Desktop on Send Page #4057 
- FIX: Text was getting overflown on small screens 
- FIX: Locale for prompts 
- FIX: Delete wallet Alert title had confusing string 
- FIX: Quick action update when currency changes 
- FIX: Android dark mode text color 
- FIX: Add recipient was disabled when using max 
- FIX: Sign/Verify uncompressed 
- FIX: Unable to scroll up/down signed transaction summary card. #4019


- REF: Use currency module 
- REF: INR rate source </summary>
    <title>BlueWallet/BlueWallet: v6.2.11</title>
    <updated>2021-10-26T09:11:24Z</updated>
    <dc:date>2021-10-26T09:11:24Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.5</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.5"/>
    <summary>This version of Umbrel brings the latest version of Electrum server (electrs 0.9.1), bug fixes, and updated apps to the Umbrel App Store, including the latest Samourai Server app which fixes a connectivity issue in the previous version.</summary>
    <title>getumbrel/umbrel: v0.4.5</title>
    <updated>2021-10-23T15:01:16Z</updated>
    <dc:date>2021-10-23T15:01:16Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0</id>
    <link href="https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0"/>
    <summary>Changelog:
* Bring Elements up to date with Bitcoin Core 0.21
* Design and implement new PSET protocol</summary>
    <title>ElementsProject/elements: elements-0.21.0</title>
    <updated>2021-10-19T17:25:57Z</updated>
    <dc:date>2021-10-19T17:25:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.0</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.7.0"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/Specter-Setup-v1.7.0.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/SpecterDesktop-v1.7.0.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/specter_desktop-v1.7.0-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/specterd-v1.7.0-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/specterd-v1.7.0-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/specterd-v1.7.0-x86_64-linux-gnu.zip)

## Signatures and hashes

[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/SHA256SUMS) file contains sha256 hashes of all binary files. The [SHA256SUMS.asc](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.7.0/SHA256SUMS.asc) file contains a signature of the SHA256SUM file, signed with @k9ert's GPG key.
You can get the public key from [keybase](https://keybase.io/k9ert/pgp_keys.asc?fingerprint=ecc0b4abd74e716f5ade095228b358a8843b0109).
Fingerprint of the key is `ECC0 B4AB D74E 716F 5ADE 0952 28B3 58A8 843B 0109`

# Release notes
- Feature: a framework for migrations and migrating single-node #1414 (Kim Neunert)
- Feature: Auto privacy settings #1415 (kdmukai)
- Feature: Better Error-management, logging for the APP and Macos builds improvements #1405 (Kim Neunert)
- Feature: fix rbf-edit with multiple destinations #1412 (Stepan Snigirev)
- Feature: Improve Jade support #1398 (Stepan Snigirev)
- Feature: Uncle jim paperwallet #1359 (Kim Neunert)
- Feature: use change addresses in order #1393 (Stepan Snigirev)
- Bugfix: asset labels issues #1391 (Stepan Snigirev)
- Bugfix: Babel js backtick fix #1383 (kdmukai)
- Bugfix: changing type of a device fixes #1400 #1257 #575 #1402 (Stepan Snigirev)
- Bugfix: CI failure because of missing wget dependency #1375 (Kim Neunert)
- Bugfix: fixes #1357 as pip3 installation of tar.gz-package was broken #1374 (Kim Neunert)
- Bugfix: Refactor wallet class fixes #1394 #1367 #1241 #1101  #1411 (Stepan Snigirev)
- Bugfix: refactor WalletManager and Wallet, improved performance #1424 (Kim Neunert)
- Bugfix: rollback embit to 0.4.5 #1379 (Kim Neunert)
- Bugfix: Some liquid fixes #1401 (Stepan Snigirev)
- Bugfix: tx dump (failing tests) #1397 (Stepan Snigirev)
- Bugfix: various things including json-file data-corruption #1410 (Kim Neunert)
- Bugfix: remove diy simulator warning #1399 (Stepan Snigirev)
- Bugfix: Fix last release liquid issues #1389 (Stepan Snigirev)
- Bugfix: Fix the Test Tor point of reference #1416 (benk10)
- Bugfix: Leading slashes in paths removed #1380 (B-396)
- Docs: Suggest updating pip to resolve `cryptography` installation issues #1349 (Nadav Ivgi)
- Translation: Added localization function to html text #1396 (relativisticelectron)
- Chore: Bump axios from 0.21.1 to 0.21.4 #1387 (dependabot[bot])
- Chore: Ci improvements (#103) #1403 (Kim Neunert)
- Chore: migrate tested bitcoin to new v0.21.1 tag #1316 (Kim Neunert)
- Chore: Release process improvements #1434 (Kim Neunert)
- Chore: Some macos specific adjustments to the install and test-cypress scripts #1428 (Kim Neunert)
- Chore: update dependencies and remove demon-mode #1417 (Kim Neunert)
- Chore: update elements test_target to 0.21.0_rc2 #1409 (Kim Neunert)</summary>
    <title>cryptoadvance/specter-desktop: v1.7.0</title>
    <updated>2021-10-19T10:59:01Z</updated>
    <dc:date>2021-10-19T10:59:01Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.102</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.102"/>
    <summary>## API Updates
 * `get_route` now takes a `Score` as an argument. `Score` is queried during
   the route-finding process, returning the absolute amounts which you are
   willing to pay to avoid routing over a given channel. As a default, a
   `Scorer` is provided which returns a constant amount, with a suggested
   default of 500 msat. This translates to a willingness to pay up to 500 msat
   in additional fees per hop in order to avoid additional hops (#1124).
 * `Event::PaymentPathFailed` now contains a `short_channel_id` field which may
   be filled in with a channel that can be &quot;blamed&quot; for the payment failure.
   Payment retries should likely avoid the given channel for some time (#1077).
 * `PublicKey`s in `NetworkGraph` have been replaced with a `NodeId` struct
   which contains only a simple `[u8; 33]`, substantially improving
   `NetworkGraph` deserialization performance (#1107).
 * `ChainMonitor`'s `HashMap` of `ChannelMonitor`s is now private, exposed via
   `Chainmonitor::get_monitor` and `ChainMonitor::list_monitors` instead
   (#1112).
 * When an outbound channel is closed prior to the broadcasting of its funding
   transaction, but after you call
   `ChannelManager::funding_transaction_generated`, a new event type,
   `Event::DiscardFunding`, is generated, informing you the transaction was not
   broadcasted and that you can spend the same inputs again elsewhere (#1098).
 * `ChannelManager::create_channel` now returns the temporary channel ID which
   may later appear in `Event::ChannelClosed` or `ChannelDetails` prior to the
   channel being funded (#1121).
 * `Event::PaymentSent` now contains the payment hash as well as the payment
   preimage (#1062).
 * `ReadOnlyNetworkGraph::get_addresses` now returns owned `NetAddress` rather
   than references. As a side-effect this method is now exposed in foreign
   language bindings (#1115).
 * The `Persist` and `ChannelMonitorUpdateErr` types have moved to the
   `lightning::chain::chainmonitor` and `lightning::chain` modules,
   respectively (#1112).
 * `ChannelManager::send_payment` now returns a `PaymentId` which identifies a
   payment (whether MPP or not) and can be used to retry the full payment or
   MPP parts through `retry_payment` (#1096). Note that doing so is currently
   *not* crash safe, and you may find yourself sending twice. It is recommended
   that you *not* use the `retry_payment` API until the next release.

## Bug Fixes
 * Due to an earlier fix for the Lightning dust inflation vulnerability tracked
   in CVE-2021-41591/CVE-2021-41592/CVE-2021-41593 in 0.0.100, we required
   counterparties to accept a dust limit slightly lower than the dust limit now
   required by other implementations. This appeared as, at least, latest lnd
   always refusing to accept channels opened by LDK clients (#1065).
 * If there are multiple channels available to the same counterparty,
   `get_route` would only consider the channel listed last as available for
   sending (#1100).
 * `Persist` implementations returning
   `ChannelMonitorUpdateErr::TemporaryFailure` from `watch_channel` previously
   resulted in the `ChannelMonitor` not being stored at all, resulting in a
   panic after monitor updating is complete (#1112).
 * If payments are pending awaiting forwarding at startup, an
   `Event::PendingHTLCsForwardable` event will always be provided. This ensures
   user code calls `ChannelManager::process_pending_htlc_fowards` even if it
   shut down while awaiting the batching timer during the previous run (#1076).
 * If a call to `ChannelManager::send_payment` failed due to lack of
   availability of funds locally, LDK would store the payment as pending
   forever, with no ability to retry or fail it, leaking memory (#1109).

## Serialization Compatibility
 * All above new Events/fields are ignored by prior clients. All above new
   Events/fields, except for `Event::PaymentSent::payment_hash` are not present
   when reading objects serialized by prior versions of the library.

In total, this release features 32 files changed, 2248 insertions, and 1483
deletions in 51 commits from 7 authors, in alphabetical order:

 * 1nF0rmed
 * Duncan Dean
 * Elias Rohrer
 * Galder Zamarreño
 * Jeffrey Czyz
 * Matt Corallo
 * Valentine Wallace</summary>
    <title>lightningdevkit/rust-lightning: v0.0.102</title>
    <updated>2021-10-18T19:27:25Z</updated>
    <dc:date>2021-10-18T19:27:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.1</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.1"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#091-oct-19-2021</summary>
    <title>romanz/electrs: v0.9.1</title>
    <updated>2021-10-18T10:45:13Z</updated>
    <dc:date>2021-10-18T10:45:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.8.0</id>
    <link href="https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.8.0"/>
    <summary># 1.8.0 DLC Wallet Tor negotiation

## Running Bitcoin-S

If you want to run the standalone server binary, after verifying gpg signatures, you
can `unzip bitcoin-s-server-1.8.0.zip` and then run it with `./bin/bitcoin-s-server` to start the node. You will need to
configure the node properly first, you can find example
configurations [here](https://bitcoin-s.org/docs/config/configuration#example-configuration-file).

You can then unzip the `bitcoin-s-cli-1.8.0.zip` folder and start using the `bitcoin-s-cli` like this:

```bashrc
./bin/bitcoin-s-cli --help
Usage: bitcoin-s-cli [options] [&lt;cmd&gt;]

  -n, --network &lt;value&gt;    Select the active network.
  --debug                  Print debugging information
  --rpcport &lt;value&gt;        The port to send our rpc request to on the server
  -h, --help               Display this help message and exit
```

For more information on what commands `bitcoin-s-cli` supports check the documentation, here is where to
start: https://bitcoin-s.org/docs/next/applications/server#server-endpoints

## Verifying signatures

This release is signed with [Chris's signing key](https://bitcoin-s.org/docs/next/security#disclosure) with
fingerprint `339A49229576050819083EB3F99724872F822910`

To do the verification, first hash the executable using `sha256sum`. You should check that the result is listed in
the `SHA256SUMS.asc` file next to its file name. After doing that you can use `gpg --verify` to authenticate the
signature.

Example:

```
$ sha256sum bitcoin-s-server-1.8.0.zip
9c130e51c0ca60021021ea48fab9fa2eae3797bafb1a4c022b3a2cd6d17446a0  bitcoin-s-server-1.8.0.zip
$ sha256sum bitcoin-s-cli-1.8.0.zip
5dd0953ed92b03621ed5e359b1f03a2bc25fe1d636854103c4fab4ae1c952daa  bitcoin-s-cli-1.8.0.zip
$ gpg --verify SHA256SUMS.asc
gpg: Signature made Thu 24 Sep 2020 12:49:39 PM CDT
gpg:                using RSA key 339A49229576050819083EB3F99724872F822910
gpg:                issuer &quot;stewart.chris1234@gmail.com&quot;
gpg: Good signature from &quot;Chris Stewart &lt;stewart.chris1234@gmail.com&gt;&quot;
```

### Website

https://bitcoin-s.org/

### Releases

https://repo1.maven.org/maven2/org/bitcoin-s/

### Snapshot releases

https://oss.sonatype.org/content/repositories/snapshots/org/bitcoin-s/

# Contributors

Thank you to our contributors this release!

@Christewart 
@benthecarman 
@user411 
@rorp 
@shreyanshyad
@shruthii625
@MattFaltyn
@sambradbury
@nkohen

# Executive Summary

This release integrates Tor network support for opening a DLC with your counterparty.
This is a huge UX improvement over the previous flow where 2 _manual_ round trips
were required to open a DLC with your peer.

See individual module sections for updates on per module basis.

## app commons 

Most changes in app commons this release is related to refactoring code so that
it can be used more generically across the code base.

bfbde2abaa Add appCommonsTest to windows test matrix (#3683)

0fb2cd0149 Remove implicit conversions from BitcoinSAppConfig -&gt; {WalletAppConfig,ChainAppConfig,NodeAppConfig} etc (#3652)

6ef30b4996 Add AppConfigFactory for DLCNodeAppConfig (#3598)

b980f4894d Implement BitcoinSAppConfig with ActorSystem (#3596)

75bbda66dd Add AppConfigActorSystem (#3590)

4f7b6422ea 2021 08 06 app config refacotr (#3498)

## App server

The app server is the headless backend for bitcoin-s. This runs our wallet, node
and chain management modules.

The biggest change this release is integrating end to end automated negotiation for entering
into DLCs in PR #3462. This means you can just give your tor address and an offer to a peer
and they will be able to enter into a DLC with you automatically.

This release included deprecating old endpoints that were poorly named and renaming them
to have an announcement suffix. For instance `createenumevent` -&gt; `createenumannouncement`.

The old endpoints will be removed next release. For more information see #3703 .

New rpcs added this release are 

- `getversion` - returns versions of bitcoin-s
- `backupwallet` - backs up the wallet to the provided destination
- `createcontractinfo` - creates a contract info based on oracle, total collateral and payouts
- `decodeoffer` - decodes a dlc offer
- `decodeannouncement` - decodes an oracle announcement
- `decodeattestments` - decodes oracle's attestments

7a3497ab9c 2021 10 15 createcontractinfo numeric (#3758)

80d498d288 Fix bug where getbalances was always retruning sats (#3750)

94e219befd Update getbalance rpcs to return a number rather than a string (#3746)

d912665067 Remove cors handler for all requests (#3736)

1b88d26095 Bump logging level back to INFO on http servers (#3734)

99e12a393f Fix missing Config.resolve() call (#3727)

6cbbd8825d 2021 10 02 create contract info (#3713)

26d7f99173 2021 09 30 rename endpoints (#3703)

698fe9e800 Add backupwallet and backuporacle endpoints (#3694)

4a44f9cd58 Run appServerTest on both windows and mac (#3609)

2191eb2049 Add 'getversion' endpoint to fetch the version from the backend (#3689)

515e85b1c5 Decode DLC messages cli commands (#3636)

f5ed232946 Bump fee by more to make sure our fee rate is increasing the test case (#3625)

55c57c487e Add CORS handling for running from a local dev server (#3612)

a5f4f9663c Add BitcoinSServerMain test to connect to bitcoind (#3591)

9ef27e4d7e Turn on bitcoin-s.node.relay=true by default on bundle/appServer (#3580)

0a31d6a4e2 Have wallet broadcast transaction for sendrawtransaction (#3578)

309d9ec217 Add proxy and tor sections to reference conf (#3530)

7cac44de4d DLC P2P in AppServer and GUI (#3462)

5aac4fd8d5 Bump server startup timeout from 60 seconds to 120seconds (#3514)

e2c2798e60 Implemented the ability to fetch unconfirmed transactions (#3429)

## bitcoind rpc

The major changes this module breaking up `BitcoindInstance` 
to `BitcoindInstanceLocal` and `BitcoindInstanceRemote`. These require different
parameters. We can do much more with a locally running bitcoind instance.

We also can now fetch the version of a running bitcoind instance.

781e77844f Implement ability to get proper version of BitcoindRpcClient from BitcoindRpcApConfig.clientF (#3699)

4e56fb7901 Make it so bitcoind backend exceptions don't get swallowed (#3697)

af96843e69 Try to fix race condition when shutting down bitcoind connection pool (#3665)

d53f164478 BitcoindRpcClient Improvements (#3600)

0746b14331 Move BitcoindRpcAppConfig into the bitcoind-rpc project (#3610)

## Build 

We now publish docker images that are available on arm64 as well as amd64.

We also allow docker containers to take a `BITCOIN_S_KEYMANAGER_ENTROPY`.
This is useful for platforms like umbrel that allow external entropy to be
provided by the platform. See #3679 for more information.

59e953a1fc Bump CI runs to use scalac 2.12.15 (#3700)

4ef1e6bcb6 CI fixes (#3597)

4a5265801c Allow for enternal entropy to be passed into a docker container for the appServer and oracleServer (#3679)

9b269f0e5e Change userId to work with umbrel (#3667)

cd9db4f4a9 Adjust the permissions of the statup script for the oracle server on docker so that any user can run the script (#3654)

e17ea32faa Update base docker image to openjdk:16-slim (#3650)

8e39b2bbb8 Sbt docker multi platform (#3649)

fd7cd71848 Update .gitmodules (#3390)

c774ce3a34 Implement logic to automatically attach deb,dmg,msi installers to a release when i tag something (#3388)

## Cli 

466de3e46a Update ConsoleCli endpoints, update docs (#3705)

40f89af597 Give help messages for DLC cli commands and document them (#3642)

## chain

Improves filter header verification when receiving filters from a peer.

fa45c74c36 Improve filter header verification (#3566)

## Core

Bug fixes, test cases and ergonomic improvements this release for core.

ba713bd98f Fixed edge case of numeric range computation (#3707)

4f65022472 Fix signet parsing of LnInvoices (#3691)

479f8e249c Remove unneeded CoreApi (#3599)

85eb2d5eb4 Fix approximateUtxoSize calculation for p2wpkh (#3669)

f3da45c504 Add CurrencyUnits.fromLong (#3653)

ba21c24d6f Give funding txid in DLC Signed state (#3640)

f2a2874177 Add new invalid BIP 32 test vectors (#3634)

6e41b76f5b Make test vector that times out on CI async (#3628)

e829d03249 Add better CETSignaturesV0TLV.toString so we don't accidentally DOS in the case of large amoutns of adaptor signatures (#3521)

462ffc53e6 Give TLVs subtypes, add LnMessage utilities (#3437)

2597904019 Move DLCWalletApi to core module (#3438)

9aa9a424c2 Implement init message from BOLT 1 (#3407)

## Db commons 

The release for db commons adds a new class `MasterXPubDAO` that allows you to store the
master xpub for a specific module like the `wallet` or `dlcOracle`. If a different 
seed is used on statup, an exception will be thrown saying that the stored master xpub
and the xpub generated from the seed are different. 

6df0354a73 Enable WAL mode for SQLite (#3704)

48213d9b81 Implement MasterXPubDAO (#3451)


## DLC node

This is a new module. This implements the networking logic to negotiate the building
of Contract Execution Transactions (CET) and the funding transaction for a DLC.

1051e6365a DLC P2P Client (#3402)

## DLC Oracle

This release for DLC oracle focuses on making sure our `DLCOracle` construction is safe.
Previously we could seed the oracle with entropy that doesn't correspond to entropy on disk
or passed via the `BITCOIN_S_KEYMANAGER_ENTROPY` flag.

One other bug fix in this release is making sure we increment the keyIndex in a thread safe way. 

5a5f1e00c7 Store oracle name in the database (#3748)

b02a963ff8 Fix bug with unsigned digit decomp events and signing negative outcomes (#3728)

ea375f9c55 Actually validate master xpub on startup (#3719)

98ecdf7ac3 Refactor DLCOracle construction to be more safe (#3449)

1032669f21 Add unit test for moving seeds and making sure we can get the same public key after moving (#3441)

36c4da7c95 Use AtomicInteger for keyIndex in DLCOracle (#3433)

2d96a9c519 Fix typo in DLCOracle (#3434)

91b88b60ec Add large digits test in DLCOracle (#3432)

ea1ead9a3f Add nonces to error message for easier debugging (#3430)

b7b2a7099f 2021 07 15 dlc oracle pg (#3413)

## DLC wallet

Bug fixes this release. The most notable is preserving the ordering of inputs when multiple

9668358807 2021 10 04 issue 3715 (#3724)

inputs are used to fund the DLC from one counterparty (#3647)

099e4469b4 Add ordering of funding inputs to DLC Wallet (#3647)

706c9fe961 Add check for valid broadcast states (#3560)

1d6ede492f Invert updating of DLC state and broadcasting the funding tx (#3526)

621e8e9033 Rescan DLC Tests (#3515)

c1ce9ca115 Disallow signing your own DLCAccept (#3453)

a295b363bd Fix bug where we couldn't execute a DLC twice (#3426)

892096d790 Disallow calling addDLCSigs as Initiator (#3411)

## fee provider

BitGo removed some objects from the result they return from their API

3ffa997cc7 remove fields from BitGoResult (#3739)

## gui 

Tons of improvements to the GUI. Our thinking on the GUI is to re-write it in typescript.
We will continue to support for the desktop GUI for now, will the goal of phasing it out
over the long term. 

656e9b1b5d Sort DLC table by last updated (#3607)

11dd28085a Add debug window button to unreserve all utxos (#3633)

8cff5b6e33 Change bitcoind RPC Password to PasswordField (#3587)

e62615dc5e Add guard to not allow us to check the network configuration on bitcoind (#3582)

072c4164db Add Tor running text to UI (#3546)

68afe90778 Flip buttons for Offer and Accept (#3579)

01617be190 Add welcome pane to right view on startup (#3577)

fd02d3642e Add dialog to show transaction id and link after wallet Send (#3570)

5567d2214f Move DLC/Event loading operations to Pane (#3567)

589077f2f3 Enum outcome labels to match numeric outcome labels (#3568)

b545915fc0 Implement rebroadcast closing tx (#3564)

e08dc636a1 Wallet on top UI, minWidth on DLC View fields (#3540)

63ccfbe1a0 Add Network label to statusbar (#3541)

da0d583471 Style wallet startup screens (#3542)

e0ecafc5f9 Add debug window to view log fixes #3516 (#3536)

77539c570a Adjust DLCTableView column widths and &quot;counter party&quot; to &quot;counterparty&quot; (#3539)

b2065a9c02 SplitPane flat Dialog UI (#3505)

b98aa7c8e1 GUI code cleanup (#3504)

5524f7d393 Add style classes, center Rounding Info (#3496)

84e6097d48 Set disable to context menu items based on selection, add Refund/Execute (#3477)

e315fb0563 Move to GridPane wallet, dynamic sizing (#3492)

66813dc7c5 Fix error parsing address in AcceptOfferDialog (#3491)

831e0fd96d Evenly space footer status items (#3485)

3177b1586b Adds Tor Address to UI, if set (#3481)

2dd348a79f Fix dialog results optionality nesting to match dialogOpt (#3479)

00841160e0 Modifer keys per OS, Mac native menubar (#3474)

ef16082b95 Add preferences for wallet window x,y,w,h persistence (#3473)

c022261c4f Remove colons from DLC view labels (#3471)

9aadf9053d Dialogs to CliCommandProducers with buildView(), common fileChooser (#3456)

bc3140c6bb Default Use Tor to config value, space login pages the same (#3472)

f20cdf667c Pretty print PnL in table view (#3400)

19fb1cf17a Add network selection combobox for Neutrino (#3409)

c1715760c6 Add connection indicator to GUI (#3381)

## keymanager 

This adds `bitcoin-s.keymanager.entropy` configuration that allows you to provide
external entropy for the modules that depend on the keymanager. These modules
are the `wallet` and `dlcOracle` as of this writing. 

3852a885e1 Try to fix CI for native

3a90115067 disable secp256k1 on native images so we don't run into linking errors (#3718)

132479d271 Implement ability to provide external entropy to bitcoin-s (#3672)

## Lnd rpc

This release adds functionality for signing, closing, and leasing ouputs with lnd.

There are various bug fixes in this release too.

98ceddfc22 update lnd to v0.13.3 (#3720)

f6169cc3af Add LndInstanceRemote (#3710)

26efbe783e Add lnd close channel function (#3692)

e6e1fbdab8 Fix typo for signet LndInstances (#3690)

b6f28456e2 Add functions for Lease &amp; Release output functions (#3677)

fd6e0864ac LndRpcClient: Fix listUnspent only showing unconfirmed utxos (#3663)

74777a9683 Add conversion utils for LndRpcClient (#3660)

5089e901bb Add wallet signing functions (#3658)

7cd21edb12 2021 08 17 rebroadcast funding tx (#3561)

35d2c6db4e Update LND to v0.13.1-beta (#3435)

## node

This release of `node` lays the groundwork for multi peer block filter lite client (#3401).
This functionality is not usable yet, but will be in the release of bitcoin-s.

This release also includes P2P reconnection logic. Previously you would have to restart the 
node to re-connect with a peer (#3572).

99107b61ea Add PeerDAO (#3738)

ebdf1e2382 add ControlMessageHandler (#3732)

db46e35172 Fix case where we forget to correctly assign currentPeerMsgHandlerRecv (#3662)

b6ef27eb3e Move block generation and synchronization of th wallet before clearing utxo/addresses (#3623)

ac8bdb120c Implement PeerMessageReceiverState.InitializedDisconnect. This allows us to distinguish between disconnections we initalized and connections the peer intialized. This is needed for determining whether we should reconnect or not (#3583)

20575bcd68 Fix missing afterAll in ReConnectionTest (#3584)

54ce2ebeb2 P2P reconnect logic (#3572)

114fbf35fe Update version, userAgent for bitcoin-s (#3565)

037ab7341e Reduce logs for inv messages and wallet callbacks to DEBUG (#3524)

1426c31483 Multi peer: Sync with random peer (#3454)

85975b8b07 complete handshake with peers (#3446)

4be2b2109b [WIP] Adding multi-peer support (#3401)

1c6d728197 Made relay flag in version message configurable (#3416)

45233be22d Update user agent (#3384)

## Oracle explorer client

Updates the API used by oracle explorer client to be `v2`. Suredbits
released this API recently. [See the API docs for more info](https://gist.github.com/Christewart/a9e55d9ba582ac9a5ceffa96db9d7e1f)

ab8649a6a1 update oracle explorer client to use v2 of the API (#3747)

## Oracle server

This release adds two new endpoint for the oracle server in #3701

**_WARNING_**

These endpoints should be used VERY carefully. You can reveal your private key if you delete
attestations that were widely shared if you re-attest with a different value. Deleting
an announcement that users have built DLCs based on will mean those DLCs will have to exercise
the refund clause. If you don't know what you are doing, it's best to not use these endpoints.

- `deleteannouncement` - deletes the announcement
- `deleteattestation` - deletes the attestations for an announcement

6aff01ffbf createattesattion -&gt; signenum (#3712)

3d725adc92 2021 09 29 delete announcement (#3701)

27d4c09d37 Add sha256 announcement/event ids on oracleServer 'getevent' for use in UI (#3673)

## secp256k1jni

60dbd0252d Update secp256k1 precompiled binaries to use safegcd code on linux64 (#3528)

560edf66d8 update osx64 secp256k1 binaries (#3531)

e3ab76fe6b update arm64 secp256k1 binaries (#3527)

## wallet

This release for the wallet fixes bugs and adds tests. No new functionality was added.

9e43a242fa Fix logical error on getunconfirmed balance for an account (#3721)

1f35dbdb85 Fix bug where we weren't waiting on a future to complete in for expression (#3627)

bedc152f33 Write unit test for SpendingInfoDAO.upsert() (#3620)

184bf415df More bitcoind backend wallet tests (#3605)

f85f969500 Revert 60 second delay on broadcast to go back to 4 hour default to not break IBD (#3557)

9666e9d296 2021 08 09 init delay broadcast freq (#3509)

## testkit

The major new feature this release is adding the ability to configure the testkit to use
postgres with the test harness. You can force the testkit by setting this configuration
in your reference.conf `bitcoin-s.testkit.pg.enabled=true`

2c8a2b0e32 Fix testkit depending on slf4j twice (#3644)

495ab62104 Tor in Testkit (#3484)

902f4aa332 The spaces after the log level cause logging levels not to work (#3545)

b2b2ca45db Add ability to configure postgres database backends for test cases via reference.conf (#3421)

## tor

This is a new module introduced in 1.8. This adds support for tor in bitcoin-s.

704b02ae6c Use random ports for pre-packaged Tor daemon (#3604)

cebd289dd6 Implement versioning for packaged tor (#3576)

c915711908 Make Tor setup Docker compatible (#3552)

addb1254ee Fix for if tor is already running (#3562)

f2e68bbfc5 Add guard for the case where tor binary hasn't created log file yet (#3558)

b7d85264a0 Implement TorAppConfig.start(), use tor logs to detect when the tor is fully started (#3549)

bbd3cd2bc4 Stop tor binary when server is shutdown (#3543)

04678b5ed9 Add tor config to bundle application.conf (#3537)

ddd27c3d89 Add TorBundle, make all mac files executable that are required (#3534)

43e0287fed Package Tor with Bitcoin-s (#3483)

3d4cf1fc91 Tor support for all sub-projects (#3506)

8979ac2932 Don't use tor proxy for localhost connections (#3500)

b39ca47268 Create TorAppConfig (#3476)

59963156bc Hidden service setup helper (#3423)

ca40af5d94 Tor support for BTC RPC (#3470)

16e8554756 SOCKS5 client transport (#3396)

8b663d91b6 Tor support for P2P (#3311)


## Website

Update various documentation. 

6f54fc543b 2021 10 15 wallet numeric example (#3759)

6c5f8fd84a 2021 10 15 release notes update (#3760)

d8722c3f32 Add descriptions for modules that are being updated (#3743)

9bcc79c3d0 Update README (#3745)

9148212800 Clarify documentation on getting-setup.md (#3731)

4c15eb5268 Fix settling section (#3725)

3025a9a874 Add wallet election example to docs (#3716)

aa50ca8d64 Begin adding 1.8.0 release notes (#3717)

d2a7bc02b6 Fix app server docker docs (#3575)

7f7bc1f4bf Update configuration.md (#3503)

6a66f9bfcd Update tor.md (#3507)

c27291a7a2 Getting Setup Fixes (#3517)

c37f982f02 Update tor.md (#3495)

a8fa96b0a4 Add where tor.md modifications need to be made explicitly (#3493)

e61be252bd Updated README (#3489)

79e11c6dce Update path to secp256k1 library in docs (#3385)


## Dependencies

87624d7055 Update sbt-scoverage to 1.9.1 (#3741)

779b728834 Update sbt-native-packager to 1.9.5 (#3735)

d807007457 Update sbt-scalajs, scalajs-compiler, ... to 1.7.1 (#3729)

984d575869 Update sbt-native-packager to 1.9.0 (#3733)

f6a2ec5896 Bump prismjs from 1.24.0 to 1.25.0 in /website (#3723)

8cbdf8244a Update scalacheck-1-14 to 3.2.2.0 (#3722)

335bc13f97 Update akka-actor, akka-discovery, ... to 2.6.17 (#3756)

a6ee7360c1 Update sbt-assembly to 1.1.0 (#3641)

7c5967a059 Update breeze-viz to 1.3 (#3550)

41899e6ad6 Update sbt-ci-release to 1.5.10 (#3754)

4b04a54f15 Update sbt-native-image to 0.3.2 (#3752)

bb8997b6a0 Update sbt-native-packager to 1.9.6 (#3753)
51bf5458dc Update metrics-core to 4.2.4 (#3709)

bf16bab881 Update scodec-bits to 1.1.29 (#3698)

f9cfd05414 Update postgresql to 42.2.24 (#3687)

c17cc86ad6 Update sbt-ci-release to 1.5.9 (#3685)

c53b96c77f Update native-lib-loader to 2.4.0 (#3682)

9b429e98da Bump prismjs from 1.24.0 to 1.25.0 in /website (#3680)

dc56c69c6a Update scalafx to 16.0.0-R25 (#3676)

b80710eaaf Update native-lib-loader to 2.3.6 (#3678)

619fd5a1fb Update scalatest to 3.2.10 (#3675)

3c64af39d9 Update sbt-scoverage to 1.9.0 (#3671)

11c3626fac Update sbt-bloop to 1.4.9 (#3664)

87b8c4a138 Update scala-library to 2.12.15 (#3668)

911fd3429d Update scala-async to 1.0.1 (#3656)

576680a419 Update logback-classic to 1.2.6 (#3655)

14ea28bfa2 Update akka-grpc-runtime_2.12, ... to 2.1.0 (#3638)

3c9b30b974 Update scodec-bits to 1.1.28 (#3639)

2d429db60d Update sqlite-jdbc to 3.36.0.3 (#3630)

554869e72a Update akka-actor, akka-discovery, ... to 2.6.16 (#3574)

168da1ae1e Update sbt-mdoc to 2.2.23 (#3613)

0200ae8beb Update sqlite-jdbc to 3.36.0.2 (#3608)

90c3f69713 Update scalajs-stubs to 1.1.0 (#3508)

004b6cc59d Update sbt-scalajs, scalajs-compiler, ... to 1.7.0 (#3475)

fc88aa077b Update sbt-mdoc to 2.2.22 (#3439)

3cdc0d19c7 Update akka-http, akka-http-testkit, ... to 10.2.6 (#3488)

520e8e5715 Update janino to 3.1.6 (#3457)

07b4e722c1 Update akka-http, akka-http-testkit, ... to 10.2.5 (#3455)

7b1c5639cc Update logback-classic to 1.2.5 (#3452)

62a8897d7f Update slf4j-api to 1.7.32 (#3427)

7f07ed7a7a Update metrics-core to 4.2.3 (#3419)

6e04010cba Update scala-async to 1.0.0 (#3392)

74964ab145 Update sbt to 1.5.5 (#3391)

cddecc2075 Update sbt-scalafmt to 2.4.3 (#3386)

38c55ad0c0 Update scala-collection-compat to 2.5.0 (#3387)</summary>
    <title>bitcoin-s/bitcoin-s: 1.8.0</title>
    <updated>2021-10-17T19:20:22Z</updated>
    <dc:date>2021-10-17T19:20:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/IRIS-3.1.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/IRIS-3.1.0"/>
    <summary>This release contains several enhancements in JSON-RPC interface, Ethereum compatibility fixes and node performance improvements. This is a summary of the changes included in this version:

- Added support for `newPendingTransactions` subscription (#1580)
- Added support for EIP-1898: add `blockHash` to JSON-RPC methods which accept a default block parameter. (#1581)
- Added support for `debug_traceBlockByHash` JSON-RPC method (#1546)
- Added support for `blockHash` filter in `eth_getLogs` JSON-RPC method (#1527)
- JSON-RPC compatibility fixes (#1491, #1522, #1564, #1588, #1601) 
- Performance improvements (#1459, #1557, #1569, #1579, #1585)

You can find a complete list of the changes introduced in [Iris 3.1.0 milestone](https://github.com/rsksmart/rskj/milestone/25).

SHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):
07dea8cd7b80e1341c06e1c9f6d15f2b381f5d46443db777ebded194088a5784 rskj-core-3.1.0-IRIS-all.jar</summary>
    <title>rsksmart/rskj: IRIS-3.1.0</title>
    <updated>2021-10-15T16:41:33Z</updated>
    <dc:date>2021-10-15T16:41:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rootzoll/raspiblitz/releases/tag/v1.7.1</id>
    <link href="https://github.com/rootzoll/raspiblitz/releases/tag/v1.7.1"/>
    <summary>c-lightning integration &amp; refactor of setup process (prepare for upcomming WebUI)</summary>
    <title>rootzoll/raspiblitz: v1.7.1</title>
    <updated>2021-10-12T14:11:32Z</updated>
    <dc:date>2021-10-12T14:11:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.10</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.10"/>
    <summary>* ADD: ISK Fiat 
* ADD: Copy QRCode to Clipboard 
* ADD: loc sync fr, he, ar 

* FIX: multisig not exporting correct psbt with all signatures 
* FIX: Clipboard Popup not working #4000 
* FIX: App would crash if navigate was called prior to menu show 
* FIX: The term &quot;Alert&quot; is not part of the localisation file #3895 

* REF: change default electrum servers list</summary>
    <title>BlueWallet/BlueWallet: v6.2.10</title>
    <updated>2021-10-09T17:25:51Z</updated>
    <dc:date>2021-10-09T17:25:51Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.4</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.4"/>
    <summary>This version of Umbrel brings Bitcoin Core 22.0, lower disk space usage (free up ~50GB), 3 brand new apps in the Umbrel App Store — Node-RED, Krystal Bull and LN Markets, performance improvements, updated apps, and more.

Please note that the Electrum server on your Umbrel will be unavailable for ~12 hours after the update, and any wallets connected to it (BitBoxApp, BlueWallet on-chain only, Electrum Wallet and Sparrow) will not be able to connect to your Umbrel during that time, along with the Mempool and BTC RPC Explorer apps.

If you face any difficulties while updating, please message us on Telegram: https://t.me/getumbrel&quot;</summary>
    <title>getumbrel/umbrel: v0.4.4</title>
    <updated>2021-10-08T14:04:01Z</updated>
    <dc:date>2021-10-08T14:04:01Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/eclair/releases/tag/v0.6.2</id>
    <link href="https://github.com/ACINQ/eclair/releases/tag/v0.6.2"/>
    <summary># Eclair v0.6.2

This releases fixes a known vulnerability, makes several performance improvements, includes a few bug fixes and many new features.
It is fully compatible with 0.6.1 (and all previous versions of eclair).

This release requires a few actions from node operators when upgrading: make sure you read the release notes carefully!

The release notes can be found [here](https://github.com/ACINQ/eclair/blob/master/docs/release-notes/eclair-v0.6.2.md).

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:

- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:

```sh
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:

```sh
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```

## Building

Eclair builds are deterministic. To reproduce our builds, please use the following environment (*):

- Ubuntu 20.04
- AdoptOpenJDK 11.0.6
- Maven 3.8.1

Use the following command to generate the eclair-node package:

```sh
mvn clean install -DskipTests
```

That should generate `eclair-node/target/eclair-node-0.6.2-6817d6f-bin.zip` with sha256 checksums that match the one we provide and sign in `SHA256SUMS.asc`

(*) You may be able to build the exact same artefacts with other operating systems or versions of JDK 11, we have not tried everything.

## Upgrading

This release is fully compatible with previous eclair versions. You don't need to close your channels, just stop eclair, upgrade and restart.</summary>
    <title>ACINQ/eclair: v0.6.2</title>
    <updated>2021-10-08T07:52:04Z</updated>
    <dc:date>2021-10-08T07:52:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v.6.2.9</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v.6.2.9"/>
    <summary>* FIX: Lightning wallet was throwing error with Tor 
* FIX: choose next electrum server if current one is dead 
* FIX: dark mode in new import screens 
* FIX: If null or undefined, dont show manage funds button</summary>
    <title>BlueWallet/BlueWallet: v.6.2.9</title>
    <updated>2021-10-04T22:04:45Z</updated>
    <dc:date>2021-10-04T22:04:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.3</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.3"/>
    <summary>SECURITY UPDATE: This version of Umbrel brings the latest LND 0.13.3 which includes an important security fix.

If you face any difficulties while updating, please message us on Telegram: https://t.me/getumbrel</summary>
    <title>getumbrel/umbrel: v0.4.3</title>
    <updated>2021-10-04T17:52:00Z</updated>
    <dc:date>2021-10-04T17:52:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.13.3-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.13.3-beta"/>
    <summary># Security Fixes

This release contains a security fix for [CVE-2021-41593](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41593) which would allow an attacker to cause loss of funds through a griefing vector related to high accepted dust values. This release addresses the issue by enforcing stricter clamps on accepted dust values during channel funding, and also adds `hltcswitch` level dust accounting to limit the total dust exposure (triggered by an instantaneous force close) at any moment. The default allotted fully forwarded dust exposure level is set at `500k sats`, this value can be tweaked with a new config flag: `--dust-threshold=`. 

If upgrading is not possible to prevent CVE-2021-41593, the [`dust-tool`](https://github.com/lightninglabs/dust-tool) can intercept bad `open_channel` parameters and reject them via our `ChannelAcceptor`. In addition, it can also scan your node's current set of confirmed channels and recommend closing potentially risky ones out.

Alternatively, your node's advertised `min_htlc` value can be increased to ensure it is well above all the dust limits of its active channels. 

# Database Migrations
This release does not contain any database migrations.

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://keybase.io/bitconner/pgp_keys.asc | gpg --import
curl https://keybase.io/roasbeef/pgp_keys.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.13.3-beta.sig` and `manifest-v0.13.3-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.13.3-beta.sig manifest-v0.13.3-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Mon Oct  4 08:20:20 2021 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]

```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.13.3-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.13.3-beta.sig.ots -f manifest-roasbeef-v0.13.3-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.16.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.13.3-beta
gpg: Signature made Mo 04 Okt 2021 16:08:05 CEST
gpg:                using RSA key F4FC70F07310028424EFC20A8E4256593F177720
gpg: Good signature from &quot;Oliver Gugger &lt;gugger@gmail.com&gt;&quot; [unknown]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.13.3-beta /verify-install.sh v0.13.3-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.13.3-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.13.3-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.3-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.3-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.13.3.md

# Contributors (Alphabetical Order)

* Conner Fromknecht
* Eugene Siegel
* Harsha Goli
* Jordi Montes
* Olaoluwa Osuntokun
* Oliver Gugger
</summary>
    <title>lightningnetwork/lnd: v0.13.3-beta</title>
    <updated>2021-10-04T15:23:25Z</updated>
    <dc:date>2021-10-04T15:23:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.0</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.0"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#090-sep-30-2021</summary>
    <title>romanz/electrs: v0.9.0</title>
    <updated>2021-10-01T06:29:37Z</updated>
    <dc:date>2021-10-01T06:29:37Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.8</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.8"/>
    <summary>**Highlights:**

- Wallet accounts search &amp; discovery
- Offline wallet import
- Custom derivation paths
- Passphrases in advanced mode
- Toggle for disabling Tor 
- Sinhala language

**Improvements:**

- View QRCode button on 'is it my address'
- Support for electrum with bitcoin core 22+
- Proper fee estimation for multisig
- Handoff in-app rather than browser 
- Prompts were inaccessible on macOS 
- Screenshot prevented in onchain receive</summary>
    <title>BlueWallet/BlueWallet: v6.2.8</title>
    <updated>2021-09-30T12:10:40Z</updated>
    <dc:date>2021-09-30T12:10:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.4</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.4"/>
    <summary>Minor bug fixes release, update recommended for shared hosting.

### Bug fixes

* If `Only enable the payment method after user explicitly chooses it` is enabled for a store and a payment method is unavailable, the server could become unresponsive. @NicolasDorier
* Authorize API key page was broken when trying to select specific stores (#2858) @ubolator
* The /docs page was broken in 1.2.3 due to CSP @NicolasDorier
* Fixing crashes happening when someone migrate from BTCPay Server altcoins edition back to bitcoin only @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.2.4</title>
    <updated>2021-09-26T05:45:16Z</updated>
    <dc:date>2021-09-26T05:45:16Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.7.4</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.7.4"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

## Release notes
This release enables you to connect to a Bitcoin Core node with a Tor v3 address.

**Tor v2 addresses will not be supported after October 15th, so please update your Bitcoin and Bisq nodes ASAP.**

This version also introduces three new payment methods: SWIFT, Paysera, and Paxum. As always, there are many additional bug fixes and minor improvements across the board as well.

### Improvements
- [Add bitcoinj Tor v3 support](https://github.com/bisq-network/bisq/pull/5686)
- [Update to BTC node Tor v3 onions](https://github.com/bisq-network/bisq/pull/5713)
- [Add SWIFT payment method](https://github.com/bisq-network/bisq/pull/5672)
- [Add Payment Methods: Paysera and Paxum](https://github.com/bisq-network/bisq/pull/5673)
- [Allow user to initiate arbitration once locktime has expired](https://github.com/bisq-network/bisq/pull/5681)
- [Update @leo816's onion address](https://github.com/bisq-network/bisq/pull/5710)
- [Improve japanese bank branch validation](https://github.com/bisq-network/bisq/pull/5694)
- [Reduce # of hash calculations in UI OfferBook view](https://github.com/bisq-network/bisq/pull/5682)

### Bug fixes
- [Fix failed trade / missing payment information](https://github.com/bisq-network/bisq/pull/5679)

### Development &amp; Documentation
- [Override/disable gRPC call rate meters in test harness driver](https://github.com/bisq-network/bisq/pull/5683)
- Add new api method `editoffer`: [1](https://github.com/bisq-network/bisq/pull/5572), [2](https://github.com/bisq-network/bisq/pull/5571), [3](https://github.com/bisq-network/bisq/pull/5576)

### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.7.4.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.7.4-all.jar
The output need to match the value from the Bisq-1.7.4.jar.txt file.

There are three hashes within the Bisq-1.7.4.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 11.0.10 and the v1.7.4 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.7.4.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @Emzy 
- @ghubstan 
- @jmacxx 
- @ripcurlx
- @sqrrm
- @wiz 

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.7.4</title>
    <updated>2021-09-24T13:12:32Z</updated>
    <dc:date>2021-09-24T13:12:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.101</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.101"/>
    <summary>## API Updates
 * Custom message types are now supported directly in the `PeerManager`,
   allowing you to send and receive messages of any type that is not natively
   understood by LDK. This requires a new type bound on `PeerManager`, a
   `CustomMessageHandler`. `IgnoringMessageHandler` provides a simple default
   for this new bound for ignoring unknown messages (#1031, #1074).
 * Route graph updates as a result of failed payments are no longer provided as
   `MessageSendEvent::PaymentFailureNetworkUpdate` but instead included in a
   new field in the `Event::PaymentFailed` events. Generally, this means route
   graph updates are no longer handled as a part of the `PeerManager` but
   instead through the new `EventHandler` implementation for
   `NetGraphMsgHandler`. To make this easy, a new parameter to
   `lightning-background-processor::BackgroundProcessor::start` is added, which
   contains an `Option`al `NetGraphmsgHandler`. If provided as `Some`, relevant
   events will be processed by the `NetGraphMsgHandler` prior to normal event
   handling (#1043).
 * `NetworkGraph` is now, itself, thread-safe. Accordingly, most functions now
   take `&amp;self` instead of `&amp;mut self` and the graph data can be accessed
   through `NetworkGraph.read_only` (#1043).
 * The balances available on-chain to claim after a channel has been closed are
   now exposed via `ChannelMonitor::get_claimable_balances` and
   `ChainMonitor::get_claimable_balances`. The second can be used to get
   information about all closed channels which still have on-chain balances
   associated with them. See enum variants of `ln::channelmonitor::Balance` and
   method documentation for the above methods for more information on the types
   of balances exposed (#1034).
 * When one HTLC of a multi-path payment fails, the new field `all_paths_failed`
   in `Event::PaymentFailed` is set to `false`. This implies that the payment
   has not failed, but only one part. Payment resolution is only indicated by an
   `Event::PaymentSent` event or an `Event::PaymentFailed` with
   `all_paths_failed` set to `true`, which is also set for the last remaining
   part of a multi-path payment (#1053).
 * To better capture the context described above, `Event::PaymentFailed` has
   been renamed to `Event::PaymentPathFailed` (#1084).
 * A new event, `ChannelClosed`, is provided by `ChannelManager` when a channel
   is closed, including a reason and error message (if relevant, #997).
 * `lightning-invoice` now considers invoices with sub-millisatoshi precision
   to be invalid, and requires millisatoshi values during construction (thus
   you must call `amount_milli_satoshis` instead of `amount_pico_btc`, #1057).
 * The `BaseSign` interface now includes two new hooks which provide additional
   information about commitment transaction signatures and revocation secrets
   provided by our counterparty, allowing additional verification (#1039).
 * The `BaseSign` interface now includes additional information for cooperative
   close transactions, making it easier for a signer to verify requests (#1064).
 * `Route` has two additional helper methods to get fees and amounts (#1063).
 * `Txid` and `Transaction` objects can now be deserialized from responses when
   using the HTTP client in the `lightning-block-sync` crate (#1037, #1061).

## Bug Fixes
 * Fix a panic when reading a lightning invoice with a non-recoverable
   signature. Further, restrict lightning invoice parsing to require payment
   secrets and better handle a few edge cases as required by BOLT 11 (#1057).
 * Fix a panic when receiving multiple messages (such as HTLC fulfill messages)
   after a call to `chain::Watch::update_channel` returned
   `Err(ChannelMonitorUpdateErr::TemporaryFailure)` with no
   `ChannelManager::channel_monitor_updated` call in between (#1066).
 * For multi-path payments, `Event::PaymentSent` is no longer generated
   multiple times, once for each independent part (#1053).
 * Multi-hop route hints in invoices are now considered in the default router
   provided via `get_route` (#1040).
 * The time peers have to respond to pings has been increased when building
   with debug assertions enabled. This avoids peer disconnections on slow hosts
   when running in debug mode (#1051).
 * The timeout for the first byte of a response for requests from the
   `lightning-block-sync` crate has been increased to 300 seconds to better
   handle the long hangs in Bitcoin Core when it syncs to disk (#1090).

## Serialization Compatibility
 * Due to a bug in 0.0.100, `Event`s written by 0.0.101 which are of a type not
   understood by 0.0.100 may lead to `Err(DecodeError::InvalidValue)` or corrupt
   deserialized objects in 0.100. Such `Event`s will lead to an
   `Err(DecodeError::InvalidValue)` in versions prior to 0.0.100. The only such
   new event written by 0.0.101 is `Event::ChannelClosed` (#1087).
 * Payments that were initiated in versions prior to 0.0.101 may still
   generate duplicate `PaymentSent` `Event`s or may have spurious values for
   `Event::PaymentPathFailed::all_paths_failed` (#1053).
 * The return values of `ChannelMonitor::get_claimable_balances` (and, thus,
   `ChainMonitor::get_claimable_balances`) may be spurious for channels where
   the spend of the funding transaction appeared on chain while running a
   version prior to 0.0.101. `Balance` information should only be relied upon
   for channels that were closed while running 0.0.101+ (#1034).
 * Payments failed while running versions prior to 0.0.101 will never have a
   `Some` for the `network_update` field (#1043).

In total, this release features 67 files changed, 4980 insertions, 1888
deletions in 89 commits from 12 authors, in alphabetical order:
 * Antoine Riard
 * Devrandom
 * Galder Zamarreño
 * Giles Cope
 * Jeffrey Czyz
 * Joseph Goulden
 * Matt Corallo
 * Sergi Delgado Segura
 * Tibo-lg
 * Valentine Wallace
 * abhik-99
 * vss96</summary>
    <title>lightningdevkit/rust-lightning: v0.0.101</title>
    <updated>2021-09-23T18:47:46Z</updated>
    <dc:date>2021-09-23T18:47:46Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.7</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.7"/>
    <summary>**Highlights:**
- Sat/vByte instead of sat/byte 
- Tor stability on android
- Faster native navigation 

**Improvements:**
- Typos in language file 
- Display built branch on about screen 
- Remove blur package. Use builtin solution 
- Pause QRCode during Export
- Cobo Vault compatibility
- Improved currency exchange module</summary>
    <title>BlueWallet/BlueWallet: v6.2.7</title>
    <updated>2021-09-19T20:11:04Z</updated>
    <dc:date>2021-09-19T20:11:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin/bitcoin/releases/tag/v22.0</id>
    <link href="https://github.com/bitcoin/bitcoin/releases/tag/v22.0"/>
    <summary>Bitcoin Core version 22.0 is now available from:

https://bitcoincore.org/bin/bitcoin-core-22.0/

For the release notes please see the git repository:

https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-22.0.md

Do not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.</summary>
    <title>bitcoin/bitcoin: v22.0</title>
    <updated>2021-09-14T11:32:48Z</updated>
    <dc:date>2021-09-14T11:32:48Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.2</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.2"/>
    <summary>Umbrel 0.4.2 brings the latest versions of Samourai Server, Mempool, Home Assistant, BTCPay Server, Nextcloud, BTC RPC Explorer, Pi-hole, Synapse, Element, LNbits, Gitea, code-server, and a brand new app — Squeaknode, to the Umbrel App Store, along with an updated Electrum server, performance upgrades, bug fixes, and more.

If you face any difficulties while updating, please message us on Telegram: https://t.me/getumbrel</summary>
    <title>getumbrel/umbrel: v0.4.2</title>
    <updated>2021-09-13T15:31:28Z</updated>
    <dc:date>2021-09-13T15:31:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.3"/>
    <summary>This release fixes three XSS vulnerabilities. Those vulnerabilities only impacts shared BTCPay instances.
Special thanks to Ajmal &quot;@b3ef&quot; Aboobacker and Abdul &quot;@b1nslashsh&quot; muhaimin for finding them who contacted us through @huntrdev.
See [1](https://huntr.dev/bounties/ffabdac8-7280-4806-b70c-9b0d1aafbb6e/), [2](https://www.huntr.dev/bounties/32e30ecf-31fa-45f6-8552-47250ef0e613/) and [3](https://huntr.dev/bounties/0fcdee5f-1f07-47ce-b650-ea8b4a7d35d8/).

# Bug fixes:

* Use CSP to prevent future XSS attacks. (#2856, #2863) @NicolasDorier
* Fix XSS vulnerabilities in summernote, the rich text editor (#2859) @dennisreimann
* The page could crash if the user clicks too many time on Notificate 'Mark as Seen' @NicolasDorier 
* Fix plugins page crashing @Kukks
* Fix page crash of the perk editor in the crowdfund settings when the title is not set @dennisreimann
* Do not generate payment methods when 0 amount invoice (#2776)
* When using the BTCPay Vault, some hardware wallet types were considered unknown @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.2.3</title>
    <updated>2021-09-09T13:18:45Z</updated>
    <dc:date>2021-09-09T13:18:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.5</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.5"/>
    <summary>* ADD: support for truncated BIP39 wordlist (3-4 chars per word)
* FIX: Lightning address error when typing anything after @
* FIX: storage issues
* FIX: Cosign for multisig was not a visible option
* FIX: Localize LN Invoice Expire time
* FIX: Unit wasnt defaulting to BTC
* FIX: localizations ar, es, he, ko, de, fa_IR
* REF: Update details UI to match design
* REF: Update payjoin-client</summary>
    <title>BlueWallet/BlueWallet: v6.2.5</title>
    <updated>2021-09-09T09:48:56Z</updated>
    <dc:date>2021-09-09T09:48:56Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.2.2</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.2.2"/>
    <summary>This is a minor release for fixes and minor enhancements.
All users are encouraged to upgrade.

Changelog:

* Fix memory leaks in the frontend causing webapp to crash (#755)
* Fix median fee not displayed when viewing a block page (#749)
* Fix incorrect API documentation and related examples (#716)
* Fix displaying significant digits of transaction fee (#722)
* Fix search bar addresses types and case sensitivity (#765)
* Fix current difficulty period progress calculation (#746)
* Add block navigation arrows for next and previous (#710)
* Add base module setting for Liquid / Bisq builds (#669)

The complete changelog is available at:
https://github.com/mempool/mempool/compare/v2.2.1...v2.2.2</summary>
    <title>mempool/mempool: v2.2.2</title>
    <updated>2021-09-09T07:36:28Z</updated>
    <dc:date>2021-09-09T07:36:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.17</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.17"/>
    <summary>## Main changes

### Manual input support and sending to Lightning addresses

You can now pay [lightning addresses over LNUrl-pay](https://lightningaddress.com/) with Phoenix. Go to the Send screen &gt; Manual input to enter an address. You can also manually enter a Bitcoin address or a BOLT11 invoice if you want to.

### Arabic translation

The app has been translated to Arabic. Thanks @EZ0010 for the translation, and @Jean-Gray for the review.

### Full list of changes

- **app**: https://github.com/ACINQ/phoenix/compare/v1.4.15...v1.4.17
- **core**: https://github.com/ACINQ/eclair/compare/v0.4.13-android-phoenix...v0.4.14-android-phoenix

## Verifying signatures

You will need `gpg` and our release signing key E434ED292E85643A. Note that you can get it:
- from our website: https://acinq.co/pgp/padioupm.asc
- from github user @pm47, a committer on eclair: https://api.github.com/users/pm47/gpg_keys

To import our signing key:
```
$ gpg --import padioupm.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.17</title>
    <updated>2021-09-07T08:42:54Z</updated>
    <dc:date>2021-09-07T08:42:54Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/v0.3.11</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/v0.3.11"/>
    <summary>Fix to test suite for Coldcard</summary>
    <title>unchained-capital/caravan: v0.3.11</title>
    <updated>2021-09-02T20:15:44Z</updated>
    <dc:date>2021-09-02T20:15:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.4</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.4"/>
    <summary>* ADD: Open Receive screen on push 
* FIX: Address list would crash on lack of item 
* ADD: lightning address send support (closes #3690) 
* FIX: Use preferred unit for min and max information 
* FIX: Update UI for Send screen if new deeplink data is available 
* FIX: Expand option was available even after use 
* FIX: When selecting to send MAX on part or a X is shown in amount. #2412 
* ADD: pending transaction status screen UX (closes #3183) 
* ADD: onchain receive address now shows ETA on incomming transaction (rel #3183) 
* FIX: Disable toggle if server is for Tor 
* FIX: small RTL alignment issue #3677 
* FIX: multisig cosigner type inferred from the path (closes #3653) 
* FIX: Reordering Wallets UX 
* FIX: If Tor is not supported, throw alert. 
* FIX: If offline mode, disable import button 
* FIX: ImagePicker wasnt processing selected asset 
* REF: Localization for QR 
* FIX: lnurl-pay comment 
* ADD: Enhance offline mode UI 
* ADD: Borders to Dynamic QR Code 
* REF: Use ContextButton for advanced options 
* ADD: lnurl-pay comments (closes #3617) 
* FIX: single-address realm txs storage 
* REF: store HD wallets txs in realm properly, one per row (closes #3357)</summary>
    <title>BlueWallet/BlueWallet: v6.2.4</title>
    <updated>2021-09-02T14:22:07Z</updated>
    <dc:date>2021-09-02T14:22:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.2"/>
    <summary># Bug fixes:

* It was impossible to send from the wallet to more than two destinations (#2825) @NicolasDorier
* Fix rounding issue in the invoice refund flow (#2778, #2810) @NicolasDorier
* When cloning an expired payment request, the new payment request was also expired (#2820) @dennisreimann
* Fix instructions to import a coldcard wallet via file upload (#2809) @mandelbit
* Lightning payments should not be proposed for top-up invoices (#2772, #2780) @ubolator
* Typo fixes (#2774) @jorisvial
* Fix payjoin client to properly handle receiver using output substitution (#2677) @NicolasDorier
* The checkout would crash for some client if automatic detection of language was checked, and the browser was not setting the accepted language @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.2.2</title>
    <updated>2021-08-31T07:26:13Z</updated>
    <dc:date>2021-08-31T07:26:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.7.3</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.7.3"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

## Release notes
This summer vacation release fixes some minor bugs.

### Improvements
- [Improved tooltip for signed and unsigned accounts](https://github.com/bisq-network/bisq/pull/5625)
- [Allow LTC accounts to use SegWit addresses](https://github.com/bisq-network/bisq/pull/5639)

### Bug fixes
- [Fix issue with extraData field when editing offer](https://github.com/bisq-network/bisq/pull/5651)
- [Fix issue for deprecated payment account imported from backup](https://github.com/bisq-network/bisq/pull/5644)
- [Prevent negative suggested mining fee when burning BSQ for fees](https://github.com/bisq-network/bisq/pull/5643)
- [Arbitration: Avoid creating more than one refund payout](https://github.com/bisq-network/bisq/pull/5649)
- [Update @ripcurlx expired public key](https://github.com/bisq-network/bisq/pull/5640)

### Development &amp; Documentation
- [Pricenode: Remove the Exmo exchange as a price provider](https://github.com/bisq-network/bisq/pull/5671)
- [Pricenode: Only bind jmxremote management interface to 127.0.0.1](https://github.com/bisq-network/bisq/pull/5670)

### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.7.3.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.7.3-all.jar
The output need to match the value from the Bisq-1.7.3.jar.txt file.

*NEW: There are three hashes within the Bisq-1.7.3.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 11.0.10 and the v1.7.3 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.*

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.7.3.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @BtcContributor
- @jmacxx 
- @ripcurlx
- @sqrrm
- @xyzmaker123

A special thanks to our first time contributors:
- @xyzmaker123
  - [Improved tooltip for signed and unsigned accounts](https://github.com/bisq-network/bisq/pull/5625)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.7.3</title>
    <updated>2021-08-28T17:03:06Z</updated>
    <dc:date>2021-08-28T17:03:06Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.6.0</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.6.0"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/Specter-Setup-v1.6.0.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/SpecterDesktop-v1.6.0.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/specter_desktop-v1.6.0-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/specterd-v1.6.0-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/specterd-v1.6.0-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/specterd-v1.6.0-x86_64-linux-gnu.zip)

## Signatures and hashes
[sha256.signed.txt](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.6.0/sha256.signed.txt) file contains sha256 hashes of all binary files and signed with @ben-kaufman's GPG key.
You can get the public key from here: [https://benkaufman.info/ben-kaufman.asc](https://benkaufman.info/ben-kaufman.asc).
It is also available via [keys.gnupg.net](http://keys.gnupg.net/pks/lookup?op=get&amp;search=0x5D27DE564153F2BD) or [keys.openpgp.org](https://keys.openpgp.org/vks/v1/by-fingerprint/5DF6A7601DB8B78EBDEC18DB5D27DE564153F2BD).
Fingerprint of the key is `5DF6 A760 1DB8 B78E BDEC  18DB 5D27 DE56 4153 F2BD`, short id: `5d27de564153f2bd`

# Release notes
- Devices: Add Passport support #1343 (benk10)
- Devices: Improved Liquid support for Specter-DIY #1358 (Stepan Snigirev)
- Bugfix: Fix Liquid addresses UTXO count #1350 (benk10)
- Bugfix: Fix add keys #1355 (Tushar Singla)
- Bugfix: Fix key import on liquid #1370 (Stepan Snigirev)
- Bugfix: Fix imported labels not being saved #1362 (relativisticelectron)
- Bugfix: Fix add key functionality for hot wallets #1354 (Tushar Singla)
- Bugfix: Use the configured bitcoind data directory #1348 (Nadav Ivgi)
- Bugfix: Delete pending psbts if inputs were spent #1366 (Stepan Snigirev)
- Bugfix: Fix amount and label parsing #1368 (Stepan Snigirev)
- Bugfix: Fix assetlabel and default asset properties for bitcoin #1351 (Stepan Snigirev)
- Feature: Add Export Specter Format for wallets #1345 (Hani Mohammed)
- Feature: Add assets registry for Liquid wallets #1360 (benk10)
- Feature: Add single-key taproot support #1364 (Stepan Snigirev)
- Docs: run tests and avoid elm-tests if you don't want them #1326 (Kim Neunert)
- UI: More information while backing up specter data #1346 (Tushar Singla)
- UI: Warn user when hidden advanced fields are not empty #1356 (benk10)
- UI: Fetch asset labels #1352 (Stepan Snigirev)
- Chore: Bump path-parse from 1.0.6 to 1.0.7 in /pyinstaller/electron #1344 (dependabot[bot])
- Chore: pytest for Electrum address label import #1363 (relativisticelectron)</summary>
    <title>cryptoadvance/specter-desktop: v1.6.0</title>
    <updated>2021-08-27T15:37:41Z</updated>
    <dc:date>2021-08-27T15:37:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.3</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.3"/>
    <summary>**Added**

Electrum connection toggle
Share/Save QRCode 
Resize selected Images for less error prone QR scanning 
Share button on sign/verify screen

**Refactored**

Move LT to Tools 
Speedup wait for electrum
Use new UIMenu 
Dont load address txs if &gt; 1000 
Connect BlueElectrum explicitly 

**Fixed**

Realm encryption mismatch after backup restore (closes #3332) 
Disable slower fees if they match faster fee 
Replace ',' with '.' instead of empty string. 
Unable to Browse Past First Wallet
Widgets were not reloading (macOS) 
Provide more context when local QR code scan fails 
Update session state on app termination 
Apple Watch invoice gets stuck #1529 
OnePlus text cutoff 
Don't start WatchConnectivity on macOS  </summary>
    <title>BlueWallet/BlueWallet: v6.2.3</title>
    <updated>2021-08-22T17:57:53Z</updated>
    <dc:date>2021-08-22T17:57:53Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/IRIS-3.0.1</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/IRIS-3.0.1"/>
    <summary>This a **patch release** that contains a fix for a known issue where -under certain conditions- calls to the *eth_getLogs* method would return incorrect results (see issue #1600).

This is a **non-mandatory upgrade**, however we encourage users to upgrade to this version if they are running nodes used to retrieve blockchain event logs.

These are the changes included in this version:
- Fix data retrieval for eth_getLogs method (#1605)
- Ignore ‘type’ argument in JSON-RPC calls (#1606).

SHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):
a6223f3a9d289f1d5a4ab535b5e748f43b5829ab6274050b93f86d2c77223683  rskj-core-3.0.1-IRIS-all.jar</summary>
    <title>rsksmart/rskj: IRIS-3.0.1</title>
    <updated>2021-08-20T21:34:52Z</updated>
    <dc:date>2021-08-20T21:34:52Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.1</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.1"/>
    <summary>Umbrel 0.4.1 brings LND v0.13.1, along with the latest versions of apps including Mempool, Specter Desktop, BTCPay Server, Samourai Server to the app store, visual improvements for Windows/Linux users, better Tor performance, persistent lnd.conf modifications, Tor access bugfix for Nextcloud, celsius/fahrenheit switch for CPU temperature, and more.</summary>
    <title>getumbrel/umbrel: v0.4.1</title>
    <updated>2021-08-20T13:03:10Z</updated>
    <dc:date>2021-08-20T13:03:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.100</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.100"/>
    <summary>## API Updates
 * The `lightning` crate can now be built in no_std mode, making it easy to
   target embedded hardware for rust users. Note that mutexes are replaced with
   no-ops for such builds (#1008, #1028).
 * LDK now supports sending and receiving &quot;keysend&quot; payments. This includes
   modifications to `lightning::util::events::Event::PaymentReceived` to
   indicate the type of payment (#967).
 * A new variant, `lightning::util::events::Event::PaymentForwarded` has been
   added which indicates a forwarded payment has been successfully claimed and
   we've received a forwarding fee (#1004).
 * `lightning::chain::keysinterface::KeysInterface::get_shutdown_pubkey` has
   been renamed to `get_shutdown_scriptpubkey`, returns a script, and is now
   called on channel open only if
   `lightning::util::config::ChannelConfig::commit_upfront_shutdown_pubkey` is
   set (#1019).
 * Closing-signed negotiation is now more configurable, with an explicit
   `lightning::util::config::ChannelConfig::force_close_avoidance_max_fee_satoshis`
   field allowing you to select the maximum amount you are willing to pay to
   avoid a force-closure. Further, we are now less restrictive on the fee
   placed on the closing transaction when we are not the party paying it. To
   control the feerate paid on a channel at close-time, use
   `ChannelManager::close_channel_with_target_feerate` instead of
   `close_channel` (#1011).
 * `lightning_background_processor::BackgroundProcessor` now stops the
   background thread when dropped (#1007). It is marked `#[must_use]` so that
   Rust users will receive a compile-time warning when it is immediately
   dropped after construction (#1029).
 * Total potential funds burn on force-close due to dust outputs is now limited
   to `lightning::util::config::ChannelConfig::max_dust_htlc_exposure_msat` per
   channel (#1009).
 * The interval on which
   `lightning::ln::peer_handler::PeerManager::timer_tick_occurred` should be
   called has been reduced to once every five seconds (#1035) and
   `lightning::ln::channelmanager::ChannelManager::timer_tick_occurred` should
   now be called on startup in addition to once per minute (#985).
 * The rust-bitcoin and bech32 dependencies have been updated to their
   respective latest versions (0.27 and 0.8, #1012).

## Bug Fixes
 * Fix panic when reading invoices generated by some versions of c-lightning
   (#1002 and #1003).
 * Fix panic when attempting to validate a signed message of incorrect length
   (#1010).
 * Do not ignore the route hints in invoices when the invoice is over 250k
   sats (#986).
 * Fees are automatically updated on outbound channels to ensure commitment
   transactions are always broadcastable (#985).
 * Fixes a rare case where a `lightning::util::events::Event::SpendableOutputs`
   event is not generated after a counterparty commitment transaction is
   confirmed in a reorg when a conflicting local commitment transaction is
   removed in the same reorg (#1022).
 * Fixes a remotely-triggerable force-closure of an origin channel after an
   HTLC was forwarded over a next-hop channel and the next-hop channel was
   force-closed by our counterparty (#1025).
 * Fixes a rare force-closure case when sending a payment as a channel fundee
   when overdrawing our remaining balance. Instead the send will fail (#998).
 * Fixes a rare force-closure case when a payment was claimed prior to a
   peer disconnection or restart, and later failed (#977).

## Serialization Compatibility
 * Pending inbound keysend payments which have neither been failed nor claimed
   when serialized will result in a `ChannelManager` which is not readable on
   pre-0.0.100 clients (#967).
 * Because
   `lightning::chain::keysinterface::KeysInterface::get_shutdown_scriptpubkey`
   has been updated to return a script instead of only a `PublicKey`,
   `ChannelManager`s constructed with custom `KeysInterface` implementations on
   0.0.100 and later versions will not be readable on previous versions.
   `ChannelManager`s created with 0.0.99 and prior versions will remain readable
   even after the a serialization roundtrip on 0.0.100, as long as no new
   channels are opened. Further, users using a
   `lightning::chain::keysinterface::KeysManager` as their `KeysInterface` will
   have `ChannelManager`s which are readable on prior versions as well (#1019).
 * `ChannelMonitorUpdate`s created by 0.0.100 and later for channels when
   `lightning::util::config::ChannelConfig::commit_upfront_shutdown_pubkey` is
   not set may not be readable by versions prior to 0.0.100 (#1019).
 * HTLCs which were in the process of being claimed on-chain when a pre-0.0.100
   `ChannelMonitor` was serialized may generate `PaymentForwarded` events with
   spurious `fee_earned_msat` values. This only applies to payments which were
   unresolved at the time of the upgrade (#1004).
 * 0.0.100 clients with pending `Event::PaymentForwarded` events at
   serialization-time will generate serialized `ChannelManager` objects which
   0.0.99 and earlier clients cannot read. The likelihood of this can be reduced
   by ensuring you process all pending events immediately before serialization
   (as is done by the `lightning-background-processor` crate, #1004).


In total, this release features 59 files changed, 5861 insertions, and 2082
deletions in 95 commits from 6 authors.
</summary>
    <title>lightningdevkit/rust-lightning: v0.0.100</title>
    <updated>2021-08-17T18:57:15Z</updated>
    <dc:date>2021-08-17T18:57:15Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.4-beta</id>
    <link href="https://github.com/LN-Zap/zap-desktop/releases/tag/v0.7.4-beta"/>
    <summary>## Release notes

### Bug Fixes

* **deps:** update dependency debug to v4.3.2 ([853c9b9](https://github.com/LN-Zap/zap-desktop/commit/853c9b9e528051af4871361d1044887631171ced))
* **deps:** update dependency lodash to v4.17.21 [security] ([5a83237](https://github.com/LN-Zap/zap-desktop/commit/5a8323772ea56e401cc7e4f887f4aad93804637e))
* **lnd:** update log parsing to detect neutrino wallet state ([1e506a3](https://github.com/LN-Zap/zap-desktop/commit/1e506a3db8082d00f9921b333103a7f980a3eb2f))


### Features

* **lnd:** depreciated assumechanvalid param ([ebff95f](https://github.com/LN-Zap/zap-desktop/commit/ebff95f9687bf4d327f689b34590e40370ef4c8b))
* **lnd:** update lnd to v0.13.1-beta ([835d0b6](https://github.com/LN-Zap/zap-desktop/commit/835d0b66d6649b378002057adba5ec639b9d038a))

### Changelog
The full list of changes since 0.7.3-beta can be found here:

https://github.com/LN-Zap/zap-desktop/compare/v0.7.3-beta...v0.7.4-beta

## Verifying the Release

Please refer to [our documentation](https://github.com/LN-Zap/zap-desktop#documentation) for [instructions on how to verify the release](https://github.com/LN-Zap/zap-desktop/blob/master/docs/SIGNATURES.md).</summary>
    <title>LN-Zap/zap-desktop: v0.7.4-beta</title>
    <updated>2021-08-15T18:10:21Z</updated>
    <dc:date>2021-08-15T18:10:21Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.1"/>
    <summary>### Bug fix:

* Fix Display app on website root feature @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.2.1</title>
    <updated>2021-08-13T07:02:03Z</updated>
    <dc:date>2021-08-13T07:02:03Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.2.1</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.2.1"/>
    <summary>Changelog:

* UI: New component for difficult adjustment (#602)
* UI: Add blockchain skeleton loader (#615)
* UI: Added links to block header and transaction hex (#630) (#682)
* UI: Reflect hash rate into mempool blocks estimations. (#637)
* API: Add endpoint for difficulty adjustment data (#628)
* Bug: Fix for difficulty adjustment when still synchronizing (#677)
* Bug: Fix for transaction tracking when network goes offline (#702)
* Bug: Fix for mempool blocks displaying wrong gradient color (#623)
* i18n: Added support for Hindi and Catalan locales

Notes:

* If you maintain your own nginx.conf, update it for the new i18n locales

The complete changelog is available at:
https://github.com/mempool/mempool/compare/v2.2.0...v2.2.1
</summary>
    <title>mempool/mempool: v2.2.1</title>
    <updated>2021-08-12T22:57:44Z</updated>
    <dc:date>2021-08-12T22:57:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.5.1</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.5.1"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/Specter-Setup-v1.5.1.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/SpecterDesktop-v1.5.1.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/specter_desktop-v1.5.1-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/specterd-v1.5.1-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/specterd-v1.5.1-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/specterd-v1.5.1-x86_64-linux-gnu.zip)

## Signatures and hashes
[sha256.signed.txt](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.5.1/sha256.signed.txt) file contains sha256 hashes of all binary files and signed with @ben-kaufman's GPG key.
You can get the public key from here: [https://benkaufman.info/ben-kaufman.asc](https://benkaufman.info/ben-kaufman.asc).
It is also available via [keys.gnupg.net](http://keys.gnupg.net/pks/lookup?op=get&amp;search=0x5D27DE564153F2BD) or [keys.openpgp.org](https://keys.openpgp.org/vks/v1/by-fingerprint/5DF6A7601DB8B78EBDEC18DB5D27DE564153F2BD).
Fingerprint of the key is `5DF6 A760 1DB8 B78E BDEC  18DB 5D27 DE56 4153 F2BD`, short id: `5d27de564153f2bd`

# Release notes
 - Bugfix: Add newline char when writing bitcoin.conf setting #1325 (jeffthibault)
 - Bugfix: Fix specifying datadir for internal node #1315 (benk10)
 - Bugfix: Fix login issue for non-English mode #1321 (Kim Neunert)
 - Bugfix: Fix Electrum import issues #1318 (benk10)
 - Bugfix: Update rpc None error #1333 (Hani Mohammed)
 - Bugfix: Fix wallet PDF backup issues #1338 (benk10)
 - Feature: Electrum address label import #1314 (relativisticelectron)
 - Translation: Update Greek translation  #1317 (glowleaf)
 - Translation: Update Hebrew translation #1308 (Sh0ham)
 - Translation: Update French translation #1309 (KST-Energy)
 - UIUX: Add RTL languages support #1276 (benk10)
 - Chore: Automatic Testing and Documentation for Liquid #1286 (Kim Neunert)
 - Chore: Refactor internal keypool management #1330 (benk10)
 - Chore: Refactor out ugly hack in components JS #1302 (benk10)
 - Chore: Make Specter DIY simulator connection error message more descriptive #1337 (Tushar Singla)</summary>
    <title>cryptoadvance/specter-desktop: v1.5.1</title>
    <updated>2021-08-10T21:06:36Z</updated>
    <dc:date>2021-08-10T21:06:36Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v0.10.1</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v0.10.1"/>
    <summary>We're pleased to announce the 0.10.1 release of c-lightning, named by @nalinbhardwaj.

This is a *recommended* upgrade: payment secrets in invoices are now compulsory, and offers and dual funding drafts have been updated, so these (experimental) features are incompatible with previous releases!

*NOTE*: Users of the rebalance or drain [plugins](https://github.com/lightningd/plugins) MUST update, as payment secret is now compulsory.

## Highlights for Users

- `experimental-dual-fund` allows advertizement of funding rates which we will contribute to channels automatically, on a 1-month lease.
- `withdraw` and `close` (if peer supports) now supports Taproot (and other future) addresses.
- `listchannels` can now be queried by destination, as well as source.
- `plugin rescan` now automatically reloads plugins which have changed.
- We try to restart automatically if we notice subdaemons have been upgraded underneath us.
- `fundpsbt` will no longer include uneconomic UTXOs (unless `all`).
- `close` will return a stream of notifications if there is a delay in closing.
- Unilateral close feerates were reduced from bitcoind's &quot;2 CONSERVATIVE&quot; to &quot;6 ECONOMICAL&quot;.
- Tor v2 is deprecated: please upgrade to v3!
- Fixed disconnection bug when an HTLC failed.
- Fixed bug in rapid feerate changes, and make code space them out (LND compat).
- Fixed bug where Tor on different ports could be advertized incorrectly.
- Fixed various bugs to make `pay` more robust.

## Highlights for the Network

- payment secrets in invoices are now compulsory, finally closing a potential probing (or, with amountless invoices, stealing) attack.
- `option_shutdown_anysegwit` allows peers to close channels to any future segwit version address (taproot!).
- `keysend` now understands routehints, for routing to unpublished nodes, and sets the final CLTV to 22, for rust-lightning nodes.
- `invoice` now allows creation of wumbo invoices (&gt; 0.0429 BTC).
- We will now discuss old channels with peers who reconnect, even if we consider them closed.


## Highlights for Developers

- Manual pages now document *exactly* the JSON you can expect from each command (and it's tested!)
- Plugins can now publish notifications for other plugins to listen to.
- `force-feerates` allows complete feerate override (mainly for regtest), and a bug fixed where we could send 0 update_fee on regtest.
- The HSM daemon is now separated into libhsmd, which also provides Python bindings.
- `createonion` can now make variable-sized onions, and `sendonion` no longer requires `direction` and `channel` for `firsthop`.
- `dev-sendcustommsg` is now simply `sendcustommsg`.
- Many offers API improvements and updates, including unsigned offers (smaller QR codes!).

More details can be found in the [changelog](https://github.com/ElementsProject/lightning/blob/v0.10.1/CHANGELOG.md).

Thanks to everyone for their contributions and bug reports; please keep them coming.

Since 0.10.0, we've had 526 commits from 15 different authors over 114 days.

A special thanks goes to the 6 first time contributors:

- Nalin Bhardwa 
- Nathanael 
- LightningHelper
- OpenOms
- Urza 
- Valentine Wallace

Cheers,
Lisa, Christian,  ZmnSCPxj, Rusty.</summary>
    <title>ElementsProject/lightning: v0.10.1</title>
    <updated>2021-08-10T00:57:55Z</updated>
    <dc:date>2021-08-10T00:57:55Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.2.0"/>
    <summary>### Improvements:
* Migrate to Bootstrap5 (#2490) @dennisreimann
* Greenfield: Server Info: Support all currency codes for sync status (#2511) @kukks
* Greenfield: Add StoreId to Invoice model (#2592)  @kukks
* Greenfield: Change `enabledOnly` filter to `enabled` @kukks
* Self host PoS app default images (#2449) @dennisreimann
* Various UI Tweaks and improvements (#2558 #2562 #2568 #2572 #2606 #2608 #2615 #2627 #2628 #2649 #2645 #2673 #2646 #2647 #2745 #2746) @dstrukt @dennisreimann @woutersamaey @johanf85 @bolatovumar
* Notify users to use newer BTCPay Vault app if necessary @nicolasdorier
* Set lightning invoice fallback in QR code as uppercase (#2492) @bjarnemagnussen @Kukks
* Optimize payout database fetching @nicolasdorier
* Wallet Signing UI improvements (#2559) @dennisreimann
* Add payjoin to hot wallet setup and turn on by default (#2450) @dennisreimann
* Add permission code to API page (#2599)  @woutersamaey @dennisreimann
* Introduce Server paging for Payouts List (#2564) @kukks @dennisreimann
* Hide referer URL to hide our BTCPay Server URL (#2655) @woutersamaey
* Deeper accessibility for plugin system @kukks
* Add webhook delivery status indicator (#2679) @bolatovumar
* Auto-select store when creating a new invoice (#2680) @bolatovumar
* Save paymentRequestId in Metadata when creating invoice for Payment Request (#2644) @woutersamaey
* Support multiple file upload (#2705) @cypherbeerus
* Improve Dutch translation (https://github.com/btcpayserver/btcpayserver/commit/7ac83575d4c50e42f2ecc02c8bf80f66697b6d57)  @woutersamaey 
* Improve Portuguese translation (https://github.com/btcpayserver/btcpayserver/commit/7ac83575d4c50e42f2ecc02c8bf80f66697b6d57)  rafaelpac
* Improve payment view (#2748) @dennisreimann @dstrukt 
* Improve Wallet Send UI (#2750) @dennisreimann 
* Show new store warning icon only if neither on-chain wallet nor LN is configured (#2760) @bolatovumar 
* Update successful refund message (#2764) @cypherbeerus
* Fix translation on finnish, bulgarian, Kazath (fa91174b1a310e46a37e1862f2b9c263f5e26408, 10e3595a829052573a9918eacafabc6d10e03ea6 965beebc6624906a1f3127623576088dee23e9bf) @NicolasDorier 

### New features:
* Greenfield: Delete User API (#2340) @bolatovumar @kukks
* Can create invoices without a specific amount: Top-up invoices (#2730 #2659) @NicolasDorier
* Greenfield: Add misc/permissions to document the hierarchical structure (#2654) @nicolasdorier
* Greenfield: Add &quot;skip&quot; and &quot;limit&quot; params for onchain txs API endpoint (#2688) @bolatovumar
* Greenfield: Add `CanModifyInvoices` permission (#2595) @kukks
* Greenfield: Add text search terms to an invoice (#2648) @NicolasDorier
* Greenfield: Add Get store Payment methods API (#2545) @kukks @bolatovumar
* GreenField: Add Generate Store OnChain Wallet API (#2708) @kukks
* Test Webhooks functionality (#2474) @bolatovumar
* Allow marking payout as paid manually (#2539) @Kukks
* Pull payments: Detect External OnChain Payouts (#2462) @Kukks
* Auto-detect language on payment page (#2552) @woutersamaey @Kukks
* Support spending to Taproot (#2718) @nicolasdorier
* Show Immature Balance in walletsend page (#2731 @732) @sageprogrammer @nicolasdorier
* Add hebrew translation for checkout (https://github.com/btcpayserver/btcpayserver/commit/7ac83575d4c50e42f2ecc02c8bf80f66697b6d57) @jonathanalevi
* Add korean translation for checkout (https://github.com/btcpayserver/btcpayserver/commit/7ac83575d4c50e42f2ecc02c8bf80f66697b6d57)  Saeyoung Kim

### Bug fixes:
* Fix issue with mysql migration and maxLength (#2541) @jkljajic
* Fix broken shopify links @kukks
* Fix bug with LN payment method API endpoint throwing 500 (#2567) @bolatovumar
* Fix various wording and typos @pavlenex @britttttk @Zaxounette Jimi Ford
* Fix visual bug with invoices search help text overlapping invoice action buttons (#2583) @bolatovumar
* Fix: Invoice Search Text crashes invoice creation when value is too long (#2675) @kukks
* Greenfield documentation fixes (#2657 #2674 #2681 #2598) @woutersamaey @bolatovumar
* Re-enable &quot;Create&quot; button for invoices on correct form input (#2694) @bolatovumar
* Fix: Payment Request status does not update on invoice marked events or when pr amount is changed (#2700) @kukks
* Properly clip taxIncluded and invoice's amount (#2724) @nicolasdorier
* Fix PoS bug on dark mode (#2743) @dennisreimann 
* Remove support for payout to a Bitcoin Url (#2766) @NicolasDorier 
* Fix: Support Clightning 0.10.1 @kukks
</summary>
    <title>btcpayserver/btcpayserver: v1.2.0</title>
    <updated>2021-08-09T15:00:39Z</updated>
    <dc:date>2021-08-09T15:00:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.15</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.15"/>
    <summary>## Main changes

### Extract invoices from images stored on device

You can now browse the device's file system (using the device's browser, hence not needing any permissions) to load an image containing a Lightning invoice (or a Bitcoin URI, or a LNURL) and read the invoice as usual. This is useful when trying to pay someone using a QR code image shared over the internet, for example on Twitter.

### Full list of changes

- **app**: https://github.com/ACINQ/phoenix/compare/v1.4.14...v1.4.15
- **core**: https://github.com/ACINQ/eclair/compare/v0.4.12-android-phoenix...v0.4.13-android-phoenix

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.15</title>
    <updated>2021-08-06T09:38:28Z</updated>
    <dc:date>2021-08-06T09:38:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.0</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.0"/>
    <summary>Introducing Umbrel v0.4 — a personal server OS for everyone. You can now run your own personal cloud with Nextcloud, host your photos and videos with PhotoPrism, passwords with Vaultwarden, code repositories with Gitea, block ads on your entire network with Pi-hole, automate your home with Home Assistant, run your own messaging server with Matrix, stream torrents with SimpleTorrent, code in VS Code with code-server, view your RAM and storage usage, along with your uptime and Raspberry Pi’s temperature in the settings.

Read the full announcement here: https://bit.ly/umbrel-v04

If you face any difficulties while updating, please message us on Telegram: https://t.me/getumbrel</summary>
    <title>getumbrel/umbrel: v0.4.0</title>
    <updated>2021-08-05T15:44:02Z</updated>
    <dc:date>2021-08-05T15:44:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/v0.3.10</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/v0.3.10"/>
    <summary>- Add utxo selection to manual spend wallet interface
- Fix a UI bug with bip32 paths</summary>
    <title>unchained-capital/caravan: v0.3.10</title>
    <updated>2021-07-29T00:22:00Z</updated>
    <dc:date>2021-07-29T00:22:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/v0.3.9</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/v0.3.9"/>
    <summary></summary>
    <title>unchained-capital/caravan: v0.3.9</title>
    <updated>2021-07-28T19:28:04Z</updated>
    <dc:date>2021-07-28T19:28:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.2</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.2"/>
    <summary>Added:
- UI for import electrum wallet with passphrase 
Refactored: 
- Better handling large transactions from electrum
</summary>
    <title>BlueWallet/BlueWallet: v6.2.2</title>
    <updated>2021-07-28T18:53:25Z</updated>
    <dc:date>2021-07-28T18:53:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.1</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.1"/>
    <summary>New:
- Passphrase support for wallets
- Korean language
- Derivation path for watch only wallets

Improvements:
- Support lnurl-withdraw via Tor
- Remove error-prone placeholder scroll calculation
- Don't use hardcoded label
- Backup QR doesn't have a &quot;@server&quot; suffix 
</summary>
    <title>BlueWallet/BlueWallet: v6.2.1</title>
    <updated>2021-07-26T13:56:04Z</updated>
    <dc:date>2021-07-26T13:56:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.7.2</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.7.2"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

## Release notes
This release reduces memory consumption and fixes a couple of minor issues that were introduced in the v1.7.0 hardfork.

### Improvements
- [Optimize DaoState snapshot behaviour](https://github.com/bisq-network/bisq/pull/5609)
- [Enable lost payment accounts to be imported from backups](https://github.com/bisq-network/bisq/pull/5615)
- [Add Capitual payment method](https://github.com/bisq-network/bisq/pull/5501)
- [PriceNode: exclude currencies via config to enable markets that have no reliable price ticker](https://github.com/bisq-network/bisq/pull/5582)
- [Add don't show again option to DAO resync popup](https://github.com/bisq-network/bisq/pull/5628)
- [Add @pazza's mediator onion address and Keybase user name](https://github.com/bisq-network/bisq/pull/5598)
- [Mediation grammar improvements](https://github.com/bisq-network/bisq/pull/5584)

### Bug fixes
- [Fix payment account deserialize issue (e.g. CHASE_QUICK_PAY)](https://github.com/bisq-network/bisq/pull/5614)
- [Fix bug in chat message status display](https://github.com/bisq-network/bisq/pull/5599)
- [Fix custom withdrawal fee bug](https://github.com/bisq-network/bisq/pull/5602)

### Development &amp; Documentation
- [Update relay-node address](https://github.com/bisq-network/bisq/pull/5593)

### New Assets
- RSK Smart Bitcoin (R-BTC)

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.7.2.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.7.2-all.jar
The output need to match the value from the Bisq-1.7.2.jar.txt file.

*NEW: There are three hashes within the Bisq-1.7.2.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 11.0.10 and the v1.7.2 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.*

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.7.2.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @chimp1984 
- @devinbileck 
- @harrigan
- @huey735 
- @jmacxx 
- @m52go
- @ripcurlx
- @sqrrm 

A special thanks to our first time contributors:
- @harrigan  
  - [List RSK Smart Bitcoin (R-BTC)](https://github.com/bisq-network/bisq/pull/5611)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.7.2</title>
    <updated>2021-07-23T12:22:29Z</updated>
    <dc:date>2021-07-23T12:22:29Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.13.1-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.13.1-beta"/>
    <summary>This marks the first minor release of the 0.13.x cycle. This release is primarily a maintenance release including several bug fixes that didn't make it into 0.13.0, a series of fixes for introduced regressions, and a few small optimizations.



# Database Migrations

This release does not contain any database migrations.

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://keybase.io/bitconner/pgp_keys.asc | gpg --import
curl https://keybase.io/roasbeef/pgp_keys.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.13.1-beta.sig` and `manifest-v0.13.1-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.13.1-beta.sig manifest-v0.13.1-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Mon Jul 19 23:41:37 2021 CEST
gpg: using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun laolu32@gmail.com&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.13.1-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.13.1-beta.sig.ots -f manifest-roasbeef-v0.13.1-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.16.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.13.1-beta
gpg: Signature made Mon 19 Jul 2021 06:04:34 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker pull lightninglabs/lnd:v0.13.1-beta
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.13.1-beta /verify-install.sh
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.13.1-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.13.1-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.1-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.13.1-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.13.1.md
</summary>
    <title>lightningnetwork/lnd: v0.13.1-beta</title>
    <updated>2021-07-19T21:45:04Z</updated>
    <dc:date>2021-07-19T21:45:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/eclair/releases/tag/v0.6.1</id>
    <link href="https://github.com/ACINQ/eclair/releases/tag/v0.6.1"/>
    <summary># Eclair v0.6.1

This release makes major performance improvements, includes a few bug fixes and several new features.
It is fully compatible with 0.6.0 (and all previous versions of eclair).

# Major changes

### Performance improvements

#### Sqlite

Eclair now uses [write-ahead logging](https://sqlite.org/wal.html) in Sqlite (#1871). WAL is better suited to our DB access patterns, and is both much more performant and safer than the default [rollback journal](https://sqlite.org/lockingv3.html#rollback) that we were using previously.
&gt; 1. WAL is significantly faster in most scenarios.
&gt; 2. WAL provides more concurrency as readers do not block writers and a writer does not block readers.
&gt; 3. Disk I/O operations tends to be more sequential using WAL.
&gt; 4. WAL uses many fewer fsync() operations.
 
This small change improves performance by more than 5x.

#### Payment Handling

Invoice generation (#1878) and handling of incoming payments (#1880) are now processed in parallel, resulting in a higher throughput under load.

### Improved Postgres support

This is the continuation of an effort to make PosgreSQL production-ready. The database schema has been reworked (#1866) and is now better organized, with appropriate types for timestamps (#1862). There have been several concurrency-related bug fixes.

We  have also added `JSONB` columns for local channels and for network announcements (#1865). All individual data fields can now be accessed from SQL and indexed, which is very convenient for advanced analysis and tuning of a routing node.

### Upfront shutdown script

This release adds support for `option_upfront_shutdown_script` (feature bits 4/5).
This feature lets you specify a closing address when you open a channel: your peer will ensure that when you close, your funds can only go to that address.

It can be useful to protect against future hacks of your node, because the attacker won't be able to close your channels and send the funds to an address that he controls. However, it doesn't prevent the attacker from exfiltrating funds by paying lightning invoices, so you shouldn't rely on this feature alone to make your node hack-proof.

This option is disabled by default, but can be enabled in your `eclair.conf`.
Note that if you enable it, the closing address will be automatically generated by your `bitcoind` node.

### Transaction publishing improvements

This release reworks our internal transaction publishing architecture (see #1844 for details).
The new architecture is more flexible, provides better logging and makes it easy to add dynamic fee bumping in the future for anchor output channels.
It will also make it easier to automatically use CPFP to ensure funding transactions confirm before the [2016 blocks timeout](https://github.com/lightningnetwork/lightning-rfc/pull/839) is reached.

### API changes

This release updates a few APIs:

- `parseinvoice` displays Bolt 11 invoices routing hints (#1833)
- Plugins can inject their own routes into the API instead of spawning a separate HTTP server (#1805 and #1819)

### Miscellaneous improvements and bug fixes

- Eclair now uses Bitcoin Core 0.21.1 by default (#taproot)
- Eclair now supports [warning messages](https://github.com/lightningnetwork/lightning-rfc/pull/834)
- Eclair uses additional entropy on top of the operating system RNG to mitigate random number generation failures (#1774)

# Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:

- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:

```sh
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:

```sh
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```

# Building

Eclair builds are deterministic. To reproduce our builds, please use the following environment (*):

- Ubuntu 20.04
- AdoptOpenJDK 11.0.6
- Maven 3.8.1

Use the following command to generate the eclair-node package:

```sh
mvn clean install -DskipTests
```

That should generate `eclair-node/target/eclair-node-0.6.1-XXXXXXX-bin.zip` with sha256 checksums that match the one we provide and sign in `SHA256SUMS.asc`

(*) You may be able to build the exact same artefacts with other operating systems or versions of JDK 11, we have not tried everything.

# Upgrading

This release is fully compatible with eclair v0.6.0. You don't need to close your channels, just stop eclair, upgrade and restart.

# Changelog

a658fa26f Set version to 0.6.1-SNAPSHOT (#1813)
76894bd2e Add additional PRNG (#1774)
9a20aade0 Allow plugins to inject their own routes into API (#1805)
d437ea1ed Improve API plugin support (#1819)
98cae455f Rename pending_relay to pending_commands (#1822)
e8c33baf5 Various improvements and fixes (#1817)
f829a2e8c Add json type hints on channel data (#1824)
4dc2910c4 Make result set an iterable (#1823)
6f6c458a2 Add metrics on channels processing time (#1826)
43a89f865 Add a random delay before processing blocks (#1825)
af618bc44 Symmetrical HTLC limits (#1828)
dbecb28d9 Include routing hints in parseinvoice API call response (#1833)
2b6d564d2 Expose eclair datadir to plugins (#1837)
bd6bad1bf Fix eventually statements (#1835)
a7bb2c2b2 Do not store `CannotAffordFees` errors (#1834)
d4b25d565 Udpate to Bitcoin Core 0.21.1 (#1841)
e750474c7 Use bitcoin-lib 0.19 (#1839)
bbfbad597 Validate payment secret when decoding (#1840)
afb1b41ea Update bolt 3 spec test vectors (#1669)
d43d06f6e Rework TxPublisher (#1844)
45204e238 Schedule backup at regular interval (#1845)
85ed4338a Reject 0-value trampoline payments (#1851)
f857368ea Make trampoline payments use per-channel fee and cltv (#1853)
f52c3dd3f Decode warning messages (#1854)
516929b1a Fix default file backup config (#1857)
4ca5c62ab Remove println in tests (#1861)
291c128ca Reduce some log levels (#1864)
d9a03a52b Use warning messages for connection issues (#1863)
af8394a28 Add support for dual db backend (#1746)
3a573e267 Improve message for `CannotRetrieveFeerates` error (#1859)
bd57d41ef Add a globalbalance api call (#1737)
08faf3b7f Add json columns in Postgres (#1865)
f8feb1959 Use schemas in Postgres (#1866)
cea3fc026 Use proper data type for timestamps in Postgres 2 (#1862)
95fffe348 Reduce pg transaction isolation (#1860)
547d7e700 Create chain directory (#1872)
e9df4eece Channels data format migration (#1849)
733c6e768 Refactor global balance tests (#1874)
ca51a2d16 Enable WAL mode on Sqlite (#1871)
3ae9a4ae3 Additional reestablish test (#1875)
d02760d96 Fail unsigned outgoing htlcs on force-close (#1832)
3bb7ee8a3 Parallel payment request generation (#1878)
51824028b Fix flaky channel integration tests (#1879)
b4183edfa Fetch incoming payments in parallel (#1880)
8c49f779a Fix payment handler tests (#1882)
01b40730f Implement option-upfront-shutdown-script (#1846)
79729c78c Update README (#1881)
c22596bb9 Update dependencies and enable fatal warnings (#1885)
adf36de0e Fix yet another flaky test (#1886)
3f1c2506a Fix watcher flaky test (#1883)
c8c5e76d2 Update akka-http-json4s dependency (#1889)
5fa8fedb9 Set version to 0.6.1 (#1887)</summary>
    <title>ACINQ/eclair: v0.6.1</title>
    <updated>2021-07-19T14:33:22Z</updated>
    <dc:date>2021-07-19T14:33:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/IRIS-3.0.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/IRIS-3.0.0"/>
    <summary>**IMPORTANT:** Since consensus rules have changed, this version is not compatible with previous versions. If you've been running previous versions of RSK client node, we encourage you to update to this new version. The **Mainnet** network upgrade will happen at **block number 3,614,800**. The **Testnet** network upgrade will happen at **block number 2,060,500**.

A non-comprehensive list of consensus changes included in this version is:

- Add BLAKE2 compression function F precompile (RSKIP153)
- Enable 2WP peg-in transactions to any RSK address (RSKIP170).
- Flyover protocol consensus changes (RSKIP176).
- BTC-RSK timestamp linking protection (RSKIP179).
- Enable refunds for 2WP peg-out transactions with invalid amounts (RSKIP185)
- Time-locked emergency multisignature (RSKIP201).
- Reduced 2WP peg-in and peg-out minimum amounts (RSKIP219).
- Open Bitcoin blockchain oracle (RSKIP220).

These are the most relevant non-consensus improvements included in this version:

- Improvements and compatibility fixes at the JSON-RPC interface (#1481, #1482, #1483, #1451, #1352, #1299, #1339, #1284)
- New *rewind* feature added to CLI tool (#1443)
- Block propagation enhancements (#1326)
- Node performance improvements (#1327)
- Use native library for recovery signature (#1258)
- Add Java11 support (#1252)

For a detailed description of the consensus changes introduced in this network upgrade, please refer to [RSKIP 187 Network Upgrade: Iris](https://github.com/rsksmart/RSKIPs/blob/master/IPs/RSKIP187.md). You can also find a complete list of the changes introduced in [Iris 3.0.0 milestone](https://github.com/rsksmart/rskj/milestone/24).

SHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):
8c975d8489599dbe551e90f96b450ec8a2589385c3176e4ce6ced9d44b09782b  rskj-core-3.0.0-IRIS-all.jar</summary>
    <title>rsksmart/rskj: IRIS-3.0.0</title>
    <updated>2021-07-16T23:11:36Z</updated>
    <dc:date>2021-07-16T23:11:36Z</dc:date>
  </entry>
  <dc:date>2022-01-28T14:12:14+00:00</dc:date>
</feed>