<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/">
  <author>
    <name>flip_btc</name>
  </author>
  <id>https://release-tracker.b.tc/</id>
  <title>Bitcoin Projects Release Tracker</title>
  <updated>2023-12-21T12:21:32+00:00</updated>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.12</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.12"/>
    <summary>* ADD: RON currency for widget
* ADD: See currency when tap and hold on balance
* ADD: tool to generate last mnemonic word (#5722)

* FIX: better tracking opt out (related #5688)
* FIX: correct merge of params when navigating between screens
* FIX: Lightning wallet CSV export does not differentiate between paid and expired invoices #5835
* FIX: Sometimes would crash due to lack of initialParams
* FIX: Wrong Suite was being targeted
* FIX: Call dismiss on ActionSheet to avoid duplicate firing
* FIX: Re-enable groups on watch app
* FIX: Show alert with error message when a selected file isn't valid
* FIX: Apple Watch app not working #5470
* FIX: Wait for transitions to finish before showing sheet</summary>
    <title>BlueWallet/BlueWallet: v6.4.12</title>
    <updated>2023-12-21T12:16:48Z</updated>
    <dc:date>2023-12-21T12:16:48Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.6.0</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.6.0"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.6.0</title>
    <updated>2023-12-20T16:51:32Z</updated>
    <dc:date>2023-12-20T16:51:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.5</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.5"/>
    <summary>### _[Wasabi Wallet](https://WasabiWallet.io) is an easy to use, privacy-focused, open-source, non-custodial, Bitcoin wallet_

# Download
:window: [Windows](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.5/Wasabi-2.0.5.msi)
:green_apple: [Apple M1/M2](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.5/Wasabi-2.0.5-arm64.dmg)
:apple: [Apple Intel](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.5/Wasabi-2.0.5.dmg)
:penguin: [Ubuntu / Debian](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.5/Wasabi-2.0.5.deb)
:penguin: [Other Linux](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.5/Wasabi-2.0.5.tar.gz)

---
## Release Highlights

🛒 Buy Anything Button

## Release Summary

Purchase stuff inside Wasabi Wallet with bitcoin by using the **Buy Anything Button**:

Buying anything with bitcoin has never been more effortless. With the click of a button you can now request the purchase of physical and digital goods, while protecting your privacy and revealing as little information about you as possible. Let your personal team of butlers find, arrange and ship the products you are looking for. From phones, to cars, even hotels and flights, get it all with Wasabi's new Buy Anything Button.

To learn more, check out our [blog post](https://blog.wasabiwallet.io/buy-anything-with-bitcoin-through-wasabi-wallet/).

---
## Installation Guide
Download the operating system relevant software package and install Wasabi like you would with any other software on your computer. 
For a detailed installation guide, including **signature verification**, see [the documentation](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html).

## Documentation
:spider_web: [Website](https://wasabiwallet.io)
:onion: [Tor onion site](http://wasabiukrxmkdgve5kynjztuovbg43uxcbcxn6y2okcrsg7gb6jdmbad.onion/)
:orange_book: [Documentation](https://docs.wasabiwallet.io)
:grey_question: [FAQ](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq)

## Advanced Guide
If you want to build or update Wasabi from source code, check out [these easy instructions](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html).

Wasabi uses [reproducible builds](https://reproducible-builds.org/), which you can verify with [this guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md).

## Requirements
- Windows 10 1607+
- Windows 11 22000+
- macOS 10.15+
- Ubuntu 18.04+
- Fedora 36+
- Debian 10+
---

## Full Changelog

* [v2.0.4.1 Silent Release] Update HWI to 2.3.1 by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11979
* [v2.0.4.1 Silent Release] Local Prison invalidation by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11981
* [v2.0.4.1 Silent Release] Bump version to 2.0.4.1 by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11980
* Improve Orders List by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12003
* Add Login logic and test by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/12004
* Improve conversation layout by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12005
* Control BAB visibility by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12008
* Link BAB visibility to view by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12009
* Show Info Bubble for Buy Anything Button by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12010
* Add unread badge by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12011
* Add confirmation prompt to delete orders by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12013
* Show unread icon for conversations by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12012
* Use IHttpClient + Misc by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/12014
* ReAdd GetCustomerProfile and message fetch by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12015
* Add failback mechanism when couldn't load countries by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12021
* Add round edges to conversation by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12020
* Adapt to Figma designs by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12023
* BAB: Small cleanups + Add a test setup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/12018
* Fix Order Ids by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12028
* Add states and update full conversation by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12029
* Trigger event upon new conversation by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12030
* Sort orders by title, descending. by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12031
* Avoid next step when order selection changes by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12034
* Fix bugs by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12038
* Add track link to offer by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12040
* Fix message not updating by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12042
* Allow to select countries with spaces by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12043
* Fix conversation duplication by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12045
* Mark *new* messages from selected conversation as &quot;read&quot; by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12044
* Fix Unread Messages Badge in Wallet Screen by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12047
* Fix wallet gets stuck after offer recieved by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12049
* ChatMessage Tags by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/12056
* Edit by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/12058
* [BAB] Refactor into UserInputValidatorView and use it edit message dialog by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/12060
* Auto select new order by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12062
* Fix unit/total price by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12064
* Separate links into their own bubbles by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12069
* Better offer display by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12070
* pay now by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/12067
* Fix focus in TagsBox by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12071
* Scroll to new message by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12057
* Add shipping cost by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12076
* Buy anything new message types by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12074
* Fix exception on reset conversation by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12078
* Custom offer message by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/12082
* Buy Anything - Córdoba Architecture by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/12073
* Fix focus on ToS acceptance by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12092
* store IsPaid in Invoice by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/12093
* Buy anything cordoba edition by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/12100
* Ignore OperationCancelledException by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/12104
* Rename pay now to pay by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12108
* [Trivial] Simplify the wording and remove unnecessary text by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/12105
* Fix tests build by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/12110


**Full Changelog**: https://github.com/zkSNACKs/WalletWasabi/compare/v2.0.4...v2.0.5

&lt;hr /&gt;&lt;em&gt;This discussion was created from the release &lt;a href='https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.5'&gt;Wasabi Wallet v2.0.5 - Buy Anything Button&lt;/a&gt;.&lt;/em&gt;</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.5</title>
    <updated>2023-12-20T13:33:43Z</updated>
    <dc:date>2023-12-20T13:33:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.1.1</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.1.1"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes

This minor release fixes the Czech translation (#490, thanks @MasterixCZ) and English typos (#491 thanks @dluvian). It also bumps the feerate used for liquidity requests to help with the current high fees environment.

**Full changelog:**
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.1.0...android-v2.1.1

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.1.1</title>
    <updated>2023-12-20T13:15:25Z</updated>
    <dc:date>2023-12-20T13:15:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.12.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.12.0"/>
    <summary>### Noteworthy

* With this release we upgrade to .NET 8, which also requires a current version of the Docker engine for docker deployments (&gt;= 20.10.10).
  We will try to migrate outdated versions when upgrading BTCPay Server, but if you see these [symptoms](https://docs.linuxserver.io/FAQ/#symptoms) after updating, please [upgrade Docker engine manually](https://docs.docker.com/engine/install/).
* We changed a lot of things under the hood, making the Lightning integrations extendible by plugins and also preparing the
  migration of Altcoins to plugins. If you are using plugins, you will most likely find them disabled after this update, because
  new versions compatible with BTCPay Server v1.12 are required. Please see the &quot;Manage Plugins&quot; section once updated.
* We are ending support for Postgresql 11 as it reached 5 years after its initial release. Read more about [end-of-life (EOL) of postgresql](https://www.postgresql.org/support/versioning/). While Postgresql 11 should still work with BTCPay Server, we will not keep compatibility moving forward.

### New feature

* Webhooks: Support for Payment Requests, Payouts and extendibility by plugins (#5421) @Kukks
* Support BIP129 Multisig wallet import (#5389) @Kukks
* POS Keypad: Add plus and change clear functionality (#5396) @dennisreimann @dstrukt
* Forms: Support adjusting invoice amount by multiplier, enables percentage-based discount codes (#5463) @Kukks
* Can pair or reset a Boltcard to a pull payment (#5419) @NicolasDorier
* Plugins: Allow scheduling installs/updates of future plugins (#5537) @Kukks

### Bug fixes

* Webhooks: Re-add OverPaid property to WebhookInvoiceSettledEvent (#5538 #5496) @dennisreimann
* Apps: Filter list lookups by available app types (#5482) @dennisreimann
* Wallet: Use application/jsonl as MIME type for BIP329 label export (#5489) @dennisreimann
* Wallet: Fill label from BIP21 (#5428) @dennisreimann
* Greenfield: LNURLPay store payment method fixes (#5446) @dennisreimann
* Greenfield: Fix invoice refund permission (#5558) @Kukks
* Do not activate Blazor in Wizard screens (#5435) @NicolasDorier
* Pull Payment: Display the amount of claims (#5427) @NicolasDorier
* Dashboard: LND limbo balance had the wrong unit (a 1 BTC limbo balance would show as 0.001 BTC) @NicolasDorier
* Fix occasional concurrency issue which would result in app settings change not being properly saved (#5565) @NicolasDorier

### Improvements

* Upgrade to .NET 8.0 (#5479) @NicolasDorier
* Enhance fine grain permissions (#5502) @Kukks
* Checkout: NFC improvements (#5509) @dennisreimann
* Checkout: Receipt improvements (#5505) @rockstardev @dennisreimann
* Payment Request: Improve public view (#5413) @dennisreimann @dstrukt
* POS Keypad: List recent transactions (#5478) @dennisreimann @dstrukt
* POS Cart: Add options for search and categories display (#5438) @dennisreimann
* POS Cart: Horizontal scrollable filters (#5391) @dennisreimann
* POS and Crowdfund: Item editor improvements (#5418 #5449) @dennisreimann
* Reporting: UI improvements (#5432) @dennisreimann @dstrukt
* Wallet: Use Mempool.space fee estimation (#5490 #5556) @Kukks @NicolasDorier
* Wallet: Update Passport instructions for import (#5423) @sethforprivacy
* Plugins: Send notification when a new plugin version is available (#5450) @Kukks
* Plugins: Improve crash detection on startup and hint at disabled plugins (#5514) @dennisreimann
* Plugins: Add disclaimer (#5552) @dennisreimann
* Server Policies: Add warnings for certain options (#5554) @dennisreimann
* Greenfield: Remove unused checkout type setting from POS (#5512) @dennisreimann
* Greenfield: Make checkout type V2 default for new stores (#5495) @dennisreimann
* Domain mapping: Redirect root app to canonical URL (#5471) @dennisreimann
* Lightning: Make implementations extendible by plugins (#5422) @Kukks
* Lightning: Upgrade LND to 0.17.2-beta @rockstardev
* Store Branding: Use store logo as favicon (#5519) @dennisreimann
* Rate Providers: Remove Bittrex (#5553) @Kukks
* UI: Unify list views (#5399) @dennisreimann @dstrukt
* UI: Unify public page styles (#5460 #5462 #5466) @dennisreimann @dstrukt
* UI: Add system option for theme switch (#5473) @dennisreimann
* UI: Pull payment improvements (#5453) @dennisreimann
* UI: Switch pos data to metadata in invoice create view (#5412) @Kukks
* UI: Improve invoice's webhooks table (#5545) @NicolasDorier
* UI: Remove forced center alignment for POS description (#5555) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.12.0</title>
    <updated>2023-12-19T12:10:40Z</updated>
    <dc:date>2023-12-19T12:10:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.31</id>
    <link href="https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.31"/>
    <summary>## What's Changed
* Bump ch.qos.logback:logback-classic from 1.2.3 to 1.2.13 by @dependabot in https://github.com/ACINQ/bitcoin-lib/pull/83
* Update bitcoin-kmp and secp256k1-kmp by @sstone in https://github.com/ACINQ/bitcoin-lib/pull/84


**Full Changelog**: https://github.com/ACINQ/bitcoin-lib/compare/v0.30...v0.31</summary>
    <title>ACINQ/bitcoin-lib: v0.31</title>
    <updated>2023-12-18T15:12:41Z</updated>
    <dc:date>2023-12-18T15:12:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v23.11.1</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v23.11.1"/>
    <summary>This hotfix release addresses an issue where an unexpected message could be delivered to a subdaemon, causing it to abort.

 - build: 32-bit status_debug fix (#6890)
 - channeld: We could crash `closingd` by sending it a `channeld` message (#6937)
</summary>
    <title>ElementsProject/lightning: v23.11.1</title>
    <updated>2023-12-16T12:49:39Z</updated>
    <dc:date>2023-12-16T12:49:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.1.0</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.1.0"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes

**Request inbound liquidity from your peer (#489)**
If you keep receiving funds over Lightning, you'll consume your inbound liquidity fast and may end up having to splice-in every incoming LN payments, which can be expensive because each splice is an on-chain transaction. By requesting liquidity from the peer, you can plan ahead and avoid future on-chain fees. This is now supported in Phoenix starting from 2.1.0, thanks to liquidity-ads (a new feature in the Lightning protocol).

Requesting liquidity is done manually (for now at least). A button to the liquidity screen has been added in the Home screen. Your inbound liquidity is also displayed in the channels view.

**Full changelog:**
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.15...android-v2.1.0
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.12...v1.5.14

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.1.0</title>
    <updated>2023-12-15T16:45:57Z</updated>
    <dc:date>2023-12-15T16:45:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.15</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.15"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Hotfix release

This release fixes an incorrect error message displayed when opening the Send screen (#487).

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.15</title>
    <updated>2023-12-12T14:56:33Z</updated>
    <dc:date>2023-12-12T14:56:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.11.3</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.11.3"/>
    <summary>## What's Changed
* feat: workflow to check bundle files by @dni in https://github.com/lnbits/lnbits/pull/2126
* add Alby logo to front index page by @bitkarrot in https://github.com/lnbits/lnbits/pull/2128
* optimize PNG images in lnbits/static/images for size by @prusnak in https://github.com/lnbits/lnbits/pull/2131
* set User-Agent when accessing external resources by @prusnak in https://github.com/lnbits/lnbits/pull/2100
* fix issue with displaying languages by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2130
* use awk to bump CACHE_VERSION (drop sed usage) by @prusnak in https://github.com/lnbits/lnbits/pull/2123
* fix: time margin for deleting failed payments by @dni in https://github.com/lnbits/lnbits/pull/2147
* restore ad space title by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2145
* Fix: fee reserve for internal by @callebtc in https://github.com/lnbits/lnbits/pull/2150
* fix: branch out delete payment by @dni in https://github.com/lnbits/lnbits/pull/2152
* chore: update lock file and poetry 1.7.0 in CI by @dni in https://github.com/lnbits/lnbits/pull/2156
* refactor: move tinyurl to its own router by @dni in https://github.com/lnbits/lnbits/pull/2154
* refactor: move webpush to its own router by @dni in https://github.com/lnbits/lnbits/pull/2155
* feat: add password to `&lt;lnbits-dynamic-fields&gt;` by @dni in https://github.com/lnbits/lnbits/pull/2141
* feat: lnurl library update by @dni in https://github.com/lnbits/lnbits/pull/2153
* add fiat balance to wallet by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2157
* Add nixos module option to pass additional environment variables by @HaosGames in https://github.com/lnbits/lnbits/pull/2163
* use _blank + noopener + noreferrer consistently by @prusnak in https://github.com/lnbits/lnbits/pull/2137
* fix: lnurl should follow redirect by @dni in https://github.com/lnbits/lnbits/pull/2167
* Handles intents by @arcbtc in https://github.com/lnbits/lnbits/pull/2161
* Swap Alby logos by @stackingsaunter in https://github.com/lnbits/lnbits/pull/2148
* add i18n checker and autogenerated AI translations by @prusnak in https://github.com/lnbits/lnbits/pull/2160
* chore: update to version 0.11.3 by @prusnak in https://github.com/lnbits/lnbits/pull/2168
* add checkbundle to make check by @prusnak in https://github.com/lnbits/lnbits/pull/2169
* add vars related to service fee to .env.example by @prusnak in https://github.com/lnbits/lnbits/pull/2143

## New Contributors
* @HaosGames made their first contribution in https://github.com/lnbits/lnbits/pull/2163
* @stackingsaunter made their first contribution in https://github.com/lnbits/lnbits/pull/2148

**Full Changelog**: https://github.com/lnbits/lnbits/compare/0.11.2...0.11.3</summary>
    <title>lnbits/lnbits: 0.11.3</title>
    <updated>2023-12-12T10:24:55Z</updated>
    <dc:date>2023-12-12T10:24:55Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoinknots/bitcoin/releases/tag/v25.1.knots20231115</id>
    <link href="https://github.com/bitcoinknots/bitcoin/releases/tag/v25.1.knots20231115"/>
    <summary>25.1 Release Notes
==================

Bitcoin Knots version 25.1.knots20231115 is now available from:

  &lt;https://bitcoinknots.org/files/25.x/25.1.knots20231115/&gt;

This release includes new features, various bug fixes and performance
improvements, as well as updated translations.

Please report bugs using the issue tracker at GitHub:

  &lt;https://github.com/bitcoinknots/bitcoin/issues&gt;

To receive security and update notifications, please subscribe to:

  &lt;https://bitcoinknots.org/list/announcements/join/&gt;

How to Upgrade
==============

If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes in some cases), then run the
installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)
or `bitcoind`/`bitcoin-qt` (on Linux).

Upgrading directly from very old versions of Bitcoin Core or Knots is
possible, but it might take some time if the data directory needs to be migrated. Old
wallet versions of Bitcoin Knots are generally supported.

Compatibility
==============

Bitcoin Knots is supported on operating systems using the Linux kernel,
macOS 10.15+, and Windows 7 and newer. It is not recommended to use
Bitcoin Knots on unsupported systems.

Known Bugs
==========

In various locations, including the GUI's transaction details dialog, transaction
virtual sizes may not account for an unusually high number of sigops (ie, as
determined by the `-bytespersigop` policy). This could result in reporting a
lower virtual size than is actually used for mempool or mining purposes.

In the interest of time, this release does not include updated translations.
Please open an issue on GitHub if this is of particular importance to you or
anyone you know. If nobody expresses interest in localization, it may continue
to be skipped going forward.

Notable changes
===============

Security vulnerabilities fixed
------------------------------

Several security issues (CVEs CVE-2023-40257, CVE-2023-40258, and CVE-2023-40259)
were identified in the extended `rpcauth` wallet-restriction syntax, which is
intended to enable semi-trusted local applications using the Bitcoin Knots API to
access only specific wallets (or none at all) and not others. The full details of
these issues will be disclosed at a future time, but they have all been fixed in
this release.

P2P and network changes
-----------------------

- To address a potential denial-of-service, the logic to download headers from peers
  has been reworked.  This is particularly relevant for nodes starting up for the
  first time (or for nodes which are starting up after being offline for a long time).

  Whenever headers are received from a peer that have a total chainwork that is either
  less than the node's `-minimumchainwork` value or is sufficiently below the work at
  the node's tip, a &quot;presync&quot; phase will begin, in which the node will download the
  peer's headers and verify the cumulative work on the peer's chain, prior to storing
  those headers permanently. Once that cumulative work is verified to be sufficiently high,
  the headers will be redownloaded from that peer and fully validated and stored.

  This may result in initial headers sync taking longer for new nodes starting up for
  the first time, both because the headers will be downloaded twice, and because the effect
  of a peer disconnecting during the presync phase (or while the node's best headers chain has less
  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism
  with the next peer as well (downloading the headers twice, again). (#25717)

- Enable parallel compact block downloads to mitigate temporary stalls from a slow peer. (#27626)

- The rate limit on transaction relay has been doubled to 14 transactions per
  second (35 tx/s for outbound connections) to better adapt to present network
  conditions. (#28592)

- Transactions of non-witness size 65 and above are now allowed by mempool
  and relay policy. This is to better reflect the actual afforded protections
  against CVE-2017-12842 and open up additional use-cases of smaller transaction sizes. (#26265)

- With I2P connections, a new, transient address is used for each outbound
  connection if `-i2pacceptincoming=0`. (#25355)

- A new net permission `forceinbound` (set with `-whitelist=forceinbound@...`
  or `-whitebind=forceinbound@...`) is introduced that extends `noban` permissions.
  Inbound connections from hosts protected by `forceinbound` will now be more
  likely to connect even if `maxconnections` is reached and the node's inbound
  slots are full. This is achieved by attempting to force the eviction of a random,
  inbound, otherwise unprotected peer. RPC `getpeerinfo` will also now indicate
  `forced_inbound`. (#27600)

- The `-datacarriersize` policy limit has been updated to match newer style datacarrier
  transactions. (#28408)

- An additional `-datacarriercost` option has also been added to avoid giving the &quot;segwit
  discount&quot; to aribitrary data (and can be increased to require datacarrier transactions
  to pay higher fees).

- The spam filters limiting smart contract code sizes for pre-Segwit and Segwit
  &quot;v0&quot; scripts have been expanded to also cover Taproot. Since the sizes were
  inconsistent, the lower size of 1650 which actually had a rationale has been
  used as the default for this release. The size limit can be adjusted with the
  new `-maxscriptsize` option. If you know of any legitimate scripts that are
  larger than the default, please report a bug.

New RPCs
--------

- A new `getprioritisedtransactions` RPC has been added. It returns a map of all fee deltas created by the
  user with prioritisetransaction, indexed by txid. The map also indicates whether each transaction is
  present in the mempool.

- `getaddrmaninfo` has been added to view the distribution of addresses in the
  new and tried table of the node's address manager across different networks
  (ipv4, ipv6, onion, i2p, cjdns). The RPC returns count of addresses in new
  and tried table as well as their sum for all networks. (#27511, #28565)

Updated RPCs
------------

- The `verifychain` RPC will now return `false` if the checks didn't fail,
  but couldn't be completed at the desired depth and level. This could be due
  to missing data while pruning, due to an insufficient dbcache or due to
  the node being shutdown before the call could finish. (#25574)

- `sendrawtransaction` has a new, optional argument, `maxburnamount` with a default value of `0`.
  Any transaction containing an unspendable output with a value greater than `maxburnamount` will
  not be submitted. At present, the outputs deemed unspendable are those with scripts that begin
  with an `OP_RETURN` code (known as 'datacarriers'), scripts that exceed the maximum script size,
  and scripts that contain invalid opcodes.

- The `testmempoolaccept` RPC now returns 2 additional results within the &quot;fees&quot; result:
  &quot;effective-feerate&quot; is the feerate including fees and sizes of transactions validated together if
  package validation was used, and also includes any modified fees from prioritisetransaction. The
  &quot;effective-includes&quot; result lists the wtxids of transactions whose modified fees and sizes were used
  in the effective-feerate (#26646).

- `decodescript` may now infer a Miniscript descriptor under P2WSH context if it is not lacking
  information. (#27037)

- `finalizepsbt` is now able to finalize a transaction with inputs spending Miniscript-compatible
  P2WSH scripts. (#24149)

- The `-deprecatedrpc=softforks` configuration option has been removed.  The
  RPC `getblockchaininfo` no longer returns the `softforks` field, which was
  previously deprecated in 23.0. (#23508) Information on soft fork status is
  now only available via the `getdeploymentinfo` RPC.

- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.
  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,
  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results
  accounting for received coins from coinbase outputs, without an option to
  change that behaviour. Excluding coinbases was previously deprecated in 23.0.
  (#25171)

- The `deprecatedrpc=fees` configuration option has been removed. The top-level
  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no
  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,
  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.
  The same fee fields can be accessed through the `fees` object in the result.
  The top-level fee fields were previously deprecated in 23.0. (#25204)

- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,
  indicating the progress on the presync phase mentioned in the
  &quot;P2P and network changes&quot; section above.

- RPC `disconnectnode` now accepts a subnet into `address` argument. (#26576)

- The output from `getmempoolinfo` is extended to include a `rbf_policy` key
  briefly describing the current replace-by-fee policy (&quot;never&quot;, &quot;optin&quot;, or
  &quot;always&quot;).

Changes to wallet related RPCs can be found in the Wallet section below.

Build System
------------

- The `--enable-upnp-default` and `--enable-natpmp-default` options
  have been removed. If you want to use port mapping, you can
  configure it using a .conf file, or by passing the relevant
  options at runtime. (#26896)

Updated settings
----------------

- If the `-checkblocks` or `-checklevel` options are explicitly provided by the
user, but the verification checks cannot be completed due to an insufficient
dbcache, Bitcoin Knots will now return an error at startup. (#25574)

- Setting `-blocksonly` will now reduce the maximum mempool memory
  to 5MB (users may still use `-maxmempool` to override). Previously,
  the default 300MB would be used, leading to unexpected memory usage
  for users running with `-blocksonly` expecting it to eliminate
  mempool memory usage.

  As unused mempool memory is shared with dbcache, this also reduces
  the dbcache size for users running with `-blocksonly`, potentially
  impacting performance.
- Setting `-maxconnections=0` will now disable `-dnsseed`
  and `-listen` (users may still set them to override).

Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.

New settings
------------

- The `shutdownnotify` option is used to specify a command to execute synchronously
  before Bitcoin Knots has begun its shutdown sequence. (#23395)

- To assist in controlling access to the RPC &quot;cookie&quot; file on multiuser systems, a new
  `rpccookieperms` setting has been added to set the file permissions mode before
  writing the access token.

Wallet
------

- Added a new `next_index` field in the response in `listdescriptors` to
  have the same format as `importdescriptors` (#26194)

- RPC `listunspent` now has a new argument `include_immature_coinbase`
  to include coinbase UTXOs that don't meet the minimum spendability
  depth requirement (which before were silently skipped). (#25730)

- Rescans for descriptor wallets are now significantly faster if compact
  block filters (BIP158) are available. Since those are not constructed
  by default, the configuration option &quot;-blockfilterindex=1&quot; has to be
  provided to take advantage of the optimization. This improves the
  performance of the RPC calls `rescanblockchain`, `importdescriptors`
  and `restorewallet`. (#25957)

- RPC `unloadwallet` now fails if a rescan is in progress. (#26618)

- Wallet passphrases may now contain null characters.
  Prior to this change, only characters up to the first
  null character were recognized and accepted. (#27068)

- Address Purposes strings are now restricted to the currently known values of &quot;send&quot;,
  &quot;receive&quot;, and &quot;refund&quot;. Wallets that have unrecognized purpose strings will have
  loading warnings, and the `listlabels` RPC will raise an error if an unrecognized purpose
  is requested. (#27217)

- In the `createwallet`, `loadwallet`, `unloadwallet`, and `restorewallet` RPCs, the
  &quot;warning&quot; string field is deprecated in favor of a &quot;warnings&quot; field that
  returns a JSON array of strings to better handle multiple warning messages and
  for consistency with other wallet RPCs. The &quot;warning&quot; field will be fully
  removed from these RPCs in v26. It can be temporarily re-enabled during the
  deprecation period by launching bitcoind with the configuration option
  `-deprecatedrpc=walletwarningfield`. (#27279)

- Descriptor wallets can now spend coins sent to P2WSH Miniscript descriptors. (#24149)

- The `-walletrbf` startup option will now default to `true`. The
  wallet will now default to opt-in RBF on transactions that it creates. (#25610)

- The `replaceable` option for the `createrawtransaction` and
  `createpsbt` RPCs will now default to `true`. Transactions created
  with these RPCs will default to having opt-in RBF enabled. (#25610)

- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript
  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using
  the Bitcoin Core wallet yet.
  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)

- The `tr()` output descriptor now supports multisig scripts through the `multi_a()` and
  `sortedmulti_a()` functions. (#24043)

- The `importdescriptors` RPC can now be used to import BIP 93 (codex32) seeds. (#27351)

- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output
  amounts are now randomized. (#24494)

- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new
  `parent_descs` field for every &quot;receive&quot; entry. (#25504)

- A new optional `include_change` parameter was added to the `listsinceblock` command. (#25504)

- RPC `importaddress` now supports watch-only descriptor wallets.

- RPC `walletprocesspsbt` return object now includes field `hex` (if the transaction
  is complete) containing the serialized transaction suitable for RPC `sendrawtransaction`. (#28414)

- The result of RPC `getaddressinfo` adds an `isactive` key which can be used to determine if
  the address is derived from the currently active wallet seed. (#27216)

- RPC `getreceivedbylabel` now returns an error, &quot;Label not found
  in wallet&quot; (-4), if the label is not in the address book. (#25122)

Migrating Legacy Wallets to Descriptor Wallets
---------------------------------------------

An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to
Descriptor wallets. More information about the migration process is available in the
[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).

GUI changes
-----------

- The &quot;Mask values&quot; is a persistent option now. (gui#701)

- The &quot;Mask values&quot; option affects the &quot;Transaction&quot; view now, in addition to the
  &quot;Overview&quot; one. (gui#708)

- A new menu item to restore a wallet from a backup file has been added (gui#471).

- Configuration changes made in the bitcoin GUI (such as the pruning setting,
proxy settings, UPNP preferences) are now saved to `&lt;datadir&gt;/settings.json`
file rather than to the Qt settings backend (windows registry or unix desktop
config files), so these settings will now apply to bitcoind, instead of being
ignored. (#15936, gui#602)

- Also, the interaction between GUI settings and `bitcoin.conf` settings is
simplified. Settings from `bitcoin.conf` are now displayed normally in the GUI
settings dialog, instead of in a separate warning message (&quot;Options set in this
dialog are overridden by the configuration file: -setting=value&quot;). And these
settings can now be edited because `settings.json` values take precedence over
`bitcoin.conf` values. (#15936)

REST
----

- A new `/rest/deploymentinfo` endpoint has been added for fetching various
  state info regarding deployments of consensus changes. (#25412)

- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use
  a query parameter instead of path parameter to specify the result count. The
  count parameter is now optional, and defaults to 5 for both endpoints. The old
  endpoints are still functional, and have no documented behaviour change.

  For `/headers`, use
  `GET /rest/headers/&lt;BLOCK-HASH&gt;.&lt;bin|hex|json&gt;?count=&lt;COUNT=5&gt;`
  instead of
  `GET /rest/headers/&lt;COUNT&gt;/&lt;BLOCK-HASH&gt;.&lt;bin|hex|json&gt;` (deprecated)

  For `/blockfilterheaders/`, use
  `GET /rest/blockfilterheaders/&lt;FILTERTYPE&gt;/&lt;BLOCK-HASH&gt;.&lt;bin|hex|json&gt;?count=&lt;COUNT=5&gt;`
  instead of
  `GET /rest/blockfilterheaders/&lt;FILTERTYPE&gt;/&lt;COUNT&gt;/&lt;BLOCK-HASH&gt;.&lt;bin|hex|json&gt;` (deprecated)

  (#24098)

Binary verification
----

- The binary verification script has been updated. In previous releases it
  would verify that the binaries had been signed with a single &quot;release key&quot;.
  In this release and moving forward it will verify that the binaries are
  signed by a _threshold of trusted keys_. For more details and
  examples, see:
  https://github.com/bitcoin/bitcoin/blob/master/contrib/verify-binaries/README.md
  (#27358)

Low-level changes
=================

RPC
---

- The JSON-RPC server now rejects requests where a parameter is specified multiple
  times with the same name, instead of silently overwriting earlier parameter values
  with later ones. (#26628)

- RPC `listsinceblock` now accepts an optional `label` argument
  to fetch incoming transactions having the specified label. (#25934)

- Previously `setban`, `addpeeraddress`, `walletcreatefundedpsbt`, methods
  allowed non-boolean and non-null values to be passed as boolean parameters.
  Any string, number, array, or object value that was passed would be treated
  as false. After this change, passing any value except `true`, `false`, or
  `null` now triggers a JSON value is not of expected type error. (#26213)

- The `deriveaddresses`, `getdescriptorinfo`, `importdescriptors` and `scantxoutset` commands now
  accept Miniscript expression within a `wsh()` descriptor. (#24148)

- The `getaddressinfo`, `decodescript`, `listdescriptors` and `listunspent` commands may now output
  a Miniscript descriptor inside a `wsh()` where a `wsh(raw())` descriptor was previously returned. (#24148)
</summary>
    <title>bitcoinknots/bitcoin: v25.1.knots20231115</title>
    <updated>2023-12-10T16:29:28Z</updated>
    <dc:date>2023-12-10T16:29:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin/bitcoin/releases/tag/v26.0</id>
    <link href="https://github.com/bitcoin/bitcoin/releases/tag/v26.0"/>
    <summary>Bitcoin Core version 26.0 is now available from:

https://bitcoincore.org/bin/bitcoin-core-26.0/

For the release notes please see the git repository:

https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-26.0.md

Do not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.</summary>
    <title>bitcoin/bitcoin: v26.0</title>
    <updated>2023-12-07T19:53:00Z</updated>
    <dc:date>2023-12-07T19:53:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.14</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.14"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Main changes from 2.0.13

* Added a screen to delete the wallet (4ffc78d1)
* Fixed an issue reading bip-21 URIs with a Lightning invoice fallback, see #466 (f0ae9044)

**Full changelog**: 
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.13...android-v2.0.14

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.14</title>
    <updated>2023-12-07T13:37:14Z</updated>
    <dc:date>2023-12-07T13:37:14Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.17.3-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.3-beta"/>
    <summary>This is a hot fix release that fixes multiple concurrency and memory related bugs. Memory consumption for `lnd` nodes running with `bitcoind` using the `rpcpolling` has been significantly reduced (previously scaled with total mempool size). 

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.17.3-beta.sig` and `manifest-v0.17.3-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.17.3-beta.sig manifest-v0.17.3-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Wed Dec  6 13:24:12 2023 PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimestamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.17.3-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.17.3-beta.sig.ots -f manifest-roasbeef-v0.17.3-beta.sig
```

Alternatively, [the OpenTimestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally.

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.21.0`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, `kvdb_etcd` and `kvdb_sqlite`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.17.3-beta
gpg: Signature made Tue 05 Dec 2023 04:38:50 PM PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.17.3-beta /verify-install.sh v0.17.3-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.17.3-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.17.3-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.3-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.3-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️


# Release Notes

https://github.com/lightningnetwork/lnd/blob/v0.17.3-beta/docs/release-notes/release-notes-0.17.3.md

# Contributors (Alphabetical Order)

- Eugene Siegel
- Yong Yu
</summary>
    <title>lightningnetwork/lnd: v0.17.3-beta</title>
    <updated>2023-12-06T21:26:54Z</updated>
    <dc:date>2023-12-06T21:26:54Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.13</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.13"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.12

* Add timeout to Peer connection by @dpad85 in https://github.com/ACINQ/phoenix/pull/448
* Localisation in es-419 (Spanish for Latin America and The Caribbean) by @BitByBitByBitByBit in https://github.com/ACINQ/phoenix/pull/470 and https://github.com/ACINQ/phoenix/pull/477
Thanks again @BitByBitByBitByBit for your work!
* Skip TLS check for onion Electrum servers by @dpad85 in https://github.com/ACINQ/phoenix/pull/479
* Add help message for swaps in Home screen in b5d17ed879d32a5addace1d44094e167101ca7d1
* Fix crashes due to plural resources not being supported on some Samsung devices 703dd23a94f446c33e3c22c95b386c4debdf4356

**Full Changelog**: 

- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.12...android-v2.0.13
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.11...v1.5.12

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.13</title>
    <updated>2023-12-01T16:32:36Z</updated>
    <dc:date>2023-12-01T16:32:36Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.5.7</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.5.7"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.5.7</title>
    <updated>2023-11-29T16:00:47Z</updated>
    <dc:date>2023-11-29T16:00:47Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v23.11</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v23.11"/>
    <summary> We're pleased to announce the 23.11 release of Core Lightning, named by @ShahanaFarooqui. For a list of all changes, please see the changelog.

## Highlights for Users

- The `check` command just got more powerful. Instead of only checking the parameters of a command, it will do all checks up to the point where something in the system would need to be altered now.
- Control all the runes! Runes got an additional restriction field `per` for even more powerful access control. This also comes with a new field `last_used` for the `showrunes` command.
- Users can now verify the validity of their existing emergency backups using the `decode` command.
- When the new config option `invoices-onchain-fallback` is set, Core-Lightning automatically adds a taproot fallback address to all invoices produced by `invoice`. This allows for onchain payments as a fallback mechanism.


## Highlights for the Network

- Wumbology for all! The configuration option `large-channels` is now set by default.
- The dual-funding process stores the state when sending `commitment_signed` now. This allows to continue the funding process after a temporary connection loss.
- A new flag `--commit-fee-offset` allows to set an offset that can potentially reduce disagreements on feerate updates.
- Plugins can now allow even unknown messages by registration and also are allowed sending them.
- Some stability improvements and bugfixes regarding splices.
- A whole lot of cleanups to stay on track with small specification changes. This adds additional stability and reduces disconnects.

## Highlights for Developers

- Wait a second: The `wait` and pagination api got extended, one can now also wait for `listsendpays` and `listforwards`.
- A new `recover` command can now be used to recover an unused node from a hsmsecret just as the `--recover` flag would do. This currently only works for `sqlite3` backends.
- Ever wondered how much space a plugin occupies in your database? The new `datastoreusage` command will tell you.
- The rust bindings got some more coverage.
- Core-Lightning can no longer be build with `--developer-enabled`. To enable developer features use `./configure --enable-debugbuild` and set the config option `--developer` instead.


Since 23.08, we've had 499 commits by 29 authors in 97 days!

A special thanks to the 5 first time contributors:
- Mariusz Kogen
- dergoegge
- Tony Giorgio
- maxwedwards
- hMsats

~ @nepet, @ShahanaFarooqui, @EndothermicDev, @cdecker, @niftynei and @RustyRussell</summary>
    <title>ElementsProject/lightning: v23.11</title>
    <updated>2023-11-28T18:41:46Z</updated>
    <dc:date>2023-11-28T18:41:46Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/elements/releases/tag/elements-23.2.1</id>
    <link href="https://github.com/ElementsProject/elements/releases/tag/elements-23.2.1"/>
    <summary>This release includes the following changes:
* Brings Elements up to date with Bitcoin Core version 23.2. To see the Bitcoin 23.2 release notes please [click here](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-23.2.md).
* Adds support for arm64 macos native builds.
* Fixes a problem in the getnewaddress rpc: getnewaddress will now return an unblinded bech32 address even when `-blindedaddresses=1` in config ([PR #1246](https://github.com/ElementsProject/elements/pull/1246), [issue #1245](https://github.com/ElementsProject/elements/issues/1245)).
* In contrast to Bitcoin, Elements is not changing the default wallet format from legacy to descriptors, this is because many things (like peg-ins and peg-outs) still work only on legacy wallets.</summary>
    <title>ElementsProject/elements: elements-23.2.1</title>
    <updated>2023-11-28T17:37:13Z</updated>
    <dc:date>2023-11-28T17:37:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.11.2</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.11.2"/>
    <summary># New in this release

- New service fee settings that lets you earn a transaction fee for all internal or external transaction on an LNbits instance. Set these environment variables in your `.env` file or use the Admin-UI to enable this feature:
  - `LNBITS_SERVICE_FEE`: the service fee (in percent)
  - `LNBITS_SERVICE_FEE_WALLET`: the wallet where fees go to
  - `LNBITS_SERVICE_FEE_MAX`: the maximum fee per transaction (in satoshis)
  - `LNBITS_SERVICE_FEE_IGNORE_INTERNAL`: disable fees for internal transactions
- `lnbits-cli` can now manage extensions
- New funding source: Alby wallet
- Node Management via `.env` file without Admin-UI
- Core Lightning bug fixes
- LND REST bug fixes
- New Czech (cs), Slovak (sk) and Korean (kr) localizations 
- FakeWallet fix for providing Lightning preimages

## All changes in detail
* [BUG] Installation of new extensions via LNBITS_EXTENSIONS_DEFAULT_INSTALL does not select the right version by @motorina0 in https://github.com/lnbits/lnbits/pull/2046
* chore: bump version to 0.11.2 by @dni in https://github.com/lnbits/lnbits/pull/2047
* Update installation.md by @UXUY-Labs in https://github.com/lnbits/lnbits/pull/2052
* fix: emit event for nested `lnbits-dynamic-fields` components by @motorina0 in https://github.com/lnbits/lnbits/pull/2053
* Update api.md by @arbadacarbaYK in https://github.com/lnbits/lnbits/pull/2058
* Revert &quot;Update installation.md&quot; by @callebtc in https://github.com/lnbits/lnbits/pull/2060
* [main/fix] fix docs/guide/installation by @prusnak in https://github.com/lnbits/lnbits/pull/2059
* Sync main-&gt;dev by @callebtc in https://github.com/lnbits/lnbits/pull/2061
* [FEAT] add extension functionality to lnbits-cli by @dni in https://github.com/lnbits/lnbits/pull/1963
* CLN: Handle optional invoice fields by @kallerosenbaum in https://github.com/lnbits/lnbits/pull/2056
* [FEAT] add cache busting via static_url_for and settings.cache_version by @dni in https://github.com/lnbits/lnbits/pull/1964
* remove unnecessary str() in f-string by @prusnak in https://github.com/lnbits/lnbits/pull/2064
* Enable Node Management via .env without activating admin-UI by @TrezorHannes in https://github.com/lnbits/lnbits/pull/2068
* feat: add `extension-settings` vue component by @dni in https://github.com/lnbits/lnbits/pull/2004
* feat: logger success when wallet is connected by @dni in https://github.com/lnbits/lnbits/pull/2075
* use floor() instead of round() to convert msat to sat in frontend by @prusnak in https://github.com/lnbits/lnbits/pull/2070
* add comment why CLightningWallet alias is needed by @prusnak in https://github.com/lnbits/lnbits/pull/2065
* i18n: remove empty lines by @prusnak in https://github.com/lnbits/lnbits/pull/2079
* i18n: add Czech (cs) and Slovak (sk) localization by @prusnak in https://github.com/lnbits/lnbits/pull/2080
* handle correctly the case with no active channels by @prusnak in https://github.com/lnbits/lnbits/pull/2085
* make example paths in .env.example less confusing by @prusnak in https://github.com/lnbits/lnbits/pull/2066
* chore: remove boltz settings by @dni in https://github.com/lnbits/lnbits/pull/2019
* dotenv is not required directly, only indirectly by @prusnak in https://github.com/lnbits/lnbits/pull/2087
* Fixed payment isn't initiated on lndrest by @skrafft in https://github.com/lnbits/lnbits/pull/2074
* Bump axios from 1.3.4 to 1.6.0 by @dependabot in https://github.com/lnbits/lnbits/pull/2093
* doc: add `SUPER_USER` field by @motorina0 in https://github.com/lnbits/lnbits/pull/2097
* Updated nix install guide by @arcbtc in https://github.com/lnbits/lnbits/pull/2099
* change color theme icons by @prusnak in https://github.com/lnbits/lnbits/pull/2090
* hotfix toolbar title by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2096
* FakeWallet: provide payment preimage by @callebtc in https://github.com/lnbits/lnbits/pull/2098
* fix: dont release docker image for release candidate by @dni in https://github.com/lnbits/lnbits/pull/2101
* feat: add getalby wallet as funding source by @bitkarrot in https://github.com/lnbits/lnbits/pull/2086
* Upadte to c-lightning-REST v0.10.5 by @callebtc in https://github.com/lnbits/lnbits/pull/2109
* Add service fee to specific wallet by @callebtc in https://github.com/lnbits/lnbits/pull/2050
* pass custom extra on payment out by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2089
* Organised env by @arcbtc in https://github.com/lnbits/lnbits/pull/2110
* CLN: return payment failure if no payment is found by @callebtc in https://github.com/lnbits/lnbits/pull/2113
* docs: small cleanup by @prusnak in https://github.com/lnbits/lnbits/pull/2107
* docs: Change path to super_user file located in the data directory by @Sebastix in https://github.com/lnbits/lnbits/pull/2115
* fix: redirect for all paths of the extension (not only for `/api`) by @motorina0 in https://github.com/lnbits/lnbits/pull/2120
* feat: manage extensions navbar by @dni in https://github.com/lnbits/lnbits/pull/2121
* feat: add libwally for liquid support by @dni in https://github.com/lnbits/lnbits/pull/2117

## New Contributors
* @UXUY-Labs made their first contribution in https://github.com/lnbits/lnbits/pull/2052
* @kallerosenbaum made their first contribution in https://github.com/lnbits/lnbits/pull/2056
* @skrafft made their first contribution in https://github.com/lnbits/lnbits/pull/2074
* @dependabot made their first contribution in https://github.com/lnbits/lnbits/pull/2093
* @Sebastix made their first contribution in https://github.com/lnbits/lnbits/pull/2115
* @psychoet made their first contribution in https://github.com/lnbits/lnbits/pull/2118

**Full Changelog**: https://github.com/lnbits/lnbits/compare/0.11.1...0.11.2</summary>
    <title>lnbits/lnbits: 0.11.2</title>
    <updated>2023-11-27T14:57:41Z</updated>
    <dc:date>2023-11-27T14:57:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.4.1b</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.4.1b"/>
    <summary>### _[Wasabi](https://WasabiWallet.io) is an easy to use, privacy-focused, open-source, non-custodial, Bitcoin wallet_

# Download

:window: [Windows](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4.1b/Wasabi-2.0.4.1.msi)
:green_apple: [Apple M1/M2](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4.1b/Wasabi-2.0.4.1-arm64.dmg)
:apple: [Apple Intel](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4.1b/Wasabi-2.0.4.1.dmg)
:penguin: [Ubuntu / Debian](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4.1b/Wasabi-2.0.4.1.deb)
:penguin: [Other Linux](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4.1b/Wasabi-2.0.4.1.tar.gz)

---

## Release Highlights

🛠️ Fix hardware wallets with updat to HWI 2.3.1 - [Pull Request](https://github.com/zkSNACKs/WalletWasabi/pull/11979)
🔧 Local Prison mitigation - [Pull Request](https://github.com/zkSNACKs/WalletWasabi/pull/11981)

## Release Summary

This is a silent release aiming to fix two specific issues:

1. Out-dated HWI, ensuring that Wasabi works with all hardware wallets.
2. There were some issues with the server-side prison banning coins for ~1-2 years. 
The clients saved this information and Wasabi never chose those coins again until ban period is over. 
Not even if the server-side prison was cleared.

---

## Installation Guide

Download the operating system relevant software package and install Wasabi like you would any other software on your computer. For a detailed installation guide, including **signature verification**, see [the documentation](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html).

## Advanced Guide

If you want to build or update Wasabi from source code, check out [these easy instructions](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html).

Wasabi uses [reproducible builds](https://reproducible-builds.org/), which you can verify with [this guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md).

## Documentation

:spider_web: [Website](https://wasabiwallet.io)
:onion: [Tor onion site](http://wasabiukrxmkdgve5kynjztuovbg43uxcbcxn6y2okcrsg7gb6jdmbad.onion/)
:grey_question: [FAQ](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq)

## Requirements 
- Windows 10+
- macOs 10.15+
- Ubuntu 16.04, 18.04, 20.04+
- Fedora 33+
- Debian 10+

## What's Changed

https://github.com/zkSNACKs/WalletWasabi/pull/11979
https://github.com/zkSNACKs/WalletWasabi/pull/11981
https://github.com/zkSNACKs/WalletWasabi/pull/11980</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.4.1b</title>
    <updated>2023-11-22T15:01:40Z</updated>
    <dc:date>2023-11-22T15:01:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.8.1</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.8.1"/>
    <summary>- Add [oxt.me](https://light.oxt.me) as fee rates source (configure in Preferences)
- Add historical fiat values to the transactions CSV (from Export Wallet or the Transactions tab) where an exchange source is configured
- Increase and decrease maximum limit on fee rate slider where fee rate equals or exceeds current range
- Add QR display (with save to PDF) to the Export Wallet &gt; Output Descriptor option
- Set non-mainnet fallback fee rates to 1 sat/vb
- Switch from HttpUrlConnection to Jetty HTTP client for all external HTTP calls to avoid spurious DNS query
- In Cormorant, check the wallet gap limit and increase the Bitcoin Core descriptor range if necessary
- Set a smaller increment amount on the fee range slider for keyboard adjustments
- Use fallback fee rate estimates if the connected server returns an error estimating fee rates
- Show an error dialog on attempting CPFP where no outputs are spendable
- Add Krux to the Import Wallet options
- Bug fix: Set dialog minimum height to preferred height (or make it resizable) to avoid window sizing bug in some Linux environments
- Bug fix: Fix transaction diagram output size indicators in transactions with non-address outputs
- Bug fix: Add null safe tests for standard account types
- Bug fix: In Cormorant, handle checking imports and stopping before server is started
- Bug fix: Save previously used Mix To wallet index to skip used addresses if mix fails</summary>
    <title>sparrowwallet/sparrow: 1.8.1</title>
    <updated>2023-11-22T09:46:51Z</updated>
    <dc:date>2023-11-22T09:46:51Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.17.2-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.2-beta"/>
    <summary>This is a hot fix release to fix a concurrency related bug in the peer/server that could lead to a panic. The only change included in this release is: https://github.com/lightningnetwork/lnd/pull/8186. 

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.17.2-beta.sig` and `manifest-v0.17.2-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.17.2-beta.sig manifest-v0.17.2-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Mon Nov 20 18:56:09 2023 CST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimestamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.17.2-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.17.2-beta.sig.ots -f manifest-roasbeef-v0.17.2-beta.sig
```

Alternatively, [the OpenTimestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally.

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.21.0`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, `kvdb_etcd` and `kvdb_sqlite`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.17.2-beta
gpg: Signature made Mon 20 Nov 2023 12:32:30 PM PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.17.2-beta /verify-install.sh v0.17.2-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.17.2-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.17.2-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.2-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.2-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

https://github.com/lightningnetwork/lnd/blob/v0.17.2-beta/docs/release-notes/release-notes-0.17.2.md

# Contributors (Alphabetical Order)

* Eugene Siegel
* Matt Morehouse</summary>
    <title>lightningnetwork/lnd: v0.17.2-beta</title>
    <updated>2023-11-21T21:28:38Z</updated>
    <dc:date>2023-11-21T21:28:38Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/start-os/releases/tag/v0.3.5.1</id>
    <link href="https://github.com/Start9Labs/start-os/releases/tag/v0.3.5.1"/>
    <summary>## Highlights
* Revert perpetual performance mode for quieter fan
* Minor bug fixes

## What's Changed
* [chore]: fix automated tests by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2506
* rename frontend to web and update contributing guide by @MattDHill in https://github.com/Start9Labs/start-os/pull/2509
* Update README.md by @MattDHill in https://github.com/Start9Labs/start-os/pull/2511
* set better governor hierarchy and add cli command to change by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2519
* FE version bump and minor copy updates by @MattDHill in https://github.com/Start9Labs/start-os/pull/2517
* bump version by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2520
* play song unconditionally by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2518
* allow non-zero exit `cpupower frequency-info -g` by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2523
* retry migration if incomplete by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2522
* redesign firmware updater by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2521
* improve robustness of install by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2524
* add cli to rotate key by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2525
* prevent hanging on reboot by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2526
* set content disposition for cert by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2527
* fix ntp sync status check daemon by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2528
* v0.3.5.1 by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2513


**Full Changelog**: https://github.com/Start9Labs/start-os/compare/v0.3.5...v0.3.5.1

## Checksums
BLAKE-3
```
5e3d6e4865fa3417bbe2a89d9a53181140abcfbc6b7f7eb1ad1be72067e8a73f  startos-0.3.5.1-39de098_aarch64.iso
c8357d0e49962120960e843aa8a77b24bb6a98e2a2a7415902598736fd32d020  startos-0.3.5.1-39de098_aarch64-nonfree.iso
49d635fbcb3d8239a5550158acc21f6d9cd67f1bfc4fae124eac625673ec5a80  startos-0.3.5.1-39de098_raspberrypi.img.gz
afd33094c90faade9f7fa8df1752558d4c708287f3237e638975aceec302bc84  startos-0.3.5.1-39de098_x86_64.iso
92f1a6f88e4da72d081babf9a47bd09d1870ddfb624756f3cd8d1cf2440d9cbd  startos-0.3.5.1-39de098_x86_64-nonfree.iso
```
SHA-256
```
aa3c70b411e5ad2c52ccf927e7bae0394d816d8e197511cbebf0503e23a1a964  startos-0.3.5.1-39de098_aarch64.iso
8ebae051ccff4a99b23326ac40e8c2ce85d40438f2093bb1be967e3aa2961178  startos-0.3.5.1-39de098_aarch64-nonfree.iso
daba5d01f93a53433db2347a81cf46accba9096711eccef9c90836ccc78a7e69  startos-0.3.5.1-39de098_raspberrypi.img.gz
181fec43a3b7287fe6c6cdb70bcba79a5596fc2be1dbe5a54e09a4c142272155  startos-0.3.5.1-39de098_x86_64.iso
29b0f1e0211568ea66d6b729536ff84aed3b6cbc1c38540a7c80a391fd01616e  startos-0.3.5.1-39de098_x86_64-nonfree.iso
```</summary>
    <title>Start9Labs/start-os: v0.3.5.1</title>
    <updated>2023-11-21T19:34:28Z</updated>
    <dc:date>2023-11-21T19:34:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.17.1-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.1-beta"/>
    <summary>This marks the first minor release in the 0.17.x cycle. This release includes a number of bug fixes and optimizations, including: a reduction in CPU utilization due to the new mempool scanning safety logic, enchantments to the CPFP logic for anchor outputs, a fix to a peer/server deadlock, and a bug fix for the new taproot channel type that may have otherwise caused a channel to show as inactive until reconnection. 

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.17.1-beta.sig` and `manifest-v0.17.1-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.17.1-beta.sig manifest-v0.17.1-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Mon Nov 13 15:45:38 2023 PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimestamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.17.1-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.17.1-beta.sig.ots -f manifest-roasbeef-v0.17.1-beta.sig
```

Alternatively, [the OpenTimestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally.

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.21.0`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, `kvdb_etcd` and `kvdb_sqlite`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.17.1-beta
gpg: Signature made Mon 13 Nov 2023 11:13:31 AM PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.17.1-beta /verify-install.sh v0.17.1-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.17.1-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.17.1-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.1-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.1-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

https://github.com/lightningnetwork/lnd/blob/v0-17-1-branch/docs/release-notes/release-notes-0.17.1.md

# Contributors (Alphabetical Order)

* Eugene Siegel
* Olaoluwa Osuntokun
* Yong Yu
</summary>
    <title>lightningnetwork/lnd: v0.17.1-beta</title>
    <updated>2023-11-14T18:58:32Z</updated>
    <dc:date>2023-11-14T18:58:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.8.0</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.8.0"/>
    <summary>- Add a figure caption to the overview diagram on a transaction tab to describe the transaction
- Enlarge the QR display dialog and increase the default QR code density
- Add Search All Wallets functionality to the View menu to search across all open wallets
- Add airgapped message signing via QR
- Increase the gap limit where necessary to sign a PSBT where its global xpubs match an open wallet
- Add fee rate selection slider to the Private Key Sweep dialog
- Add a Scan button to QR display dialog to progress immediately to scanning
- Support opening multiple wallet or transaction files at once
- When searching, show transactions with a matching output address if a full address is provided
- Add Satochip card support as an airgapped or connected hardware wallet (@Toporin)
- Add Krux as an airgapped hardware wallet
- Temporarily disconnect from Whirlpool if the wallet gap limit is increasing rapidly during mixing due to network issues
- Add Whirlpool Postmix to the list of possible accounts that can be added to any Legacy or Segwit wallet
- Add additional testnet public server `qtornado.com`
- Freeze and unfreeze UTXOs in Sparrow Terminal by pressing `f` on the UTXOs table
- Check and indicate in the title bar if a proxy is configured and working in Sparrow Terminal
- Add keyboard shortcut `cmd+alt+arrow` on MacOS to switch tabs (`ctrl+pageup/pagedown` already works on all platforms) 
- Select all text in the message sign signature field on mouse click
- Reload Cormorant wallet if unloaded when polling Bitcoin Core
- Support hexadecimal Border Wallets grid PDFs
- Improve fullscreen behaviour by setting dialog ownership to parent window
- Add duplicate payment address warning to transaction diagram
- Display an error message when attempting to mix from account 0 and it is not the master wallet
- Remove block hash from transaction tab fields, add to context menu for block height and timestamp
- Add Bisq segwit custom derivation to mnemonic wallet discovery
- Bug fix: Suppress script type change warning when replacing the entire wallet in Settings
- Bug fix: Force selection of a new configured server if currently configured server is deleted
- Bug fix: Fix mixing from Whirlpool wallets with special characters in the passphrase
- Bug fix: Fix possible thread race issue when connecting to an Electrum server</summary>
    <title>sparrowwallet/sparrow: 1.8.0</title>
    <updated>2023-11-09T12:17:59Z</updated>
    <dc:date>2023-11-09T12:17:59Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/start-os/releases/tag/v0.3.5</id>
    <link href="https://github.com/Start9Labs/start-os/releases/tag/v0.3.5"/>
    <summary>This release contains significant under-the-hood improvements to performance and reliability

## Highlights
 * Ditch Docker, replace with Podman
 * Remove locking behavior from PatchDB and optimize
 * Boost efficiency of service manager
 * Require HTTPS on LAN, and improve setup flow for trusting Root CA
 * Better default privacy settings for Firefox kiosk mode
 * Eliminate memory leak from Javascript runtime
 * Other small bug fixes
 * Update license to MIT

## What's Changed
* be resilient to bad lshw output by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2390
* frontend: ui: bugfix: consistent password length. by @jadijadi in https://github.com/Start9Labs/start-os/pull/2394
* fix: Add in the code to create the life check for the ui to keep the … by @Blu-J in https://github.com/Start9Labs/start-os/pull/2391
* Fixes: Builds for the macs by @Blu-J in https://github.com/Start9Labs/start-os/pull/2397
* backend: sdk init: output file location. fixes #1854 by @jadijadi in https://github.com/Start9Labs/start-os/pull/2393
* Refactor/service manager by @Blu-J in https://github.com/Start9Labs/start-os/pull/2401
* disable docker memory accounting by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2399
* Feature/remove bollard by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2396
* SDK install script fix by @k0gen in https://github.com/Start9Labs/start-os/pull/2411
* Add tor-check to CLI by @k0gen in https://github.com/Start9Labs/start-os/pull/2412
* fix: initialize images before netdummy by @Blu-J in https://github.com/Start9Labs/start-os/pull/2418
* enable switching to https on login page by @elvece in https://github.com/Start9Labs/start-os/pull/2406
* do not require auth for cert by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2425
* Refactor/patch db by @Blu-J in https://github.com/Start9Labs/start-os/pull/2415
* registry admin script by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2426
* feat: Change all the dependency errors at once by @Blu-J in https://github.com/Start9Labs/start-os/pull/2427
* only emit when things change by @MattDHill in https://github.com/Start9Labs/start-os/pull/2428
* bump FE version and release notes by @MattDHill in https://github.com/Start9Labs/start-os/pull/2429
* Shore up Firefox kiosk mode by @gStart9 in https://github.com/Start9Labs/start-os/pull/2422
* feat: Add in the ssl_size by @Blu-J in https://github.com/Start9Labs/start-os/pull/2432
* mount /var/tmp to data drive by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2433
* Bugfix/var tmp by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2434
* Update/logos by @MattDHill in https://github.com/Start9Labs/start-os/pull/2435
* fixing: Reimplement https://github.com/Start9Labs/start-os/pull/2391 by @Blu-J in https://github.com/Start9Labs/start-os/pull/2437
* cancel old request and base interval on tor by @MattDHill in https://github.com/Start9Labs/start-os/pull/2439
* prevent stack overflow on shutdown by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2440
* set governor to &quot;performance&quot; if available by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2438
* Update LICENSE by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2441
* allow UNSET country code for wifi by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2442
* enable trimming in luks by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2443
* Fix/patch fe by @MattDHill in https://github.com/Start9Labs/start-os/pull/2444
* Use the correct OS name by @k0gen in https://github.com/Start9Labs/start-os/pull/2445
* fix health check error by @MattDHill in https://github.com/Start9Labs/start-os/pull/2447
* fix cert name and show ca wiz on http ip by @MattDHill in https://github.com/Start9Labs/start-os/pull/2448
* fix cors middleware by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2450
* fix: Add in logging for the podman in the system logs by @Blu-J in https://github.com/Start9Labs/start-os/pull/2451
* update docs links by @elvece in https://github.com/Start9Labs/start-os/pull/2452
* add firmware updater by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2455
* add apollo review badge and update badges with icons by @elvece in https://github.com/Start9Labs/start-os/pull/2456
* only use first sensor of each group for temp reporting by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2457
* stop while starting or restarting by @MattDHill in https://github.com/Start9Labs/start-os/pull/2460
* fix some causes of start wonkiness on update by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2458
* Chore: remove an arc mutex that wasn't neccessary by @Blu-J in https://github.com/Start9Labs/start-os/pull/2462
* Feature/simple syncdb by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2464
* add tokio-console if `unstable` by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2461
* Update/misc fe by @elvece in https://github.com/Start9Labs/start-os/pull/2463
* Fix/quarantine deno by @Blu-J in https://github.com/Start9Labs/start-os/pull/2466
* chore: update dependencies by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2465
* consolidate and streamline build by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2469
* chore: Cleaning up the stream to a regular stream by @Blu-J in https://github.com/Start9Labs/start-os/pull/2468
* enable zram by default by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2470
* Bugfix/output timeout by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2471
* fix raspi build by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2472
* Bugfix/argon2 mem usage by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2474
* allow tab completion on final setup stage in kiosk mode by @elvece in https://github.com/Start9Labs/start-os/pull/2473
* diplay restoring when restoring by @MattDHill in https://github.com/Start9Labs/start-os/pull/2476
* closes #2454 by @MattDHill in https://github.com/Start9Labs/start-os/pull/2478
* Delete Cargo.lock by @AaronDewes in https://github.com/Start9Labs/start-os/pull/2477
* Fix/ntp by @MattDHill in https://github.com/Start9Labs/start-os/pull/2479
* use correct sigterm_timeout by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2480
* add 1 day margin on start time by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2481
* use old secret key derivation function by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2482
* actually enable zram during migration by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2483
* cleanup network keys on uninstall by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2484
* fix: Logging in deno to filter out the info by @Blu-J in https://github.com/Start9Labs/start-os/pull/2487
* continuous deployment by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2485
* Updated motd with new logo by @k0gen in https://github.com/Start9Labs/start-os/pull/2488
* use existing dependency icon if available by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2489
* rework ca-wiz and add icons to menu for warnings by @MattDHill in https://github.com/Start9Labs/start-os/pull/2486
* use low mem for all argon2 configs by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2491
* use keys to complete setup and redesign final buttons by @MattDHill in https://github.com/Start9Labs/start-os/pull/2492
* fix time display bug and type metrics by @MattDHill in https://github.com/Start9Labs/start-os/pull/2490
* change grub os selection to say &quot;StartOS&quot; by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2493
* better UX for http/https switching by @MattDHill in https://github.com/Start9Labs/start-os/pull/2494
* fix js backups by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2496
* mute errors due to failed incoming network connections by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2497
* Fix/setup by @elvece in https://github.com/Start9Labs/start-os/pull/2495
* fix docs links by @elvece in https://github.com/Start9Labs/start-os/pull/2498
* improve Invoke api by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2499
* do not wait for input on btrfs repair by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2500
* disable CoW for journal by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2501
* Feature/server status restarting by @MattDHill in https://github.com/Start9Labs/start-os/pull/2503

## New Contributors
* @jadijadi made their first contribution in https://github.com/Start9Labs/start-os/pull/2394
* @AaronDewes made their first contribution in https://github.com/Start9Labs/start-os/pull/2477

**Full Changelog**: https://github.com/Start9Labs/start-os/compare/v0.3.4.4...v0.3.5

## Checksums
BLAKE-3
```
3f330020dc3e0ca8ff0c819630f0364f8a1f1f7e2492fee913aba21aff8565df  startos-0.3.5-871f78b_aarch64.iso
d06d99cae87e36236bcb62f0fe3ee400be8c369ef3bfb555c6cd282dcd152dcd  startos-0.3.5-871f78b_aarch64-nonfree.iso
6cb626c802c8e0903bb0c1789036c22f20ada42c69853531f3ad629f58f864f9  startos-0.3.5-871f78b_raspberrypi.img.gz
3ca3a87c93eef1ba8399f3b1014c75d1a8f0889aef0b76a11e054b01febca9d0  startos-0.3.5-871f78b_x86_64.iso
19d4a6c8b96b12efe5009e2da9bf3513c2d7802d1f09af2287e736bdc62a0a00  startos-0.3.5-871f78b_x86_64-nonfree.iso
```
SHA-256
```
4bcdabe1421881873d00376f7e1d2efc197af2342854e4c8beba0911f12afcf9  startos-0.3.5-871f78b_aarch64.iso
3761da1e2b3d1bc3d68c48bd7bf985d1d333c6989fb11f9c0f4960a62607604d  startos-0.3.5-871f78b_aarch64-nonfree.iso
00d1dc0c05f7b304a802d85505536a372efd0649160081d5daf963914e7cf38e  startos-0.3.5-871f78b_raspberrypi.img.gz
d27f88f31e0d8d183b181f2629794d423fb777d9edfaefe406f8b3e478edab57  startos-0.3.5-871f78b_x86_64.iso
ed9b774d9ceae32e1ff8e765985d21fd05a83ca5e0caab9a245194ba4207da3d  startos-0.3.5-871f78b_x86_64-nonfree.iso
```</summary>
    <title>Start9Labs/start-os: v0.3.5</title>
    <updated>2023-11-08T20:35:06Z</updated>
    <dc:date>2023-11-08T20:35:06Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.12</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.12"/>
    <summary>ℹ️ **Migration for existing legacy wallets (v1.x)**

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.11

- Gracefully handle Android keystore failures at startup, and fall back to manual seed input to unlock the wallet.
See 945b640 for details.
- Fixed camera staying online after leaving the scan view. Thanks @kotasjan for the help!
See issue #442 for details.
- Several fixes and improvements. Thanks @MasterixCZ for the Czech localisation fixes.

**Full changelog**:
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.11...android-v2.0.12
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.10...v1.5.11

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.12</title>
    <updated>2023-11-06T10:08:47Z</updated>
    <dc:date>2023-11-06T10:08:47Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.10.1</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.10.1"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#0101-nov-01-2023</summary>
    <title>romanz/electrs: v0.10.1</title>
    <updated>2023-11-01T20:21:16Z</updated>
    <dc:date>2023-11-01T20:21:16Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin/bitcoin/releases/tag/v24.2</id>
    <link href="https://github.com/bitcoin/bitcoin/releases/tag/v24.2"/>
    <summary>Bitcoin Core version 24.2 is now available from:

https://bitcoincore.org/bin/bitcoin-core-24.2/

For the release notes please see the git repository:

https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-24.2.md

Do not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.</summary>
    <title>bitcoin/bitcoin: v24.2</title>
    <updated>2023-11-01T09:57:16Z</updated>
    <dc:date>2023-11-01T09:57:16Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.5.6</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.5.6"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.5.6</title>
    <updated>2023-10-25T15:53:21Z</updated>
    <dc:date>2023-10-25T15:53:21Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.10</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.10"/>
    <summary>* FIX: Check if theres a string before triggering the clipboard alert 
* FIX: The scrolling behavior after deleting a wallet was not natural. Let the component figure it out
* FIX: iOS version is showing wallets' balance on Home Screen even when option is disabled #5500 
* FIX: Bug: CNY price is wrong #5705 
* FIX: View controller-based status bar appearance 
* FIX: Notifications Permission issues on newer Android APIs
* REF: Privacy screen </summary>
    <title>BlueWallet/BlueWallet: v6.4.10</title>
    <updated>2023-10-25T15:33:03Z</updated>
    <dc:date>2023-10-25T15:33:03Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.118</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.118"/>
    <summary># 0.0.118 - Oct 23, 2023 - &quot;Just the Twelve Sinks&quot;

## API Updates
 * BOLT12 sending and receiving is now supported as an alpha feature. You may
   run into unexpected issues and will need to have a direct connection with
   the offer's blinded path introduction points as messages are not yet routed.
   We are seeking feedback from early testers (#2578, #2039).
 * `ConfirmationTarget` has been rewritten to provide information about the
   specific use LDK needs the feerate estimate for, rather than the generic
   low-, medium-, and high-priority estimates. This allows LDK users to more
   accurately target their feerate estimates (#2660). For those wishing to
   retain their existing behavior, see the table below for conversion.
 * `ChainHash` is now used in place of `BlockHash` where it represents the
   genesis block (#2662).
 * `lightning-invoice` payment utilities now take a `Deref` to
   `AChannelManager` (#2652).
 * `peel_onion` is provided to statelessly decode an `OnionMessage` (#2599).
 * `ToSocketAddrs` + `Display` are now impl'd for `SocketAddress` (#2636, #2670)
 * `Display` is now implemented for `OutPoint` (#2649).
 * `Features::from_be_bytes` is now provided (#2640).

For those moving to the new `ConfirmationTarget`, the new variants in terms of
the old mempool/low/medium/high priorities are as follows:
 * `OnChainSweep` = `HighPriority`
 * `MaxAllowedNonAnchorChannelRemoteFee` = `max(25 * 250, HighPriority * 10)`
 * `MinAllowedAnchorChannelRemoteFee` = `MempoolMinimum`
 * `MinAllowedNonAnchorChannelRemoteFee` = `Background - 250`
 * `AnchorChannelFee` = `Background`
 * `NonAnchorChannelFee` = `Normal`
 * `ChannelCloseMinimum` = `Background`

## Bug Fixes
 * Calling `ChannelManager::close_channel[_with_feerate_and_script]` on a
   channel which did not exist would immediately hang holding several key
   `ChannelManager`-internal locks (#2657).
 * Channel information updates received from a failing HTLC are no longer
   applied to our `NetworkGraph`. This prevents a node which we attempted to
   route a payment through from being able to learn the sender of the payment.
   In some rare cases, this may result in marginally reduced payment success
   rates (#2666).
 * Anchor outputs are now properly considered when calculating the amount
   available to send in HTLCs. This can prevent force-closes in anchor channels
   when sending payments which overflow the available balance (#2674).
 * A peer that sends an `update_fulfill_htlc` message for a forwarded HTLC,
   then reconnects prior to sending a `commitment_signed` (thus retransmitting
   their `update_fulfill_htlc`) may result in the channel stalling and being
   unable to make progress (#2661).
 * In exceedingly rare circumstances, messages intended to be sent to a peer
   prior to reconnection can be sent after reconnection. This could result in
   undefined channel state and force-closes (#2663).

## Backwards Compatibility

 * Creating a blinded path to receive a payment then downgrading to LDK prior to
   0.0.117 may result in failure to receive the payment (#2413).
 * Calling `ChannelManager::pay_for_offer` or
   `ChannelManager::create_refund_builder` may prevent downgrading to LDK prior
   to 0.0.118 until the payment times out and has been removed (#2039).

## Node Compatibility
 * LDK now sends a bogus `channel_reestablish` message to peers when they ask to
   resume an unknown channel. This should cause LND nodes to force-close and
   broadcast the latest channel state to the chain. In order to trigger this
   when we wish to force-close a channel, LDK now disconnects immediately after
   sending a channel-closing `error` message. This should result in cooperative
   peers also working to confirm the latest commitment transaction when we wish
   to force-close (#2658).

## Security
0.0.118 expands mitigations against transaction cycling attacks to non-anchor
channels, though note that no mitigations which exist today are considered robust
to prevent the class of attacks.
 * In order to mitigate against transaction cycling attacks, non-anchor HTLC
   transactions are now properly re-signed before broadcasting (#2667).

In total, this release features 61 files changed, 3470 insertions, 1503
deletions in 85 commits from 12 authors, in alphabetical order:
 * Antonio Yang
 * Elias Rohrer
 * Evan Feenstra
 * Fedeparma74
 * Gursharan Singh
 * Jeffrey Czyz
 * Matt Corallo
 * Sergi Delgado Segura
 * Vladimir Fomene
 * Wilmer Paulino
 * benthecarman
 * slanesuke</summary>
    <title>lightningdevkit/rust-lightning: v0.0.118</title>
    <updated>2023-10-24T01:34:52Z</updated>
    <dc:date>2023-10-24T01:34:52Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.7.0</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.7.0"/>
    <summary>## [0.7.0](https://github.com/unchained-capital/caravan/compare/caravan-v0.6.3...caravan-v0.7.0) (2023-10-23)


### Features

* **hermit:** hermit PSBT signing for pre-product key recovery ([#308](https://github.com/unchained-capital/caravan/issues/308)) ([04ca0ce](https://github.com/unchained-capital/caravan/commit/04ca0ce3ffa2589a00104ecd18cf11768212f470))</summary>
    <title>unchained-capital/caravan: caravan-v0.7.0</title>
    <updated>2023-10-23T21:23:28Z</updated>
    <dc:date>2023-10-23T21:23:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.5.5</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.5.5"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.5.5</title>
    <updated>2023-10-20T15:13:40Z</updated>
    <dc:date>2023-10-20T15:13:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin/bitcoin/releases/tag/v25.1</id>
    <link href="https://github.com/bitcoin/bitcoin/releases/tag/v25.1"/>
    <summary>Bitcoin Core version 25.1 is now available from:

https://bitcoincore.org/bin/bitcoin-core-25.1/

For the release notes please see the git repository:

https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-25.1.md

Do not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.</summary>
    <title>bitcoin/bitcoin: v25.1</title>
    <updated>2023-10-19T14:46:01Z</updated>
    <dc:date>2023-10-19T14:46:01Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.3</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.3"/>
    <summary>## [0.6.3](https://github.com/unchained-capital/caravan/compare/caravan-v0.6.2...caravan-v0.6.3) (2023-10-18)


### Bug Fixes

* **deps:** bump @babel/traverse from 7.21.3 to 7.23.2 ([#344](https://github.com/unchained-capital/caravan/issues/344)) ([5f231e0](https://github.com/unchained-capital/caravan/commit/5f231e03042006ecc1f72043f42bb6c7266dbecd))</summary>
    <title>unchained-capital/caravan: caravan-v0.6.3</title>
    <updated>2023-10-18T17:05:12Z</updated>
    <dc:date>2023-10-18T17:05:12Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.7</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.7"/>
    <summary>### New feature

* Pull Payment: Add QR scanner for destination and infer payment method (#5358) @dennisreimann
* Greenfield: Allow deleting user by email (#5372) @Kukks
* Greenfield: Add missing checkout (V2) settings (#5406, #5403) @dennisreimann

### Bug fixes

* The payments report wasn't properly accounting for Liquid assets and some altcoins (#5388 #5371) @Kukks
* Switching currencies in the checkout page may have inversed `Amount Due` and `Recommended Fee` (#5390) @dennisreimann
* Reporting now properly formats decimals (#5363) @dennisreimann
* API docs: Fix several errors and warnings (#5380) @ai-oleynikov
* Fix Poloniex and Ripio rate provider (#5365) @Kukks
* Removed unused Argoneum and Exchangerate.host rate provider (#5365) @Kukks
* Fix: If a store was accepting USDt, invoices wouldn't be processed properly. @Kukks
* Email rules, Recipients required even if &quot;send mail to buyer&quot; (#5345 #5357) @dennisreimann
* Fix: BTCPayServer.HostedServices.BitpayIPNSender fail to send notifications on some locale (Fix #5361) @AdilElFarissi

### Improvements

* Invoice: Improve payment details page (#5362) @dennisreimann
* Crowdfund: Improve no perks case (#5378 #5376) @dennisreimann
* Switched recommended exchanges for COP and UGX to yadio @Kukks
* Forms: Make zip code a required field in predefined address form (#5405) @dennisreimann
* Adjust swagger doc to latest change in Greenfield API @ndeet</summary>
    <title>btcpayserver/btcpayserver: v1.11.7</title>
    <updated>2023-10-18T11:08:00Z</updated>
    <dc:date>2023-10-18T11:08:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.9</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.9"/>
    <summary>* ADD: airdrop ms cosigner (#5682) 

* FIX: Only make call if watch is reachable 
* FIX: better tx list update when transactions actually changed (rel #5615) 
* FIX: pull-to-refresh while inside the wallet doesnt update the tx list (closes #5615) 
* FIX: incorrect fees occasionally (for some electrum servers); better fee estimation 
* FIX: unable to delete faulty wallet (rel #5661) 
* FIX: Settings was not fully visible on newer iPhone models 
* FIX: round circles on Multisig screen 
* FIX: stateURL default value 
* FIX: import single-sig wallet descriptor (closes #5637) 

* REF: Camera Authorization Request</summary>
    <title>BlueWallet/BlueWallet: v6.4.9</title>
    <updated>2023-10-17T18:41:35Z</updated>
    <dc:date>2023-10-17T18:41:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.11</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.11"/>
    <summary>### Migration for existing legacy wallets (v1.x)

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.10

- Display the grace-period for pending deposits in the swap-in screen. See #444 for details
- Fix invalid intents from apps trying to open Phoenix to send a payment. 
- Fix an issue with the reserve that could trigger force-close, see https://github.com/ACINQ/lightning-kmp/commit/6e4bc39ea134e8c888e571a27340c429767ca598

**Full changelog**:
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.10...android-v2.0.11
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.9...v1.5.10

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.11</title>
    <updated>2023-10-17T15:39:11Z</updated>
    <dc:date>2023-10-17T15:39:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.11.1</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.11.1"/>
    <summary>This bugfix release fixes several issues with `0.11.0`

## Warning
Due to a mistake on the last merge into main, we had to revert some commits on it.
If you run into issues pulling from `main`, reset your local main branch like this `git reset origin/main --hard`

## What's Changed

* drop version from readme by @prusnak in https://github.com/lnbits/lnbits/pull/2001
* update: to 0.11.1 by @dni in https://github.com/lnbits/lnbits/pull/1988
* hotfix: add environs backwards compatibility by @dni in https://github.com/lnbits/lnbits/pull/2007
* fix: use correct field from response in node management by @jackstar12 in https://github.com/lnbits/lnbits/pull/1999
* use current version of logo for manifest icon by @prusnak in https://github.com/lnbits/lnbits/pull/2010
* dependency cleanup by @prusnak in https://github.com/lnbits/lnbits/pull/2011
* [CHORE] cleanup nodemanagement vue components by @dni in https://github.com/lnbits/lnbits/pull/1986
* remove comma after version by @daywalker90 in https://github.com/lnbits/lnbits/pull/2016
* [CHORE] cleanup ip block middleware workaround for older fastapi by @dni in https://github.com/lnbits/lnbits/pull/1981
* feat: wallet name in payments export by @jackstar12 in https://github.com/lnbits/lnbits/pull/1991
* fix: make bolt11 optional in `NodePayment` by @jackstar12 in https://github.com/lnbits/lnbits/pull/2005
* bug: check prettier workflows by @dni in https://github.com/lnbits/lnbits/pull/2021
* Add a customizable logo to QR by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1955
* feat: improve on admin ui funding tab by @dni in https://github.com/lnbits/lnbits/pull/1989
* Refactor: Calculate invoice expiry outside of the crud by @callebtc in https://github.com/lnbits/lnbits/pull/1849
* add possibility to turn off new registrations  by @prusnak in https://github.com/lnbits/lnbits/pull/2017
* Hotfix small UI bugs by @talvasconcelos in https://github.com/lnbits/lnbits/pull/2024
* [feat] add `lnbits-dynamic-fields` component by @motorina0 in https://github.com/lnbits/lnbits/pull/2018
* feat: add file logging by @dni in https://github.com/lnbits/lnbits/pull/2023
* use PNG logo for QR code instead of SVG logo by @prusnak in https://github.com/lnbits/lnbits/pull/2028
* downgrade rpds-py to 0.10.3 which is not broken on nix by @prusnak in https://github.com/lnbits/lnbits/pull/2027
* feat: improve im workflows runs by @dni in https://github.com/lnbits/lnbits/pull/2036
* feat: add useful query helpers for insert and update by @dni in https://github.com/lnbits/lnbits/pull/2020
* run optipng on logos + remove old logo from docs by @prusnak in https://github.com/lnbits/lnbits/pull/2025
* add python-crontab for scheduler extension by @bitkarrot in https://github.com/lnbits/lnbits/pull/2032
* add &quot;nix build&quot; to GitHub CI by @prusnak in https://github.com/lnbits/lnbits/pull/2026
* fix: explicitly specify the DB name when migrating by @motorina0 in https://github.com/lnbits/lnbits/pull/2039
* fix: closed channels affecting the stats (#1998) by @dni in https://github.com/lnbits/lnbits/pull/2040
* Update installation.md (#1997) by @dni in https://github.com/lnbits/lnbits/pull/2041</summary>
    <title>lnbits/lnbits: 0.11.1</title>
    <updated>2023-10-17T11:50:32Z</updated>
    <dc:date>2023-10-17T11:50:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rust-bitcoin/rust-bitcoin/releases/tag/bitcoin-0.30.2</id>
    <link href="https://github.com/rust-bitcoin/rust-bitcoin/releases/tag/bitcoin-0.30.2"/>
    <summary>## What's Changed
* Replace time with std::time by @serprex in https://github.com/rust-bitcoin/rust-bitcoin/pull/14
* Add GetAddr message by @rotwatsb in https://github.com/rust-bitcoin/rust-bitcoin/pull/18
* Add Cargo.lock to gitignore by @chritchens in https://github.com/rust-bitcoin/rust-bitcoin/pull/22
* Sanity checks for vector length by @daniellockyer in https://github.com/rust-bitcoin/rust-bitcoin/pull/25
* Fix vulnerabilities which found by `cargo audit`. by @alekseysidorov in https://github.com/rust-bitcoin/rust-bitcoin/pull/29
* script: add `to_p2wsh()` and `is_p2swsh()` functions by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/32
* util: add Sha256dEncoder to allow streaming data into a hash by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/33
* transaction: add txid() method by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/34
* add constants for OP_CLTV and OP_CSV by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/35
* Fix argument to copy_nonoverlapping in internal_macros by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/45
* remove all use of mem::uninitialized and mem::copy_nonoverlapping by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/46
* util: add `bip143` module to create BIP143 signature hashes by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/38
* fixing debug output for Uint256 and Uint128 by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/40
* add low_u64 to Uint256 and Uit128 types by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/42
* Add difficulty calculation by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/44
* minimal implementation of alert message by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/41
* Remove some dependencies; bump major version number by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/47
* [Trivial] add IntelliJ IDEA files to .gitignore by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/48
* [Trivial] RawNetworkMessage::command should be public. by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/49
* [Trivial] add get_best_tip_height to blokchain by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/50
* [Trivial] is_on_main_chain is a very useful function upstream, make it public by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/51
* Moved blockchain and patricia_tree to rust-memblocks by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/56
* remove script interpreter by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/57
* Fix a couple README links by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/59
* Optional feature gives access to Bitcoin Core's own script validator by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/58
* Add bech32 support by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/60
* Implemented segwit address types. Moved PrivKey into its own module. by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/62
* Rustc 1.14 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/65
* Update fuzz target boilerplate to match rust-lightning by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/63
* create Address message with SocketAddr, get SocketAddr from Address m… by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/64
* bump to 0.12 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/66
* Move witness inside of TxIn. by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/68
* Add a Transaction.get_weight() method, check it in fuzzing by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/69
* Only provide the required TxIn to bip143 sighash_all by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/70
* Correct consensus verify args, fix tests to catch error in travis by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/71
* block: fix a small typo in comment by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/74
* Update documentation URL in Cargo.toml by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/75
* add fuzzer output to gitignore; remove ancient secp build instructions from Travis by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/73
* Bump version to 0.13 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/77
* Added `impl Display` to `construct_uint` macro by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/82
* Implement `FromStr` for Network constant by @alekseysidorov in https://github.com/rust-bitcoin/rust-bitcoin/pull/80
* Added generation of `data` method in `impl_array_newtype` macro by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/81
* Hotfix: replace serde error with the io error. by @alekseysidorov in https://github.com/rust-bitcoin/rust-bitcoin/pull/85
* Remove cargo usage from README by @petertodd in https://github.com/rust-bitcoin/rust-bitcoin/pull/87
* Fix multiplication for uint256 by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/88
* Expose merkleroot(Vec&lt;Sha256dHash&gt;) publicly by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/90
* Check in fuzz inputs for all current targets by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/91
* add witness inv types by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/89
* Added regtest network by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/84
* add is_coin_base by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/83
* bump version to 0.13.1 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/92
* Fix 2 small typos in comments by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/97
* Method for getting compact from uint256 by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/86
* Reverts #84, bumps Cargo minor version number, and re-adds #84 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/99
* Added module with consensus parameters by @popzxc in https://github.com/rust-bitcoin/rust-bitcoin/pull/93
* check if output is OP_RETURN by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/101
* Use bech32 v0.8.0 by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/100
* Fix to_v0_p2wsh docs by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/109
* [code hygiene] remove deprecated rustc-serialize by @savil in https://github.com/rust-bitcoin/rust-bitcoin/pull/107
* Clarify to_v0_p2wsh docs a bit further by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/112
* Add conversion between u32 and ChildNumber, fix docs by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/122
* Refactor and add more documentation for the `Network` type. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/121
* Simple doc fix for `from_secret_key` by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/120
* Fix modules documentation title. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/116
* Regtest bech32 address support by @D4nte in https://github.com/rust-bitcoin/rust-bitcoin/pull/110
* Ready for Review: Improve consistency for bip32::ChildNumber by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/126
* Implement `Display` trait instead of implementing `ToString` directly. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/118
* Hidde `From&lt;T&gt;` implementations for error types in Rustdoc. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/127
* Remove `try!` macro usage and use the `?` operator instead. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/119
* Ready for Review: Add derive_* methods to Extended*Key by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/129
* Ready for Review: Make deserialize error if input bytes not consumed by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/132
* Remove variable shadowing in listener.rs by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/133
* Remove unused &quot;bitcoinconsenus&quot; feature. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/128
* Added Ord and Hash implementations for the Address type by @alekseysidorov in https://github.com/rust-bitcoin/rust-bitcoin/pull/95
* Fix compilation warning when comparing usize and u64 on 32-bit arch by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/138
* update to secp256k1 0.10.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/113
* Update to serde 1.0 by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/125
* Rename `TxOutRef` to `OutPoint` and use it in `TxIn`. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/139
* Use `as_`,`to_`,`into_` conventions for array types. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/143
* trivial: Use `str::starts_with` method to check bech32 address prefixes. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/144
* Implement `Display` instead of `ToString` for `Address` and `PrivKey`. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/141
* Fix Error type for SimpleDecoder and SimpleEncoder by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/137
* Implement `FromStr` for `UDecimal`/`Decimal`. by @jeandudey in https://github.com/rust-bitcoin/rust-bitcoin/pull/142
* update rust-secp dependency to 0.11 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/146
* script: make Instructions iterator enforce minimal pushes by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/136
* bump version to 0.14.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/147
* pin hex to 0.3.2 rather than a git commit by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/148
* Various serialization fixes by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/151
* impl PartialOrd, Ord for Script by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/152
* `pub use` a ton of stuff at the top level by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/157
* increase version to 0.14.1 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/158
* Update fuzz harness stuff by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/166
* Implement serde serialiation for Address by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/159
* bump version to 0.14.2 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/167
* Add FromStr for Sha256dHash by @thomaseizinger in https://github.com/rust-bitcoin/rust-bitcoin/pull/168
* Ready for Review: Clean up `network::encodable` and `network::serialize` by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/156
* added p2wkh, p2sh-p2wkh tests for bip143 module by @evgeniy-scherbina in https://github.com/rust-bitcoin/rust-bitcoin/pull/169
* Added example for creating an address from a public key by @jeffbarg in https://github.com/rust-bitcoin/rust-bitcoin/pull/174
* Implement FromStr for OutPoint by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/177
* Add explicit WIF methods for Privkey by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/178
* Export network::constants::Network by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/181
* transaction: make 0-input de/serialization always use Segwit  by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/153
* Increase version to 0.15 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/188
* Detect compressed p2pk in script.is_p2pk() by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/189
* update version to 0.15.1 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/190
* add fuzzer for transaction::OutPoint by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/179
* Avoid heap usage when encoding to base58 by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/191
* upgrade byteorder to 1.2 by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/199
* Move fuzzing code out of utils by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/196
* Safe opcodes 1.14.0 by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/198
* Fix comment on transaction version by @ariard in https://github.com/rust-bitcoin/rust-bitcoin/pull/205
* Internalize unnecessarily exported macros by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/211
* Bump secp to 0.12 by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/213
* Use more performant hex_bytes function by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/208
* bump version to 0.16 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/214
* Bump rustc version to 1.22.0 by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/210
* It is annoying to have a difference between debug and regular print for Sha256dHash by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/223
* Fix typos by @rex4539 in https://github.com/rust-bitcoin/rust-bitcoin/pull/224
* Run cargo bench on rustc nightly in travis by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/212
* Integrate bitcoin_hashes, remove rust-crypto and fuzz_util by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/215
* Fix typos and clarify some comment in blockdata, block, address by @ariard in https://github.com/rust-bitcoin/rust-bitcoin/pull/230
* Remove Address::p2pk by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/222
* add BIP157 (Client Side Block Filtering) Messages by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/225
* Ready for Review: Introduce util::key and deprecate util::privkey by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/183
* Extract travis testing into locally-runnable script by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/227
* Extract the Script assembly creator from fmt::Debug by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/203
* Add contributing section to README by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/234
* bip32: Add DerivationPath type by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/233
* Merkle root calculation and witness commitment check for Block by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/218
* Forbid unsafe code by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/237
* Remove extraneous clones in consensus::params by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/235
* Remove unused Option en/decoding by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/236
* Better RawNewtorkMessage deserealization from IO stream by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/231
* Replace `secp256k1` keys with `util::key` keys in BIP32 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/238
* BIP174 (de)serialization support by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/103
* bump version to 0.17.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/239
* key: implement ToString and FromStr for PublicKey by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/241
* bump version to 0.17.1 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/242
* Bump bitcoin-bech32 dependency by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/244
* util::key: Provide to_bytes() methods for key types by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/243
* util::key add serde de/serialization by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/246
* contracthash: use `PublicKey` and `PrivateKey` types; minor cleanups by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/247
* bump version to 0.18 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/248
* Fix nit in CHANGELOG.md by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/256
* bip32: Add increment method to DerivationPath and ChildNumber by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/257
* Drop LoneHeaders and just use BlockHeader by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/260
* Implement util::misc::signed_msg_hash() by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/258
* Speed up consensus::[d]encode significantly by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/264
* Add Amount and SignedAmount by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/270
* Fix DoS in RawNetworkMessage Deserialization by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/272
* Rename BlockHeader::spv_validate to validate_pow by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/273
* Remove confusing mentions of SPV by @jonasnick in https://github.com/rust-bitcoin/rust-bitcoin/pull/276
* Rename OP_NOP2 and OP_NOP3 to OP_CLTV and OP_CSV by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/282
* Add OutPoint::new() for one-liner construction by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/285
* Remove Decimal and replace strason with serde_json by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/250
* Slightly update README by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/274
* Remove unused rand dependency by @jonasnick in https://github.com/rust-bitcoin/rust-bitcoin/pull/277
* script: give `Builder` ability to verify-ify opcodes by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/286
* Add a MerkleBlock construction by @erasmospunk in https://github.com/rust-bitcoin/rust-bitcoin/pull/268
* forbid unsafe by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/295
* clean up encoding/decoding traits by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/265
* bip143: Rename witness_script to script_code by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/293
* Add client side block filter (BIP158) by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/281
* Generate codecov.io reports by @dongcarl in https://github.com/rust-bitcoin/rust-bitcoin/pull/297
* Add special human-readable serde for OutPoint and most bip32 types by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/271
* Test negative numbers by @Aleru in https://github.com/rust-bitcoin/rust-bitcoin/pull/304
* Fix typos by @practicalswift in https://github.com/rust-bitcoin/rust-bitcoin/pull/303
* Remove tempfile as a dependency by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/307
* Reduce blockfilter memory by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/302
* use BTreeMap instead of HashMap to always serialize the same by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/310
* Remove accidentally added file by @real-or-random in https://github.com/rust-bitcoin/rust-bitcoin/pull/312
* Check that the amount precision isn't more than the size of the amount by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/309
* Refactor Address by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/255
* Export some dependencies by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/289
* Make secp256k1/rand a dev-dependency by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/315
* Release v0.19.0 by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/314
* Pin serde and re-export bech32 by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/316
* Remove serde-derive as a dependency by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/317
* use lambda instead of a hash map to find spent outputs by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/319
* upgrade to secp256k1 0.15 and bitcoinconsensus 0.17 by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/298
* [TRIVIAL] enable serde serialization for block and blockheader by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/321
* Fix incorrect documentation for is_p2pk(...) by @practicalswift in https://github.com/rust-bitcoin/rust-bitcoin/pull/331
* Improvements to `StreamReader` by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/318
* Add reject message by @tamasblummer in https://github.com/rust-bitcoin/rust-bitcoin/pull/323
* bump version to 0.21.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/334
* Drop message decode max length to 4_000_000 by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/340
* Adding MSRV to the readme by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/347
* Expose secp256k1 features by @thomaseizinger in https://github.com/rust-bitcoin/rust-bitcoin/pull/344
* Nit in VersionMessage documentation by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/343
* Drop hex and byteorder (non-test) deps (and disable useless lints) by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/337
* Add default trait implementation for TxIn by @ccdle12 in https://github.com/rust-bitcoin/rust-bitcoin/pull/341
* Add ServiceFlags type by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/345
* Implement std::hash::Hash for Inventory by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/361
* Overloaded encode error by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/329
* Feature/issue 350 by @kiminuo in https://github.com/rust-bitcoin/rust-bitcoin/pull/360
* Various optimizations of the network code by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/357
* Remove two old TODO comments [nit] by @kiminuo in https://github.com/rust-bitcoin/rust-bitcoin/pull/363
* Convert numeric representation of ServiceFlags to bitwise OR of the f… by @kiminuo in https://github.com/rust-bitcoin/rust-bitcoin/pull/364
* bip157: Fix typo on getcfcheckpt command string by @5o50 in https://github.com/rust-bitcoin/rust-bitcoin/pull/367
* bip157: Add NODE_COMPACT_FILTERS Service Flag by @5o50 in https://github.com/rust-bitcoin/rust-bitcoin/pull/368
* Add a full round test for RawNetworkMessage by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/370
* Hash new types as specified in #284 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/349
* Release v0.22.0 by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/366
* Improve fmt::Debug for network/Address by @kiminuo in https://github.com/rust-bitcoin/rust-bitcoin/pull/379
* Release v0.23.0 by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/380
* Remove the BitcoinHash trait by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/385
* Add, use WITNESS_SCALE_FACTOR constant by @instagibbs in https://github.com/rust-bitcoin/rust-bitcoin/pull/392
* Add bip143 sighash support for other flags by @instagibbs in https://github.com/rust-bitcoin/rust-bitcoin/pull/390
* Yet another MSRV breaking change by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/398
* Remove the hex dependency by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/381
* Improving `construct_uint` macro by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/395
* readme: Add links to CHANGELOG.md and LICENSE by @wbnns in https://github.com/rust-bitcoin/rust-bitcoin/pull/378
* Add tests based on mutagen outputs by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/399
* Add Transaction::get_size() by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/416
* Added a simple handshake example. by @tnull in https://github.com/rust-bitcoin/rust-bitcoin/pull/411
* Export the util::amount::Denomination type by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/412
* Cargo clippy changes by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/308
* Add Block::get_size() and Block::get_weight() by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/417
* Fix serde struct macros deserialization impls by @canndrew in https://github.com/rust-bitcoin/rust-bitcoin/pull/375
* Fix: Change WitnessTransaction inv type to use txid by @jrawsthorne in https://github.com/rust-bitcoin/rust-bitcoin/pull/424
* Remove some needless allocations by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/422
* Add fuzz target comparing native u128 to our Uint type by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/425
* Deprecate Error::description by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/419
* Allow to construct MerkleBlock using the header and txids by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/415
* Fix ruy rust 1.22 inccompatibility by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/431
* Remove duplicate code by @twchn in https://github.com/rust-bitcoin/rust-bitcoin/pull/432
* Add `BlockHeader::u256_from_compact_target` function by @cloudhead in https://github.com/rust-bitcoin/rust-bitcoin/pull/429
* Modulo division operation for Uint128 &amp; Uint256 types by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/435
* Derive more traits to use for bip32 Types by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/443
* feefilter message by @jrawsthorne in https://github.com/rust-bitcoin/rust-bitcoin/pull/448
* Remove empty code block by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/452
* Use the remainder from div_rem instead of recomputing it by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/445
* Hygiene/single code style for all existing macros by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/403
* Add `Clone` instance to `RawNetworkMessage` by @cloudhead in https://github.com/rust-bitcoin/rust-bitcoin/pull/463
* Improve the Instructions iterator for scripts by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/397
* Don't allow uncompressed pks in witness addresses by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/428
* Big integers (Uint*) from byte slice array with `from_be_bytes` by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/436
* Deprecate the util::contracthash module by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/451
* Transaction and header version is signed int by @braydonf in https://github.com/rust-bitcoin/rust-bitcoin/pull/458
* Expose the witnesses of the tx being hashed in SigHashCache by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/461
* Set Params::pow_limit to an attainable value not a theoretical one by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/464
* Increase version to 0.24 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/475
* bump version to 0.25, MSRV to 1.29 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/476
* Refactoring script generating functions into a single place by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/387
* Added hash Preimages to psbt by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/465
* Revert &quot;Added hash Preimages to psbt&quot; by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/477
* Expose features of secp256k1 by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/486
* Hash functions for public keys and scripts by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/388
* README: Fix typo in MSRV section by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/489
* Add Block::coinbase and Block::bip34_block_height (BIP-34) by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/444
* Bip32 documentation fix by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/488
* Allow easy concatenation of bip32 derivation paths by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/459
* Introducing `bip32::KeySource`: wrapper for `(Fingerprint, DerivationPath)` by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/480
* Add benchmarks by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/418
* Simplifying macros by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/356
* Small modernization after MSRV bump by @elichai in https://github.com/rust-bitcoin/rust-bitcoin/pull/482
* fix bench fn names by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/492
* Expose serialized data for transaction signatures by @ipaljak-tbtl in https://github.com/rust-bitcoin/rust-bitcoin/pull/485
* Revert the sighash method signatures by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/493
* BlockFilter `Clone`, `Debug` etc. derives by @cloudhead in https://github.com/rust-bitcoin/rust-bitcoin/pull/500
* PSBT serde implementation by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/497
* Add MessageSignature type for dealing with signed messages by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/413
* bump version to 0.25.1 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/491
* Add an example for bip32 key derivation by @rikitau in https://github.com/rust-bitcoin/rust-bitcoin/pull/502
* Avoid a few assertions that shouldn't be necessary by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/506
* add signet support by @kallewoof in https://github.com/rust-bitcoin/rust-bitcoin/pull/291
* BIP339: Add wtxidrelay message and WTx inv type by @jrawsthorne in https://github.com/rust-bitcoin/rust-bitcoin/pull/446
* BIP155: AddrV2 by @jrawsthorne in https://github.com/rust-bitcoin/rust-bitcoin/pull/449
* Implement new FilterHeader type to differentiate from FilterHash by @jrawsthorne in https://github.com/rust-bitcoin/rust-bitcoin/pull/454
* Psbt hash preimages (again) by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/478
* Change PublicKey::write_into to return Result by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/507
* Fixing serde impl for PSBT inputs by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/512
* Implement PartialOrd and Ord for Inventory by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/517
* use u128 in map_to_range by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/487
* BIP 32 binary encoding functions are extracted from base58 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/470
* PSBT: making input and output field names match spec type names by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/513
* Tagged hashes for taproot by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/259
* Improve `sighash_u32` handling by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/401
* Make signed message prefix a public constant by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/531
* PSBT types are now constants by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/530
* Flush unrecognized network messages from the read buffer by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/529
* Add message::MAX_INV_SIZE constant by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/516
* network: Implement net::ToSocketAddrs for address messages by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/514
* New PSBT global keys by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/499
* Make Inventory and NetworkMessage enums exhaustive by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/496
* PSBT proprietary key system matching BIP 174 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/471
* Derivation path improvements, closes #473 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/498
* Add BlockHeader tests by @0xB10C in https://github.com/rust-bitcoin/rust-bitcoin/pull/536
* Fix the PSBT JSON serialization, using serde-derive by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/508
* switch to github actions by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/544
* docs: fix quotes in Transaction#ntxid description by @maxgiraldo in https://github.com/rust-bitcoin/rust-bitcoin/pull/539
* refactor(blockdata/transaction): use nested paths by @maxgiraldo in https://github.com/rust-bitcoin/rust-bitcoin/pull/540
* script: add FromHex and FromStr implementations by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/537
* encode: add some more generic impls (more tuples, references) by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/548
* Fix service flags warning by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/538
* Switch CI badge to GH actions by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/546
* PublicKey: add read_from method to be symmetric with write_into by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/542
* Bump to secp256k1 0.20 and don't enable `recovery` of `secp256k1` in the dependency declaration by @thomaseizinger in https://github.com/rust-bitcoin/rust-bitcoin/pull/545
* Change the signature of consensus_encode to return io::Error's  by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/494
* bump version to 0.26 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/533
* Make uint types (un)serializable by @shesek in https://github.com/rust-bitcoin/rust-bitcoin/pull/511
* Add function to check RBF-ness of transactions by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/565
* Add Script:dust_value() to get minimum output value for a spk by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/566
* Return BlockHash from BlockHeader::validate_pow by @jkczyz in https://github.com/rust-bitcoin/rust-bitcoin/pull/572
* Change Amount Debug impl to BTC with 8 decimals by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/414
* More derives for key::Error by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/551
* SigHashType: add a method to error on non-standard hashtypes by @darosior in https://github.com/rust-bitcoin/rust-bitcoin/pull/573
* Improving bip32 ChildNumber display implementation by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/567
* PSBT base64 (de)serialization with Display &amp; FromStr by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/557
* Include proprietary key in deserialized PSBT by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/577
* Fix Optional Amount Serialization by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/552
* Make Script::fmt_asm a static method and add Script::str_asm  by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/569
* Don't fail CI if base image's apt db is outdated by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/583
* doc: correct Transaction struct encode_signing_data_to doc comment by @collinsmuriuki in https://github.com/rust-bitcoin/rust-bitcoin/pull/582
* Non-API breaking derives for error &amp; transaction types by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/558
* fix warnings for sighashtype by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/586
* Non-API breaking introduction of Schnorr keys by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/589
* Count bytes read in encoding by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/594
* Fixes documentation intra-links and enforce it by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/600
* Add verify_with_flags to Script and Transaction by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/598
* Constructors for compressed and uncompressed ECDSA keys by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/592
* Fix Script::dust_value()'s calculation for non-P2*PKH script_pubkeys by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/579
* Address to optimized QR string by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/581
* Fixing hashes core dependency and fuzz feature by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/602
* Fix/error derives 2 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/559
* Introduce some policy constants from Bitcoin Core by @darosior in https://github.com/rust-bitcoin/rust-bitcoin/pull/584
* Fix bip158 example formatting by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/606
* Bump version to 0.26.1 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/607
* Update IRC info to libera.chat by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/610
* Fix release 0.26.2 by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/611
* std -&gt; core by @devrandom in https://github.com/rust-bitcoin/rust-bitcoin/pull/614
* Errors enum improvements by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/521
* Use `Amount` type for dust value calculation by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/616
* Bech32m adoption by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/601
* no_std support, keeping MSRV by @devrandom in https://github.com/rust-bitcoin/rust-bitcoin/pull/603
* Bigendian fixes and CI test by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/627
* Bump version to 0.27.0 by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/631
* Removed fuzztarget feature by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/634
* fix changelog date by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/640
* Script serialization/deserialization in serde non-human-readable format by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/596
* use Amount type in verify by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/621
* Implement possible_networks function for Address by @elsirion in https://github.com/rust-bitcoin/rust-bitcoin/pull/618
* Use consts for address prefix values by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/632
* Fix documentation referencing macro var by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/623
* WitnessVersion type by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/617
* Improvements to Error types (part 4) by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/625
* Implement `Block.get_strippedsize()` and `Transaction.get_vsize()` by @visvirial in https://github.com/rust-bitcoin/rust-bitcoin/pull/626
* Implement `Sum` for amount types by @sgeisler in https://github.com/rust-bitcoin/rust-bitcoin/pull/615
* Fixing no_std for Amount sum iterator by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/651
* Add Bloom filter network messages by @benthecarman in https://github.com/rust-bitcoin/rust-bitcoin/pull/580
* Document cargo features by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/633
* Adds Taproot BIP341 signature message and create a unified sighash cache for legacy, segwit and taproot inputs by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/628
* Changes for checking script size and returning Result&lt;Address, Error&gt; for p2sh by @vss96 in https://github.com/rust-bitcoin/rust-bitcoin/pull/655
* Check for overflow in Script::bytes_to_asm_fmt() by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/658
* Add i686 to tested architectures by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/659
* Document lack of support for 16-bit pointers by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/663
* Add OP_CHECKSIGADD and OP_SUCCESSxxx by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/644
* Taproot P2TR address by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/563
* Fix `Uint256::increment` panics by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/612
* Improve Fuzz CI by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/664
* Refactor Script::bytes_to_asm_fmt to use iterator by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/662
* Add taproot data structures by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/677
* P2TR address from untweaked key by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/691
* no-std cleanup by @devrandom in https://github.com/rust-bitcoin/rust-bitcoin/pull/637
* Making globals part of PSBT struct. Closes #652 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/654
* util/address: remove unused generic type by @benma in https://github.com/rust-bitcoin/rust-bitcoin/pull/698
* Clean up module level rustdocs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/689
* tests: improve coverage for P2tr and AddressType by @LeoComandini in https://github.com/rust-bitcoin/rust-bitcoin/pull/683
* Return the correct `LeafVersion` when building a Taproot `ControlBlock` by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/703
* Add unit test for bitcoin_merkle_root functions by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/711
* P2tr fixes by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/707
* util/address: Improve docs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/704
* Huffman Bug Fix by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/699
* Huffman Encoding Bug Test by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/700
* Use expect instead of unwrap for calls to consensus_encode by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/719
* Use TapTweakHash::from_key_and_tweak() method in computing tweak for UntweakedPublicKey by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/697
* Hotfix for secp256k1 alloc feature by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/694
* Super-trivial: Implement `FusedIterator` for `Instructions` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/733
* Decrease Huffman Weights to u32 by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/701
* Use un/tweaked public key types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/728
* Improvements to script methods related to Taproot by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/721
* add helpful message to division-by-zero panic by @6293 in https://github.com/rust-bitcoin/rust-bitcoin/pull/743
* util/address: make address encoding more modular by @benma in https://github.com/rust-bitcoin/rust-bitcoin/pull/643
* Separate signature hash types by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/702
* add MAX_MONEY public constant to Amount by @6293 in https://github.com/rust-bitcoin/rust-bitcoin/pull/742
* Refactor bitcoin_merkle_root functions by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/710
* BIP341 test vectors by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/695
* Fixed a bunch of clippy lints, added clippy.toml by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/686
* Re-export SigHashType in lib.rs by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/749
* Fixed docs.rs metadata by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/744
* Improve parsing of `Denomination` string by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/731
* transactions: add a note about `get_vsize` and standardness rules by @darosior in https://github.com/rust-bitcoin/rust-bitcoin/pull/665
* Allow specifing a raw `TapLeafHash` in sighash computation by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/722
* New Witness struct to improve ser/de perfomance by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/672
* Add support for taproot psbt fields BIP 371 by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/681
* Tapsighash test vectors by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/705
* Deprecate `StreamReader` by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/680
* Put rustdocs above attributes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/753
* Update to secp256k1 0.21.2 by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/755
* Use `test_data` for big objects, add big block for benchmarking by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/750
* PSBT: partial sig data type by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/669
* Converting LeafVersion into an enum by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/718
* Taproot: BIP32 extended keys using Scep256k1 keys instead of bitcoin ECDSA by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/590
* Taproot trivial post-merge fixups by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/761
* wrap u8 and LeafVersion in backticks and square bracket in doc by @bruteforcecat in https://github.com/rust-bitcoin/rust-bitcoin/pull/766
* improve example: take hex-encoded seed instead of WIF in bip32 example by @bruteforcecat in https://github.com/rust-bitcoin/rust-bitcoin/pull/760
* PSBT BIP32 keys using to Secp256k1 keys instead of bitcoin ECDSA by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/591
* Rename inner key field in PrivateKey and PublicKey by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/762
* Add Witness::new() by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/771
* Change type of final script witness to Witness from Vec&lt;Vec&lt;u8&gt;&gt; by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/774
* Taproot tweaks generalization &amp; KeyPair support by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/696
* Issue #394 - Refactor Block::merkle_root()  by @nilswloewen in https://github.com/rust-bitcoin/rust-bitcoin/pull/775
* Fixups for taproot improvements by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/778
* Introduce PsbtSigHashType by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/779
* add nano and pico BTC to Denomination enum by @bruteforcecat in https://github.com/rust-bitcoin/rust-bitcoin/pull/768
* replace unncessary closure with function pointer in FromStr::from_str for Deonomation by @bruteforcecat in https://github.com/rust-bitcoin/rust-bitcoin/pull/784
* Minimally-invasive separation of bitcoin keys from ECDSA signature types by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/757
* Make Map trait private by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/752
* Change EcdsaSig hash type deser in psbt by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/776
* Remove trailing spaces from 'address.rs' by @romanz in https://github.com/rust-bitcoin/rust-bitcoin/pull/791
* Contributing.md by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/587
* Fix unused arg in PSBT impl_psbt_get_pair macro by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/786
* Release v0.28 RC1 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/789
* Add new maintainers by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/795
* Refactor use map_err by @wim-web in https://github.com/rust-bitcoin/rust-bitcoin/pull/794
* Re-export psbt module from root level by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/790
* Use 4 character indentation by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/799
* Remove Sebastian from maintainers list by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/797
* Subsidy halving interval by @casey in https://github.com/rust-bitcoin/rust-bitcoin/pull/802
* Use fn name to_ instead of into_  by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/800
* Add a disabled rustfmt.toml by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/803
* Use write_all instead of write by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/809
* Refactor logical operators by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/808
* fix: Throw Error on unsuported addresses in `is_signed_by_address()` by @Shatnerz in https://github.com/rust-bitcoin/rust-bitcoin/pull/819
* Bug: Change type of pbst partial sig from secp key to bitcoin key by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/836
* Change Prevouts::All(&amp;[TxOut]) to Prevouts::All(&amp;[&amp;TxOut]) by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/835
* Allow contributors to easily run CI locally with `act` by @Shatnerz in https://github.com/rust-bitcoin/rust-bitcoin/pull/833
* Don't allow uncompressed public keys without prefix 0x04 by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/829
* Tempararily pin fuzzer on rust 1.58 by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/848
* Add a method to psbt to compute find sighash type by @rish-singhal in https://github.com/rust-bitcoin/rust-bitcoin/pull/847
* Separate out merge method into public trait by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/842
* Change the parameter for control block verification by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/845
* Improve rustdocs for *_hash_ty methods by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/852
* Use correct opcode count by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/868
* Update secp256k1 dependency by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/875
* Improve docs: script module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/869
* Cleanup transaction docs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/865
* Cleanup block module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/864
* Build the docs with test.sh by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/858
* Cleanup opcodes module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/867
* Trivial: Order impl_hashencode lines by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/863
* Flatten the policy module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/862
* test: Add a test for incorrect message signature in `is_signed_by_address` by @Shatnerz in https://github.com/rust-bitcoin/rust-bitcoin/pull/825
* Delete contract hash module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/871
* Make Script::witness_version public by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/876
* Use rustfmt to hint at clean ups for the codebase by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/806
* Fix signature hash returned for sighash single bug by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/860
* Improve ClassifyContext rustdocs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/877
* Use conventional spacing for default type parameters by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/880
* Remove get_ prefix by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/861
* Rust-Bitcoin Logo by @cryptoquick in https://github.com/rust-bitcoin/rust-bitcoin/pull/891
* Remove impl_index_newtype macro by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/805
* Improve `SchnorrSigHashType` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/903
* Remove feature gated enum variants by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/881
* Check for SIGHASH_SINGLE bug in writer fn by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/897
* Add serde to TweakedPublicKey by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/908
* Add Serialize/Deserialize for TaprootSpendInfo by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/907
* Re-work sighash type conversion methods by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/796
* Remove deprecated method use for sighash conversion by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/913
* TapTree iterator  by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/901
* Make NodeInfo API public by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/910
* Make TaprootBuilder able to generate Huffman Tree by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/909
* Taproot Huffman tree builder u64-&gt;u32 fixes by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/914
* feat: Add Address.is_related_to_*_key() by @Shatnerz in https://github.com/rust-bitcoin/rust-bitcoin/pull/839
* Make PsbtSigHashType use the same formatting as other *SigHashTypes by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/898
* Adds derives to TweakedKeyPair by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/916
* Release 0.28.0-rc.2 by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/915
* Fix deprecated since version by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/918
* Improve docs in taproot module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/912
* Require taproot tree depth argument always to be u8 by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/925
* Taproot docs nits by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/923
* Push key xonly by @mplsgrant in https://github.com/rust-bitcoin/rust-bitcoin/pull/920
* Rename SigHash to Sighash by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/917
* Remove redundant code computing tap hashes by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/926
* Derive Eq for PSBT types by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/932
* Allow deprecated function call by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/938
* Fix TapTree hidden branches bug by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/929
* Improvements to taproot script iterator by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/924
* Make TaprooBuilder::finalize able to return keyspend only by @JeremyRubin in https://github.com/rust-bitcoin/rust-bitcoin/pull/936
* Trivial improvements for TapTree type by @dr-orlovsky in https://github.com/rust-bitcoin/rust-bitcoin/pull/927
* Release 0.28.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/944
* Add temporary warning about edition change by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/961
* Fix TapTree derserialization by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/950
* fix: reject message (de)serialization  by @0xB10C in https://github.com/rust-bitcoin/rust-bitcoin/pull/939
* Add PSBT alias by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/951
* Add Script conversion method p2wpkh_script_code by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/954
* Remove unnecessary `Write as _fmtWrite` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/965
* Remove 1.29 checks from CI pipeline by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/964
* Clean up import aliases by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/966
* util::amount: Make from_sat constructor constant by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/902
* API to find funding utxos in psbt by @violet360 in https://github.com/rust-bitcoin/rust-bitcoin/pull/853
* Update MSRV in clippy.toml by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/969
* Remove MSRV todo comments by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/952
* Fix badges by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/970
* BUG: Does not work with `no_std` under 1.29 (MSRV) by @mcroad in https://github.com/rust-bitcoin/rust-bitcoin/pull/690
* Disable Serde's default-features by @ass3rt in https://github.com/rust-bitcoin/rust-bitcoin/pull/905
* Use iterator in `blockdata::script::Instructions` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/673
* Add `amount::Display` - make formatting configurable by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/716
* Remove irrelevant notes about version pinning by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/982
* Add method to push an ECDSA sig + sighash type byte on a witness by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/989
* Remove dr-orlovsky from maintainer list by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/992
* Edition 2018 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/983
* Make Address::get_payload_bytes public by @fmeringdal in https://github.com/rust-bitcoin/rust-bitcoin/pull/978
* Trival docs fixes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/960
* Remove sha256t_hash_newtype macro by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/980
* Improve docs in `sighash` and `psbt/mod.rs` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/956
* Box value encoded in a variant to reduce enum stack space by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/996
* Implement `std::error::Error` for the new MSRV by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/987
* Refactor address byte swapping by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/968
* Do not pin transitive ryu dependency by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1013
* Match against an optional single trailing colon by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1010
* Add `consensus_decode_from_finite_reader` optimization by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1023
* Clear Clippy warnings by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1004
* Audit conversion methods by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/798
* Add non_exhaustive to all error enums by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1026
* Enforce segwit v0 script validity when creating address. by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1021
* Replace base64-compat dependency by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/993
* Add chain hash type using consts by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/878
* Feature `use-serde` renamed to `serde` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1006
* Add more documentation to some core types by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1018
* Improve error `Display` implementations by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1003
* refactor: remove SchnorrSignatureHash::Reserved variant by @Eunoia1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1031
* Add non_exhaustive compiler directive to `AddressType` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1011
* Remove network::Error by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1032
* Avoid allocation in build_scriptint by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1033
* Document `Txid` being displayed backwards by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1037
* Clear clippy warnings from `--all-targets` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1043
* Modify from_script functions in address.rs to return result by @Eunoia1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1038
* README: remove stale info about upcoming edition change by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1034
* Removed edition change heads up from CONTRIBUTING by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1048
* Fix incorrect argument passed to Error::InvalidSegwitV0ProgramLength and add test by @Eunoia1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1039
* Add getter methods for PartialMerkleTree fields by @Eunoia1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1051
* Refactor `serve_tcp` code by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1042
* Implement iter::size_hint and ExactSizeIterator for Witness Iter by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1053
* Replace runtime size check with compile time check by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1000
* Move broken-intra-doc-link lint config to command line by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1059
* Enabe clippy on CI by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1061
* Expose SIGHASH_SINGLE bug in `encode_signing_data_to` by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1024
* Remove duplicate `must_use` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1063
* Make `opcode::to_u8` a const function by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/1072
* Optimize `Witness` Serialization by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/1071
* Implement TryFrom by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1007
* Take Writer/Reader by `&amp;mut` in consensus en/decoding by @dpc in https://github.com/rust-bitcoin/rust-bitcoin/pull/1035
* Remove Uninhabited by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1075
* Use fragment-specifier literal by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1014
* Remove unused lifetimes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1083
* Remove redundant compile_error by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1085
* Use `to_hex` when available by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1081
* Introduce SPDX license identifiers by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1076
* Add custom error for invalid parsing of address types by @arturomf94 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1091
* Upgrade to secp256k1 v0.23.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1066
* Remove extern crate core statement by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1094
* Add PublicKey::to_sort_key method for use with sorting by key by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1084
* Upgrade `bitcoin_hashes` dependency by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1065
* Implement std::error::Error for ParseAmount by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1049
* Document PSBT roles and limitation by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/1100
* Derive Hash on a bunch of types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/990
* Create configuration conditional &quot;bench&quot; by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1092
* Add new type for sequence by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1093
* Implement human-readable serde for `Witness` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1068
* Remove the Pay-to-Contract reference from README. by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1101
* Remove leading colons by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1001
* Add psbt watch-only/cold-storage example by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/940
* Introduce rustfmt in a non-invasive manner by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1040
* Add cargo crev reminder to readme by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1098
* Run the formatter by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1107
* Upgrade to secp v0.24.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1110
* Remove extern crates by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1041
* Use infallible conversions: `Hash` -&gt; `secp256k1::Message` by @arturomf94 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1118
* Use `listener.accept()` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1119
* Add ci check for duplicate dependencies by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1114
* Use `u8::try_from` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1121
* Add docs re Rust 1.51.1 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1122
* Use `u16::to_be_bytes` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1120
* Add BIP152 (Compact Blocks) structures by @0xB10C in https://github.com/rust-bitcoin/rust-bitcoin/pull/1088
* Run clippy from the test script by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1079
* Remove stale MSRV docs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1126
* Add a `LockTime` type by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/994
* Upgrade bech32 to version 0.9.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1131
* Parse int error by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1129
* Remove needless allocation from BIP-158 encoding by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1146
* Impl string conversion traits for `CommandString` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1137
* Update finalize API by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1151
* Remove deprecated `StreamReader` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1144
* Fix public API clippy warnings by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1161
* Update bitcoinconsensus dependency by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1165
* Remove `MAX_SEQUENCE` constant by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1171
* Release tracking PR - v0.29.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1109
* Pin `serde` to 1.0.142 by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1178
* Clean up bip158 module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1180
* Deprecate `Transaction`'s `signature_hash`/`encode_signing_data_to` methods by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1166
* Remove old deprecated code by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1163
* Remove accidentally-exported internal macros by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1177
* Fix clippy warnings by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1182
* Move `address` out of `util` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1170
* Do error cleanups by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1139
* Move sighash types to the sighash module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1077
* Introduce new canonical license blurb by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1138
* Re-export blockdata modules by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1172
* [update] macro to implement Debug from Display and add Display implementation where needed by @hrouis in https://github.com/rust-bitcoin/rust-bitcoin/pull/1204
* Temporarily disable fuzzing in CI by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1200
* consensus::Params should be non_exhaustive by @hrouis in https://github.com/rust-bitcoin/rust-bitcoin/pull/1216
* Revert &quot;Temporarily disable fuzzing&quot; by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1219
* Hex macros cleanup by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1191
* Add multithreading for the pmt_tests execution by @hrouis in https://github.com/rust-bitcoin/rust-bitcoin/pull/1217
* Add relative lock time type by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1196
* Remove some easy todo's by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1227
* Correctly handle bicoinconsensus::Error by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1235
* Move bip158 module to crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1211
* CI clean ups by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1238
* Use correct path for bip158 in rustdoc by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1246
* Add new type for block version by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1240
* BIP 34: Check last minimal encoding accoriding of heights by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1244
* Run cargo fmt by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1249
* Remove unused consensus encoding error variants by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1252
* Impl std error using macro by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1136
* implement `From&lt;PublicKey&gt;` for `PubkeyHash` by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1248
* Simplify `PublicKey` serialization code by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1250
* Add a comment to delineate test_macros re-export by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1255
* Use `Borrow` trait bound for bip158 `Iterator::Item` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1183
* Introduce `bitcoin-internals` crate by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1239
* Implement basic support for fast hex encoding by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1268
* Fix serde versions by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1267
* Update docs on rustfmt by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1125
* Hex fixups by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1269
* Redesign `hex::BufEncoder` to accept owned arrays by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1273
* Fix deprecated v0.28.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1276
* Add constants to `ChainHash` for each `Network` by @jkczyz in https://github.com/rust-bitcoin/rust-bitcoin/pull/1283
* Remove code deprecated last release by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1282
* Implement From for hash types by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1285
* Make `ChainHash::using_genesis_block` constant by @jkczyz in https://github.com/rust-bitcoin/rust-bitcoin/pull/1286
* Add fuzz test for PrefilledTransaction by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1279
* Remove `user_enum` macro by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1291
* Add API method `absolute::LockTime::is_satisfied_by_lock` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1258
* internals: Run formatter by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1290
* Move bip32 module to crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1208
* Try to fix up sighash export mess by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1277
* Move/re-name the `util::misc` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1259
* Fix clippy warnings by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1299
* New type network magic by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1288
* `AsMut` impls for `Magic` by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1301
* Add `Script::builder` convenience function by @casey in https://github.com/rust-bitcoin/rust-bitcoin/pull/1312
* Fix `test_data` dir exclusion by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1315
* Add script to launch fuzzing continuosly by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1309
* Add `Target` and `Work` types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1197
* Return custom error from `Network::from_str` by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1314
* Move bip152 module to crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1210
* Add API to PSBT to enable signing inputs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/957
* add some comments to `Transaction::weight` by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1331
* Move a bunch of stuff out of `internal_macros` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1293
* Improve doc of `Script::push_verify` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1335
* Remove usage of `opcodes::all` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1295
* Implement PartiallySignedTransaction::fee by @hashmap in https://github.com/rust-bitcoin/rust-bitcoin/pull/1338
* ci: Remove serde version pinning by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1341
* Move sighash module to crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1340
* examples: Add taproot PSBT example workflow by @dunxen in https://github.com/rust-bitcoin/rust-bitcoin/pull/999
* Re-export base64 when enabled by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/1342
* Fix broken build due to conflict between #1340 and #999 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1345
* Add psbt BIP174 test vectors tests by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/935
* Remove the endian module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1223
* Add `impl IntoIterator for &amp;'_ Witness` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1354
* Add a CHANGELOG entry for 0.28.2 by @TheBlueMatt in https://github.com/rust-bitcoin/rust-bitcoin/pull/1361
* Add a test parsing transaction with a huge witness by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1359
* Do clippy improvements by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1367
* Rename `hash` module to `merkle_root` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1334
* Move amount module out of util by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1333
* Fix `no_std` when `bitcoinconsensus` is enabled by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1344
* Re-export hashbrown when enabled by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1348
* Remove `into_bytes` from `impl_array_newtype` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1349
* Improve documentation on the `all` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1339
* Improve block version by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1351
* [blockdata::Witness] New Features: Index&lt;usize&gt;, nth(index), and get_tapscript by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1323
* Witness: Fix nits from PR 1323 by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1375
* Make Instruction Copy by @casey in https://github.com/rust-bitcoin/rust-bitcoin/pull/1376
* Remove deprecated re-exports by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1332
* Clean up the `base58` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1264
* Minor improvements to Witness::get_tapscript commit by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1381
* `Witness` API improvements by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1380
* Move `merkleblock` into `merkle_tree` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1374
* `Witness` conversion trait implementations by @nlanson in https://github.com/rust-bitcoin/rust-bitcoin/pull/1391
* Format the `merkle_tree` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1394
* Start to flatten `util` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1169
* Import bitcoin hashes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1284
* Enable formating of the `network` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1353
* Drop Network arg from max_money() by @ariard in https://github.com/rust-bitcoin/rust-bitcoin/pull/1399
* Check for rustdocs build warnings in CI by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1404
* Add Network::to_core_arg() method by @connormullett in https://github.com/rust-bitcoin/rust-bitcoin/pull/1397
* Fix typo in the SHA512 documentation by @kcalvinalvin in https://github.com/rust-bitcoin/rust-bitcoin/pull/1407
* amount: use Kani to prove some arithmetic properties by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1415
* Add rand feature flag to the example documentation by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1416
* Create `crypto` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1260
* Move the taproot module to crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1373
* Implement `Script::p2pk_public_key(&amp;self) -&gt; Option&lt;PublicKey&gt;` by @connormullett in https://github.com/rust-bitcoin/rust-bitcoin/pull/1412
* Move `base58` to the crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1417
* Serde regression tests by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/724
* Hotfix: Fix broken serde by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1432
* Remove no_run by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1430
* Change `max_money` to a constant. by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1410
* Add log2 to Work by @jirijakes in https://github.com/rust-bitcoin/rust-bitcoin/pull/1437
* Consensus encoding based serialization by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1254
* Do some rustdoc cleanups by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1357
* Serde derive in tests by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1234
* Adds Network::from_core_arg and links it to Network::from_str by @sr-gi in https://github.com/rust-bitcoin/rust-bitcoin/pull/1428
* Add trait `FromStrHex` for tuple structs with single `u32` member by @connormullett in https://github.com/rust-bitcoin/rust-bitcoin/pull/1400
* hashes: Do not implement `Deref` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1450
* Remove `PackedLockTime` in favor of `absolute::LockTime` by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1330
* Implemented unsized `Script` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1155
* Add weight utilities to `TxIn` and `TxOut` by @danielabrozzoni in https://github.com/rust-bitcoin/rust-bitcoin/pull/1467
* Run clippy in ci for `hashes` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1419
* add some documentation clarifying the locktime ordering shenanigans in #1330 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1475
* Mention Script::is_v1_p2tr above Witness::tapscript by @casey in https://github.com/rust-bitcoin/rust-bitcoin/pull/1483
* Fix typos in docs by @danielabrozzoni in https://github.com/rust-bitcoin/rust-bitcoin/pull/1486
* Patch hashes and update the code by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1477
* Add `tapscript_leaf_hash()` to `Script` by @jirijakes in https://github.com/rust-bitcoin/rust-bitcoin/pull/1485
* upgrade secp256k1 to 0.25.0 by @delta1 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1493
* Add `from_bytes(Vec&lt;u8&gt;)` to `ScriptBuf` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1499
* Introduce mutation testing by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1495
* Fix bug in `ScriptBuf::extend` for short iterators  by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1502
* Make `Witness::tapscript()` return `Script` instead of raw bytes by @jirijakes in https://github.com/rust-bitcoin/rust-bitcoin/pull/1512
* Use cargo install cross `--locked` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1508
* Use dtonlnay instead of actions-rs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1509
* Allow dead_code/unused_imports when fuzzing by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1420
* Run kani daily on a schedule by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1511
* hashes: ci: Remove --all by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1468
* Document test frameworks by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1507
* Verify and fix the `U256::mul_u64` method by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1496
* Add mutation testing to the `locktime` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1513
* Fix wrong newtype APIs by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1503
* Add rand-std feature by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1387
* Use hex from internals rather than hashes by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1476
* Add sha512_256 to bitcoin_hashes by @kcalvinalvin in https://github.com/rust-bitcoin/rust-bitcoin/pull/1413
* Change `#[cfg(docsrs)]` to `#[cfg(doc)]` on `use` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1504
* Replace `Vec::from_hex` with `hex!` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1438
* Replace consensus `Encodable`/`Decodable` Psbt Serialization by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/988
* Make space optional in amount with denomination by @casey in https://github.com/rust-bitcoin/rust-bitcoin/pull/1521
* [WIP] 1514: fix formatting in opcodes by @td-bn in https://github.com/rust-bitcoin/rust-bitcoin/pull/1528
* Rename `push_scriptint` and make it private by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1527
* Fix LeafVersion serde by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1523
* Remove `ToHex` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1531
* Unify `TapLeafHash` and `TapBranchHash` into `TapNodeHash` while tree construction by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1479
* A crash course in rust perf (#988 nits) by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/1538
* Use marker type to enforce validation of `Address`'s network by @jirijakes in https://github.com/rust-bitcoin/rust-bitcoin/pull/1489
* Add CI script for the `internals` crate by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1545
* Add more mutation testing to the `pow` module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1510
* Add a rustdoc test to Denomination by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1539
* Export the DisplayHex trait from within prelude by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1537
* Fix ASAN in CI by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1566
* bip158: Replace usage of HashSet with BTreeSet by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1576
* Implement `Debug` for generic `Address&lt;V: NetworkValidation&gt;` by @jirijakes in https://github.com/rust-bitcoin/rust-bitcoin/pull/1578
* amount parses 0 msats by @td-bn in https://github.com/rust-bitcoin/rust-bitcoin/pull/1544
* Address validity invariant cleanups by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1564
* Improve Psbt error handling by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/1532
* Use `sha256d::Hash` type for sighash encoding by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1567
* Take `Into&lt;secp256k1::PublicKey&gt;` in PublicKey constructors by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1582
* Delegate debug for ScriptBuf to Script by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1580
* Add documentation to `Sequence::is_final` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1575
* Remove `hashes::hex::HexWriter` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1572
* Improve downflow of information in `psbt::Error` by @arturomf94 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1591
* Remove unnecessary lifetime by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1594
* Add standard constants to lock times by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1574
* Add new hex parse error variant by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1584
* Make max/min_value functions const by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1603
* Implement fmt traits for ScriptBuf by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1596
* Add conversions for `TweakedKeyPair` -&gt; `TweakedPublicKey` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1583
* Reduce usage of `FromHex` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1565
* Associate io, encode errors with psbt::Error by @DanGould in https://github.com/rust-bitcoin/rust-bitcoin/pull/1609
* Add newline in rustdoc by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1618
* Do not export unusual hash types at crate root by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1617
* Set `rustv_1_53` in build script by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1608
* Add KeyPair import to rustdoc example by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1610
* Implement from arrays for `TaprootMerkleBranch` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1613
* Improve `SighashCache` API by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1625
* Improve `sighash` module documentation by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1624
* Add '_ back into the BitStreamWriter by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1601
* Instruct devs to use nightly for embedded by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1611
* Rename `from_slice` methods to `decode` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1621
* Refactor script module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1600
* Add `Weight` and `FeeRate` newtypes by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1627
* Refactor `merkle_tree::block` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1388
* Clean up the manifest files of top level crates by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1612
* Add methods for pushing locktimes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1629
* Deprecate `script::read_uint` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1559
* Improve test coverage for docs build by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1505
* Add `From&lt;Address&gt;` for `ScriptBuf` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1592
* Use ignore to stop rustdoc code from being built by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1581
* Fix license on bip158 module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1579
* Add `minimal_non_dust` to `TxOut` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1642
* Weight prediction by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1636
* hashes: Improve feature gating by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1570
* Flatten the types directory by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1644
* Remove FromStr impl from ScriptBuf by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1646
* pow: Remove Mul/Div by arbitrary integer types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1643
* Move deny lint checks to script by @Harshil-Jani in https://github.com/rust-bitcoin/rust-bitcoin/pull/1641
* `psbt` cleanup by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1605
* Fix absolute lock time examples and tests by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1647
* hashes: Implement AsRef for fixed size arrays by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1593
* ci: Remove incorrect code comment and cargo clean by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1569
* Remove the rustfmt required_version config option by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1602
* Added a newtype for script-pushable slice  by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1190
* Move sighash types around by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1597
* Get rid of BadFormat error by @hashmap in https://github.com/rust-bitcoin/rust-bitcoin/pull/1651
* Clarify the intention of strange condition by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1652
* Changing docs and examples to use correct function signature by @lorenzolfm in https://github.com/rust-bitcoin/rust-bitcoin/pull/1658
* Do trivial manifest cleanup by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1654
* Show cache construction in rustdoc by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1653
* Pin syn dependency for MSRV toolchain by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1664
* Make `hash_newtype` evocative of the output by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1659
* Create Address::matches_script_pubkey method by @hashmap in https://github.com/rust-bitcoin/rust-bitcoin/pull/1663
* Accept borrowed values in InputWeightPrediction::new() by @Harshil-Jani in https://github.com/rust-bitcoin/rust-bitcoin/pull/1672
* Improve string parsing by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1623
* Reexport `Magic` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1674
* Fix docs for UnknownMagic to be accurate by @benthecarman in https://github.com/rust-bitcoin/rust-bitcoin/pull/1676
* Re-name hash inner/byte methods by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1577
* Add utils to convert ChainHash to a Network by @benthecarman in https://github.com/rust-bitcoin/rust-bitcoin/pull/1675
* `hash_newtype` cleanup by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1670
* Add constant for coinbase maturity by @benthecarman in https://github.com/rust-bitcoin/rust-bitcoin/pull/1679
* Improve the public API by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1678
* Include address in Error::NetworkValidation by @Subhra264 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1682
* Improve the public API for Feerate and Weight by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1685
* Implement support for Hidden nodes in taproot trees and Fix taproot serde bugs by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1533
* Run cargo fmt in CI by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1111
* fix clippy lint by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1695
* Add constants to `InputWeightPrediction` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1692
* Add tests for the FeeRate type by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1690
* release bitcoin_hashes 0.12 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1694
* Fix weight subtract bug by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1701
* Add tests to Weight type by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1704
* Fix CI builds where default features are added accidentally by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1708
* Add a method to `pow::Target` for returning difficulty as an f64. by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1707
* update internals CHANGELOG for release by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1700
* Improve QR code formatting documentation by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1709
* Avoid usage of atomic types if not supported by the target arch by @bigspider in https://github.com/rust-bitcoin/rust-bitcoin/pull/1705
* Add README docs for proper use of std and no-std features by @notmandatory in https://github.com/rust-bitcoin/rust-bitcoin/pull/1711
* Swap out `Work::log2` implementation for `U256::to_f64` by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1713
* Support weight prediction in `const` context by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1710
* update rust-secp to 0.27.0 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1714
* Add CentiBitcoin to denominations by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1715
* Feature: Add difficulty_float method for block::Header. by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1720
* Remove extern crate hashbrown by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1717
* Mark `Denomination` as `non_exhaustive` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1721
* Update testing section by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1719
* Release tracking PR - v0.30.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1699
* bitcoin: Fix path to the readme by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1723
* Format the `rust-bitcoin` crate by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1434
* Run cargo +nightly rustfmt by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1728
* CI: Prevent duplicate CI runs by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1733
* remove Lines of Code badge by @Harshil-Jani in https://github.com/rust-bitcoin/rust-bitcoin/pull/1734
* Add kilo weight unit conversion by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1735
* Bump MSRV to 1.48.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1729
* ci: do dry-run releases in CI by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1725
* Use shorter imports by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1730
* add SECURITY.md by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1737
* create a set of recognized denomination forms by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1740
* Add `ChainHash::from_genesis_block_hash` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1753
* [Docs] Update internal project link to changelog by @harding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1759
* Add implementation of PartialEq trait for Address with NetworkUnchecked by @Harshil-Jani in https://github.com/rust-bitcoin/rust-bitcoin/pull/1757
* Feature (hashes): Add from_bytes_ref and from_bytes_mut to all Hash types by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1761
* Use doc_auto_cfg by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1763
* Add per crate release notes link by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1760
* Update clippy MSRV configuration by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1774
* Implement computing SHA256 in const context by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1769
* Use slice patterns by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1771
* Make `sha256t_hash_newtype!` evocative of the output.  by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1773
* unsafe address type conversions by @Harshil-Jani in https://github.com/rust-bitcoin/rust-bitcoin/pull/1765
* Use package in manifest and shorten import by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1742
* hashes: Derive traits on the sha512::Hash type by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1781
* CI: Only run release job for release PRs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1758
* ci: Check for remaining NEXT_RELEASE in the release script by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1791
* Add Inventory::network_hash() method by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/515
* Add predict_weight test for witness address types by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1797
* Remove `schemars` pin from manifest by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1696
* extended_tests: Remove stale docs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1804
* transaction: Rename is_coin_base to is_coinbase by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1796
* Spelling and typo fixes by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1810
* embedded: Remove error handler by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1814
* Fix policy link by @petertodd in https://github.com/rust-bitcoin/rust-bitcoin/pull/1815
* Overhaul fuzzing by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1732
* Hardcode expected weight in txin_txout_weight_tests by @petertodd in https://github.com/rust-bitcoin/rust-bitcoin/pull/1817
* Move weight constants in the `Weight` type by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1826
* Simplify per-file license comments by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1825
* Adds as_core_arg serde module to network by @sr-gi in https://github.com/rust-bitcoin/rust-bitcoin/pull/1801
* fuzz: replace `cfg(fuzzing)` weth `cfg(bitcoin-hashes-fuzz)`. by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1821
* Test with minimal dependency versions by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1764
* Remove `min_value` and `max_value` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1829
* Improve README by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1736
* Implement serde::Serialize for Address by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1785
* Use Amount type for TxOut value field by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1811
* Comment predict_weight by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1793
* Expose valid (min, max) difficulty transition thresholds by @wpaulino in https://github.com/rust-bitcoin/rust-bitcoin/pull/1820
* feat: generate PrivateKey by @kshitjj in https://github.com/rust-bitcoin/rust-bitcoin/pull/1837
* docs: Add doc comments for external crates by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1841
* Move and rename TxOut default trait to a const called NULL by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1838
* ci: fix -run syntax by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1842
* Allow parsing sub-sat denominations with decimal points  by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1768
* make bip21 schema lowercase by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1844
* Fix formatting by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1848
* Fix associated constants of `InputWeightPrediction` by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1835
* Add changelog entry for removal of `FromHex` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1861
* Add a checked version of weight mul fee_rate by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1864
* tests: Use script hash functions by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1857
* rename bitcoin-private to bitcoin-internals by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1885
* embedded: Document how to clean up linker flags by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1879
* Fix conditional configuration options usage by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1871
* Add `ValidationError` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1874
* hashes: Fix stale repository name by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1876
* made ckd_priv function private and impl AsRef for ChildNumber by @startup-dreamer in https://github.com/rust-bitcoin/rust-bitcoin/pull/1882
* Improve `hashes::Error` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1873
* psbt: Remove reexport of Prevouts by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1872
* Remove doc(hidden) from error conversion functions by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1887
* Rename `TaprootSpendInfo::as_script_map` to `script_map` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1897
* [script] Add method count_sigops by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1890
* Improve `crytpo::taproot` error type by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1895
* Fix comments for #1890 by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/1898
* network: Implement Default on ServiceFlags by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1900
* Removed only available in 1.46.0 line by @roy9495 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1863
* `alloc`-free parse errors by @Kixunil in https://github.com/rust-bitcoin/rust-bitcoin/pull/1297
* This library is not solely dependent on Rust by @roy9495 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1904
* key: Implement From&lt;PublicKey&gt; for XOnlyPublicKey by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1901
* Add from_int_btc method to Amount by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1870
* hashes: Remove stale status badge by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1877
* Mutate mul_u64 with mutagen by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1739
* ci: Remove stale DO_ALLOC_TESTS variable by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1878
* Fix incorrect comment in ci script by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1915
* Make sha512::HashEngine fields private by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1910
* Add a verify function to PublicKey by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1911
* Added examples for signature verification by @panicfarm in https://github.com/rust-bitcoin/rust-bitcoin/pull/1776
* Refactor transaction weight by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1926
* update proc-macro to 1.0.56 to 1.0.63 by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1927
* CI: Pin serde_json for MSRV build by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1934
* Move witness types to the script module by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1846
* Manually implement Debug on Witness by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1913
* Use hex_lit::hex in benches by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1941
* Remove docsrs attributes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1940
* internals: Bump version to 0.2.0 by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1916
* Rename PartiallySignedTransaction to Psbt by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1938
* Rename `Script::empty` to `Script::new` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1925
* witness: clean up Debug implementation by @apoelstra in https://github.com/rust-bitcoin/rust-bitcoin/pull/1942
* bitcoin/bip32: add DerivationPath::to_u32_vec by @benma in https://github.com/rust-bitcoin/rust-bitcoin/pull/1946
* Infrastructure fixes by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1935
* key: Impl From&lt;secp256k1::PublicKey&gt; for bitcoin::PublicKey by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1949
* Rename `HashParse` error variant to `InvalidHash` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1888
* Separate out bitcoinconsensus validation code  by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1912
* Avoid vector allocation in `RawNetworkMessage` encoding by @RCasatta in https://github.com/rust-bitcoin/rust-bitcoin/pull/1954
* Fill in deprecated since NEXT-RELEASE placeholder by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1958
* Use new `hex-conservative` crate by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1833
* script: Move some inspector methods from ScriptBuf to Script by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1964
* policy: Add refactor carve out by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1945
* Rename `network` module and move/clean up types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1854
* crypto: Overhaul the errors by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1862
* Return Weight in the TxIn/TxOut weight() methods by @danielabrozzoni in https://github.com/rust-bitcoin/rust-bitcoin/pull/1970
* Remove deprecated code by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1957
* Move type definitions of pubkey/script hash types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1914
* Fix links in docs by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1933
* Add absolute fee rate convenience functions to `FeeRate` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1947
* Add max standard tx weight constant to transaction by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1968
* Update what deps to pin by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1977
* Add CI test for pinned versions using 1.48 by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/1982
* Rename `opcodes::All` to `Opcode` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1955
* Eliminate a heap allocation from PartialMerkleTree encoding &amp; decoding by @stevenroose in https://github.com/rust-bitcoin/rust-bitcoin/pull/1991
* Expose XOnlyPublicKey in crate root by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1744
* Add simd sha256 intrinsics for x86 machines by @sanket1729 in https://github.com/rust-bitcoin/rust-bitcoin/pull/1962
* Introduce the `small-hash` feature for `bitcoin_hashes` by @afilini in https://github.com/rust-bitcoin/rust-bitcoin/pull/1990
* Add txin base weight by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/2001
* Improve segwit signature hash API by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1995
* Remove usage of ThirtyTwoByteHash by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1998
* Add VarInt from implementations by way of macro by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2024
* Add a script for updating lock files by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2012
* hashes: Release `v0.13.0` by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1917
* Export all hash types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1988
* Fix clippy warnings by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2029
* Rename xpub and xpriv types by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2019
* psbt: Add IndexOutOfBounds error by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2004
* Add version bytes consts by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2020
* Wrap the `bitcoinconsensus` error by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1978
* Use weight type for stripped_size by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/2010
* Fix witness display bug by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/1999
* CI: Fx pinning by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2036
* Update base64 usage to 0.21.3 by @junderw in https://github.com/rust-bitcoin/rust-bitcoin/pull/2032
* Introduce a basic justfile by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2018
* Improve witness display by @tcharding in https://github.com/rust-bitcoin/rust-bitcoin/pull/2035
* Use weight for block size function by @yancyribbens in https://github.com/rust-bitcoin/rust-bitcoin/pull/2040

## New Contributors
* @serprex made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/14
* @rotwatsb made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/18
* @chritchens made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/22
* @daniellockyer made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/25
* @alekseysidorov made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/29
* @TheBlueMatt made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/45
* @tamasblummer made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/40
* @romanz made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/74
* @popzxc made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/82
* @petertodd made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/87
* @sgeisler made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/100
* @dongcarl made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/109
* @savil made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/107
* @jeandudey made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/121
* @dpc made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/120
* @D4nte made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/110
* @stevenroose made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/159
* @thomaseizinger made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/168
* @evgeniy-scherbina made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/169
* @jeffbarg made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/174
* @shesek made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/189
* @ariard made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/205
* @rex4539 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/224
* @dr-orlovsky made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/231
* @jonasnick made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/276
* @erasmospunk made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/268
* @Aleru made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/304
* @practicalswift made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/303
* @elichai made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/307
* @real-or-random made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/312
* @ccdle12 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/341
* @kiminuo made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/360
* @5o50 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/367
* @instagibbs made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/392
* @wbnns made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/378
* @tnull made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/411
* @canndrew made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/375
* @jrawsthorne made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/424
* @twchn made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/432
* @cloudhead made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/429
* @braydonf made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/458
* @ipaljak-tbtl made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/485
* @rikitau made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/502
* @kallewoof made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/291
* @afilini made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/529
* @0xB10C made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/536
* @maxgiraldo made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/539
* @jkczyz made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/572
* @darosior made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/573
* @JeremyRubin made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/552
* @collinsmuriuki made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/582
* @devrandom made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/614
* @Kixunil made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/634
* @elsirion made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/618
* @visvirial made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/626
* @benthecarman made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/580
* @vss96 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/655
* @nlanson made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/691
* @benma made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/698
* @LeoComandini made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/683
* @6293 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/743
* @bruteforcecat made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/766
* @nilswloewen made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/775
* @wim-web made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/794
* @casey made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/802
* @Shatnerz made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/819
* @rish-singhal made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/847
* @cryptoquick made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/891
* @mplsgrant made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/920
* @violet360 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/853
* @mcroad made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/690
* @ass3rt made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/905
* @fmeringdal made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/978
* @Eunoia1729 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1031
* @DanGould made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1071
* @arturomf94 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1091
* @hrouis made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1204
* @hashmap made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1338
* @dunxen made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/999
* @connormullett made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1397
* @kcalvinalvin made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1407
* @yancyribbens made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1416
* @jirijakes made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1437
* @sr-gi made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1428
* @danielabrozzoni made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1467
* @delta1 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1493
* @td-bn made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1528
* @Harshil-Jani made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1641
* @lorenzolfm made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1658
* @bigspider made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1705
* @notmandatory made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1711
* @harding made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1759
* @wpaulino made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1820
* @kshitjj made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1837
* @startup-dreamer made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1882
* @roy9495 made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1863
* @panicfarm made their first contribution in https://github.com/rust-bitcoin/rust-bitcoin/pull/1776

**Full Changelog**: https://github.com/rust-bitcoin/rust-bitcoin/commits/bitcoin-0.30.2</summary>
    <title>rust-bitcoin/rust-bitcoin: bitcoin-0.30.2</title>
    <updated>2023-10-14T20:30:14Z</updated>
    <dc:date>2023-10-14T20:30:14Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.10</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.10"/>
    <summary>### Migration for existing legacy wallets (v1.x)

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.9

- Updated the wording of the migration message in the legacy application. Added a date where some legacy services (swap-in and pay-to-open) will be disabled (November 1st).
- 2 bug fixes in lightning-kmp.

**Full changelog**:
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.9...android-v2.0.10
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.8...v1.5.9

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.10</title>
    <updated>2023-10-10T11:42:51Z</updated>
    <dc:date>2023-10-10T11:42:51Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.9.14</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.9.14"/>
    <summary>**Note:** We re-uploaded the binary for macOS on the 26th of October. The new binary fixes several issues that caused crashes on macOS.

## Release notes
In this release, we add MercadoPago as a new payment method for our Argentinian users. Moreover, the Bisq Price Index uses the blue dollar (free market rate) rate for the Argentine Pesos market. Other changes include an updated Java runtime, bug fixes, and performance improvements.

See https://github.com/bisq-network/bisq/milestone/82?closed=1 for more details.

### Improvements
- [Improve flow in create/take offer process](https://github.com/bisq-network/bisq/pull/6848)
- [Add MercadoPago payment method](https://github.com/bisq-network/bisq/pull/6851)
- [Add info popup about Argentinian Peso (blue) market prices](https://github.com/bisq-network/bisq/pull/6840)
- Update to latest Java 11 LTS runtime ([1](https://github.com/bisq-network/bisq/pull/6853), [2](https://github.com/bisq-network/bisq/pull/6826), [3](https://github.com/bisq-network/bisq/pull/6827), [4](https://github.com/bisq-network/bisq/pull/6837))
- [Show Amazon gift card country in offer book](https://github.com/bisq-network/bisq/pull/6777)
- [Randomly select dispute agent](https://github.com/bisq-network/bisq/pull/6776)
- [Update mediators onion addresses](https://github.com/bisq-network/bisq/pull/6811)
- [Add Bisq 2 bond roles names](https://github.com/bisq-network/bisq/pull/6762)
- [Broadcast Arbitration DPT and dispute message in parallel](https://github.com/bisq-network/bisq/pull/6818)
- [Allow arbitration tickets to be manually reopened](https://github.com/bisq-network/bisq/pull/6843)

### Bug fixes
- [Validate transactions after DAO state is ready](https://github.com/bisq-network/bisq/pull/6810)
- [Fix: BTC maker/taker fee validation](https://github.com/bisq-network/bisq/pull/6814)
- [Edit button/pen symbol stops working for altcoin offers](https://github.com/bisq-network/bisq/pull/6679)
- [Fix cutoff UTXOs in Send Funds screen](https://github.com/bisq-network/bisq/pull/6749)
- [Remove unused dependency on Pricenode metadata strings](https://github.com/bisq-network/bisq/pull/6822)

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Alejandro García): https://bisq.network/pubkey/E222AA02.asc
Full fingerprint: `B493 3191 06CC 3D1F 252E  19CB F806 F422 E222 AA02`

Import the key:
`curl https://bisq.network/pubkey/E222AA02.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.9.14.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.9.14-all.jar
The output need to match the value from the Bisq-1.9.14.jar.txt file.

There are three hashes within the Bisq-1.9.14.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.9 and the v1.9.14 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## API
[API]: #api-documentation
Starting with v1.9.0 you can use pre-built versions of the Bisq cli (bisq-cli-v1.9.14.zip) and Bisq daemon (bisq-daemon-v1.9.14.zip) to use Bisq without touching the user interface.

Just download the archives and extract them locally. You have to run the daemon to access the local Bisq daemon API endpoints.

To run daemon.jar on Mainnet:
```bash
$ java -jar daemon.jar --apiPassword=becareful
```

If you just want to control your headless daemon within your terminal you have to run the Bisq cli as well.

Again just download the bisq-cli archive and extract it locally.

To call getversion from cli.jar
```bash
$ java -jar cli.jar --password=becareful getversion
```

You can use the Bisq API to access local Bisq daemon API endpoints, which provide a subset of the Bisq Desktop application's feature set: check balances, transfer BTC and BSQ, create payment accounts, view offers, create and take offers, and execute trades.

The Bisq API is based on the gRPC framework, and any supported gRPC language binding can be used to call Bisq API endpoints.

You'll find in-depth documentation and examples under following link: https://bisq-network.github.io/slate/#introduction

Bisq gRPC API reference documentation example source code is hosted on GitHub at https://github.com/bisq-network/bisq-api-reference. Java and Python developers interested in bot development may find this Intellij project useful for running the existing examples, and writing their own bots.

For additional developer support please join [Development - Bisq v1](https://matrix.to/#/%23bisq.dev:bitcoin.kyoto) on Matrix.

## Known issues with installation 

### macOS:

We removed notarization from our build pipeline because of of the risk of Apple certification revocation (see https://github.com/bisq-network/bisq/discussions/6341). Unfortunately this will require extra steps when installing Bisq on macOS.

Please follow the guide at https://support.apple.com/en-us/HT202491 in the section If you want to open an app that hasn’t been notarized or is from an unidentified developer

If you are running already macOS Ventura (13.0+) you need to do following to be able to start Bisq:

enter following command in Apple Terminal `sudo xattr -rd com.apple.quarantine /Applications/Bisq.app`
hit enter and you will be prompted to enter your password to be able to execute the command as super user
After running this successfully you should be able to start Bisq as always.

### Windows:

We removed the developer code signing because of the same reason as with Apple.
For Windows you just have to ignore the warning after you have verified the installation file yourself and proceed with the installation.

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.9.14.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @alejandrogarcia83
- @alvasw
- @alyokaz
- @gabernard
- @HenrikJannsen
- @jmacxx
- @napoly
- @rodvar

A special thanks to our first time contributor:
- @alyokaz
- @rodvar

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.9.14</title>
    <updated>2023-10-09T22:06:35Z</updated>
    <dc:date>2023-10-09T22:06:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.11.0</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.11.0"/>
    <summary>_This release's name is dedicated to Leo. Leo is easily one of the nicest people in Bitcoin and has been active in the LNbits chat since the beginning, helping people debug, and coming up with new great ideas such as his Bitcoin Laisee (red envelopes of bitcoin given to people on the Chinese New Year). Thank you [Leo](https://twitter.com/LeoAW)!_

Among countless optimizations and stability improvements that make LNbits faster and more reliable, we are thrilled to announce a new exciting feature which we (with the incredible work of @jackstar12) have been working on for some time: The LNbits node manager.

# LNbits node manager

This release introduces the **LNbits node manager** which allows you to manage your Lightning channels directly from within your LNbits. The node manager works with **Core Lightning and LND** and we plan to add support for more Lightning backends soon. 

![telegram-cloud-photo-size-4-5834447956625964640-y](https://github.com/lnbits/lnbits/assets/93376500/39adf543-0497-4e3b-b7d8-339a02825f66)

### Channel management 
Manage your Lightning channels directly from within your LNbits.

![telegram-cloud-photo-size-4-5834447956625964638-x](https://github.com/lnbits/lnbits/assets/93376500/35817192-10ac-40c3-8e54-06e471e08d22)

### Transaction history
View the transaction history on your node to see a list of all incoming and outgoing payments.

![telegram-cloud-photo-size-4-5834447956625964634-y](https://github.com/lnbits/lnbits/assets/93376500/3068d0a3-1dcf-4d80-8a58-d86ca1951c7a)

### Public node page
The node manager also offers a public node page that you can share with others who want to open a channel to your node.

![telegram-cloud-photo-size-4-5834447956625964635-y](https://github.com/lnbits/lnbits/assets/93376500/eeb2a941-4ea4-4cf9-9ed2-86d63bbe454f)

### Activate in admin UI
You can activate the node UI in your LNbits admin panel.

![telegram-cloud-photo-size-4-5834447956625964636-y](https://github.com/lnbits/lnbits/assets/93376500/55d2472b-1262-495c-b7fb-281ea743bdbf)

# Other notable changes

### Upgrade FastAPI

We have upgraded the API framework that we use in LNbits. That means that most extensions need to be update to work with this release. Please log in as an admin user and update your extensions to the latest version after upgrading your LNbits. 
(Thank you @dni and @talvasconcelos grinding through and patching ALL the extensions)


## What's Changed
* Remove LNTXbot files by @dsbaars in https://github.com/lnbits/lnbits/pull/1921
* [REFACTOR] `.super_user` move it into data dir by @dni in https://github.com/lnbits/lnbits/pull/1900
* Add deleted flag wallet by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1826
* [REFACTOR] grpcio and protofbuf for lndgrpc is not optional by @dni in https://github.com/lnbits/lnbits/pull/1886
* [FEAT] Push notification integration into core by @schneimi in https://github.com/lnbits/lnbits/pull/1393
* [FIX] correct amount in fiat tracking by @jackstar12 in https://github.com/lnbits/lnbits/pull/1934
* [CHORE] update to version 0.11.0 by @dni in https://github.com/lnbits/lnbits/pull/1933
* [FIX] codeql for dev branch by @dni in https://github.com/lnbits/lnbits/pull/1935
* [FEAT] create data folder if it doesnt exist by @jackstar12 in https://github.com/lnbits/lnbits/pull/1930
* [FEAT] improve update_admin_settings by @dni in https://github.com/lnbits/lnbits/pull/1903
* [TEST] use clean db in postgres tests by @jackstar12 in https://github.com/lnbits/lnbits/pull/1928
* [CORE] Document CoreLightningRestWallet by @callebtc in https://github.com/lnbits/lnbits/pull/1920
* [TEST] use test data as mockdata by @jackstar12 in https://github.com/lnbits/lnbits/pull/1929
* [BUG] self payments for the same wallet by @dni in https://github.com/lnbits/lnbits/pull/1914
* [REFACTOR] core/__init__ to not have circular import issues by @dni in https://github.com/lnbits/lnbits/pull/1876
* make wallets name prettier! by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1918
* Fix payments chart by @jackstar12 in https://github.com/lnbits/lnbits/pull/1851
* [CHORE] bugfix formatting prettier by @dni in https://github.com/lnbits/lnbits/pull/1936
* do not show deleted wallets by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1942
* Extension loader: do not panic! by @callebtc in https://github.com/lnbits/lnbits/pull/1945
* Revert &quot;do not show deleted wallets&quot; by @arcbtc in https://github.com/lnbits/lnbits/pull/1947
* LNURL-pay: drop `description_hash` validation by @callebtc in https://github.com/lnbits/lnbits/pull/1951
* [CHORE] update dependencies, unsafe pip packages, fastapi by @dni in https://github.com/lnbits/lnbits/pull/1609
* [FEAT] Focus cursor to textarea by @arbadacarbaYK in https://github.com/lnbits/lnbits/pull/1959
* add editorconfig config, fix issues (only whitespace changes) by @prusnak in https://github.com/lnbits/lnbits/pull/1958
* adding bolt11 lib and removing bolt11.py from the codebase by @dni in https://github.com/lnbits/lnbits/pull/1817
* Updated dev user guide for extension development by @blackcoffeexbt in https://github.com/lnbits/lnbits/pull/1962
* Startup optimization: nonblocking expiry check by @callebtc in https://github.com/lnbits/lnbits/pull/1943
* Support custom path for installed extensions by @motorina0 in https://github.com/lnbits/lnbits/pull/1940
* [FEAT] Node Managment by @dni in https://github.com/lnbits/lnbits/pull/1895
* [FEAT] cleanup GET /wallet endpoint, add wallet api routes by @dni in https://github.com/lnbits/lnbits/pull/1932
* Don't create user if allowed users is set by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1822
* fix typos by @prusnak in https://github.com/lnbits/lnbits/pull/1969
* fix: node ranks by @jackstar12 in https://github.com/lnbits/lnbits/pull/1968
* [BUG] bundle is broken by @dni in https://github.com/lnbits/lnbits/pull/1972
* [BUG] Fix bad transation call by @motorina0 in https://github.com/lnbits/lnbits/pull/1973
* fix: catch sse exceptions by @jackstar12 in https://github.com/lnbits/lnbits/pull/1971
* Add Markdown capability globally by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1965
* feat: remove commit version by @motorina0 in https://github.com/lnbits/lnbits/pull/1980
* nix: fix nixosModule and build by @MatthewCroughan in https://github.com/lnbits/lnbits/pull/1979
* catch exceptions in migrations for extensions by @callebtc in https://github.com/lnbits/lnbits/pull/1987
* fix: admin_ui js error by @dni in https://github.com/lnbits/lnbits/pull/1982

## New Contributors
* @dsbaars made their first contribution in https://github.com/lnbits/lnbits/pull/1921
* @schneimi made their first contribution in https://github.com/lnbits/lnbits/pull/1393

**Full Changelog**: https://github.com/lnbits/lnbits/compare/0.10.10...0.11.0</summary>
    <title>lnbits/lnbits: 0.11.0</title>
    <updated>2023-10-05T10:38:53Z</updated>
    <dc:date>2023-10-05T10:38:53Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.3.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.3.0"/>
    <summary>## Summary

This update introduces several enhancements to the client's JSON-RPC interface, along with notable improvements in performance and the resolution of a few non-critical bugs.

Although this upgrade is not mandatory, **we always recommend that users upgrade their nodes to the latest version available**.

## What's New in RSKj 5.3.0

A non-comprehensive list of changes included in this version is:

- Introducing support for `blockNumber` and `blockID` arguments in the `eth_estimateGas` JSON-RPC method in [#2080](https://github.com/rsksmart/rskj/pull/2080).
- Ignore replaced transactions in pending transactions gas cost calculations in [#2105](https://github.com/rsksmart/rskj/pull/2105).
- Fix the response format on the `eth_hashrate` JSON-RPC method in [#2074](https://github.com/rsksmart/rskj/pull/2074).
- Get rid of manual command-line arguments parsing and introduce `--help` and `--version` command-line flags using the Picocli framework in [#2027](https://github.com/rsksmart/rskj/pull/2027).
- Show the `rsk_protocolVersion` JSON-RPC method return value as hexadecimal in [#2134](https://github.com/rsksmart/rskj/pull/2134).
- Support the `input` field in JSON-RPC requests for compatibility with the Web3js framework library in [#2075](https://github.com/rsksmart/rskj/pull/2075).
- Increased receipts cache size and reduced blooms block size in [#2127](https://github.com/rsksmart/rskj/pull/2127).

**Full Changelog**: https://github.com/rsksmart/rskj/compare/FINGERROOT-5.2.0...FINGERROOT-5.3.0

**Fingerroot 5.3.0 Milestone**: https://github.com/rsksmart/rskj/milestone/38

## Reproducible Build

SHA256 (see [Reproducible Build](https://dev.rootstock.io/rsk/node/security-chain/) guide for further details):
a9d5c6080aecd96c849e153dd4648072323c772f860c0c4fd812a321fc18ae90 rskj-core-5.4.0-FINGERROOT-all.jar</summary>
    <title>rsksmart/rskj: FINGERROOT-5.3.0</title>
    <updated>2023-10-05T02:22:58Z</updated>
    <dc:date>2023-10-05T02:22:58Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.117</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.117"/>
    <summary># 0.0.117 - Oct 3, 2023 - &quot;Everything but the Twelve Sinks&quot;

## API Updates
 * `ProbabilisticScorer`'s internal models have been substantially improved,
   including better decaying (#1789), a more granular historical channel
   liquidity tracker (#2176) and a now-default option to make our estimate for a
   channel's current liquidity nonlinear in the channel's capacity (#2547). In
   total, these changes should result in improved payment success rates at the
   cost of slightly worse routefinding performance.
 * Support for custom TLVs for recipients of HTLCs has been added (#2308).
 * Support for generating transactions for third-party watchtowers has been
   added to `ChannelMonitor/Update`s (#2337).
 * `KVStorePersister` has been replaced with a more generic and featureful
   `KVStore` interface (#2472).
 * A new `MonitorUpdatingPersister` is provided which wraps a `KVStore` and
   implements `Persist` by writing differential updates rather than full
   `ChannelMonitor`s (#2359).
 * Batch funding of outbound channels is now supported using the new
   `ChannelManager::batch_funding_transaction_generated` method (#2486).
 * `ChannelManager::send_preflight_probes` has been added to probe a payment's
   potential paths while a user is providing approval for a payment (#2534).
 * Fully asynchronous `ChannelMonitor` updating is available as an alpha
   preview. There remain a few known but incredibly rare race conditions which
   may lead to loss of funds (#2112, #2169, #2562).
 * `ChannelMonitorUpdateStatus::PermanentFailure` has been removed in favor of a
   new `ChannelMonitorUpdateStatus::UnrecoverableError`. The new variant panics
   on use, rather than force-closing a channel in an unsafe manner, which the
   previous variant did (#2562). Rather than panicking with the new variant,
   users may wish to use the new asynchronous `ChannelMonitor` updating using
   `ChannelMonitorUpdateStatus::InProgress`.
 * `RouteParameters::max_total_routing_fee_msat` was added to limit the fees
   paid when routing, defaulting to 1% + 50sats when using the new
   `from_payment_params_and_value` constructor (#2417, #2603, #2604).
 * Implementations of `UtxoSource` are now provided in `lightning-block-sync`.
   Those running with a full node should use this to validate gossip (#2248).
 * `LockableScore` now supports read locking for parallel routefinding (#2197).
 * `ChannelMonitor::get_spendable_outputs` was added to allow for re-generation
   of `SpendableOutputDescriptor`s for a channel after they were provided via
   `Event::SpendableOutputs` (#2609, #2624).
 * `[u8; 32]` has been replaced with a `ChannelId` newtype for chan ids (#2485).
 * `NetAddress` was renamed `SocketAddress` (#2549) and `FromStr` impl'd (#2134)
 * For `no-std` users, `parse_onion_address` was added which creates a
   `NetAddress` from a &quot;...onion&quot; string and port (#2134, #2633).
 * HTLC information is now provided in `Event::PaymentClaimed::htlcs` (#2478).
 * The success probability used in historical penalties when scoring is now
   available via `historical_estimated_payment_success_probability` (#2466).
 * `RecentPaymentDetails::*::payment_id` has been added (#2567).
 * `Route` now contains a `RouteParameters` rather than a `PaymentParameters`,
   tracking the original arguments passed to routefinding (#2555).
 * `Balance::*::claimable_amount_satoshis` was renamed `amount_satoshis` (#2460)
 * `*Features::set_*_feature_bit` have been added for non-custom flags (#2522).
 * `channel_id` was added to `SpendableOutputs` events (#2511).
 * `counterparty_node_id` and `channel_capacity_sats` were added to
   `ChannelClosed` events (#2387).
 * `ChannelMonitor` now implements `Clone` for `Clone`able signers (#2448).
 * `create_onion_message` was added to build an onion message (#2583, #2595).
 * `HTLCDescriptor` now implements `Writeable`/`Readable` (#2571).
 * `SpendableOutputDescriptor` now implements `Hash` (#2602).
 * `MonitorUpdateId` now implements `Debug` (#2594).
 * `Payment{Hash,Id,Preimage}` now implement `Display` (#2492).
 * `NodeSigner::sign_bolt12_invoice{,request}` were added for future use (#2432)

## Backwards Compatibility
 * Users migrating to the new `KVStore` can use a concatentation of
   `[{primary_namespace}/[{secondary_namespace}/]]{key}` to build a key
   compatible with the previous `KVStorePersister` interface (#2472).
 * Downgrading after receipt of a payment with custom HTLC TLVs may result in
   unintentionally accepting payments with TLVs you do not understand (#2308).
 * `Route` objects (including pending payments) written by LDK versions prior
   to 0.0.117 won't be retryable after being deserialized by LDK 0.0.117 or
   above (#2555).
 * Users of the `MonitorUpdatingPersister` can upgrade seamlessly from the
   default `KVStore` `Persist` implementation, however the stored
   `ChannelMonitor`s are deliberately unreadable by the default `Persist`. This
   ensures the correct downgrade procedure is followed, which is: (#2359)
   * First, make a backup copy of all channel state,
   * then ensure all `ChannelMonitorUpdate`s stored are fully applied to the
     relevant `ChannelMonitor`,
   * finally, write each full `ChannelMonitor` using your new `Persist` impl.

## Bug Fixes
 * Anchor channels which were closed by a counterparty broadcasting its
   commitment transaction (i.e. force-closing) would previously not generate a
   `SpendableOutputs` event for our `to_remote` (i.e. non-HTLC-encumbered)
   balance. Those with such balances available should fetch the missing
   `SpendableOutputDescriptor`s using the new
   `ChannelMonitor::get_spendable_outputs` method (#2605).
 * Anchor channels may result in spurious or missing `Balance` entries for HTLC
   balances (#2610).
 * `ChannelManager::send_spontaneous_payment_with_retry` spuriously did not
   provide the recipient with enough information to claim the payment, leading
   to all spontaneous payments failing (#2475).
   `send_spontaneous_payment_with_route` was unaffected.
 * The `keysend` feature on node announcements was spuriously un-set in 0.0.112
   and has been re-enabled (#2465).
 * Fixed several races which could lead to deadlock when force-closing a channel
   (#2597). These races have not been seen in production.
 * The `ChannelManager` is persisted substantially less when it has not changed,
   leading to substantially less I/O traffic for it (#2521, #2617).
 * Passing new block data to `ChainMonitor` no longer results in all other
   monitor operations being blocked until it completes (#2528).
 * When retrying payments, any excess amount sent to the recipient in order to
   meet an `htlc_minimum` constraint on the path is now no longer included in
   the amount we send in the retry (#2575).
 * Several edge cases in route-finding around HTLC minimums were fixed which
   could have caused invalid routes or panics when built with debug assertions
   (#2570, #2575).
 * Several edge cases in route-finding around HTLC minimums and route hints
   were fixed which would spuriously result in no route found (#2575, #2604).
 * The `user_channel_id` passed to `SignerProvider::generate_channel_keys_id`
   for inbound channels is now correctly using the one passed to
   `ChannelManager::accept_inbound_channel` rather than a default value (#2428).
 * Users of `impl_writeable_tlv_based!` no longer have use requirements (#2506).
 * No longer force-close channels when counterparties send a `channel_update`
   with a bogus `htlc_minimum_msat`, which LND users can manually build (#2611).

## Node Compatibility
 * LDK now ignores `error` messages generated by LND in response to a
   `shutdown` message, avoiding force-closes due to LND bug 6039. This may
   lead to non-trivial bandwidth usage with LND peers exhibiting this bug
   during the cooperative shutdown process (#2507).

## Security
0.0.117 fixes several loss-of-funds vulnerabilities in anchor output channels,
support for which was added in 0.0.116, in reorg handling, and when accepting
channel(s) from counterparties which are miners.
 * When a counterparty broadcasts their latest commitment transaction for a
   channel with anchor outputs, we'd previously fail to build claiming
   transactions against any HTLC outputs in that transaction. This could lead
   to loss of funds if the counterparty is able to eventually claim the HTLC
   after a timeout (#2606).
 * Anchor channels HTLC claims on-chain previously spent the entire value of any
   HTLCs as fee, which has now been fixed (#2587).
 * If a channel is closed via an on-chain commitment transaction confirmation
   with a pending outbound HTLC in the commitment transaction, followed by a
   reorg which replaces the confirmed commitment transaction with a different
   (but non-revoked) commitment transaction, all before we learn the payment
   preimage for this HTLC, we may previously have not generated a proper
   claiming transaction for the HTLC's value (#2623).
 * 0.0.117 now correctly handles channels for which our counterparty funded the
   channel with a coinbase transaction. As such transactions are not spendable
   until they've reached 100 confirmations, this could have resulted in
   accepting HTLC(s) which are not enforcible on-chain (#1924).

In total, this release features 121 files changed, 20477 insertions, 8184
deletions in 381 commits from 27 authors, in alphabetical order:
 * Alec Chen
 * Allan Douglas R. de Oliveira
 * Antonio Yang
 * Arik Sosman
 * Chris Waterson
 * David Caseria
 * DhananjayPurohit
 * Dom Zippilli
 * Duncan Dean
 * Elias Rohrer
 * Erik De Smedt
 * Evan Feenstra
 * Gabor Szabo
 * Gursharan Singh
 * Jeffrey Czyz
 * Joseph Goulden
 * Lalitmohansharma1
 * Matt Corallo
 * Rachel Malonson
 * Sergi Delgado Segura
 * Valentine Wallace
 * Vladimir Fomene
 * Willem Van Lint
 * Wilmer Paulino
 * benthecarman
 * jbesraa
 * optout</summary>
    <title>lightningdevkit/rust-lightning: v0.0.117</title>
    <updated>2023-10-04T02:29:10Z</updated>
    <dc:date>2023-10-04T02:29:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta"/>
    <summary># Database Migrations

There is a single database migration in this release. This migration deletes some space on disk that previously stored the last sweep transaction in the sweeper.

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.17.0-beta.sig` and `manifest-v0.17.0-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.17.0-beta.sig manifest-v0.17.0-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Tue Oct  3 11:03:53 2023 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimestamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.17.0-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.17.0-beta.sig.ots -f manifest-roasbeef-v0.17.0-beta.sig
```

Alternatively, [the OpenTimestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally.

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/blob/master/docs/release.md) for how this can be achieved.
The release binaries are compiled with `go1.21.0`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, `kvdb_etcd` and `kvdb_sqlite`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.17.0-beta
gpg: Signature made Tue 03 Oct 2023 05:22:22 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.17.0-beta /verify-install.sh v0.17.0-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.17.0-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.17.0-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.0-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.17.0-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.17.0.md

# Contributors (Alphabetical Order)

* Aljaz Ceru
* Amin Bashiri
* BhhagBoseDK
* Bjarne Magnussen
* Carla Kirk-Cohen
* Daniel McNally
* djkazic
* Elle Mouton
* Emilio Ziniades
* Erik Arvstedt
* ErikEk
* Eval EXEC
* feelancer21
* gabbyprecious
* George Tsagkarelis
* Guillermo Caracuel
* Hampus Sjöberg
* Harsha
* hieblmi
* Jamal James
* Jordi Montes
* Keagan McClelland
* Konstantin Nick
* Lele Calo
* Matheus Degiovani
* Matt Morehouse
* Maxwell Sayles
* Michael Street
* MG-ng
* Olaoluwa Osuntokun
* Oliver Gugger
* P. Reis
* Peter Todd
* Pierre Beugnet
* RandyMcMillan
* Satarupa Deb
* Shaurya Arora
* Slyghtning
* Suheb
* Torkel Rogstad
* Viktor Tigerström
* Yong Yu
* ziggie1984
* zx9r

</summary>
    <title>lightningnetwork/lnd: v0.17.0-beta</title>
    <updated>2023-10-03T18:16:00Z</updated>
    <dc:date>2023-10-03T18:16:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.30</id>
    <link href="https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.30"/>
    <summary>## What's Changed
* Add deterministic wallet conversions by @sstone in https://github.com/ACINQ/bitcoin-lib/pull/80
* Fix script detection helper by @t-bast in https://github.com/ACINQ/bitcoin-lib/pull/81
* Introduce TxId and TxHash types by @t-bast in https://github.com/ACINQ/bitcoin-lib/pull/76


**Full Changelog**: https://github.com/ACINQ/bitcoin-lib/compare/v0.29...v0.30</summary>
    <title>ACINQ/bitcoin-lib: v0.30</title>
    <updated>2023-10-03T11:55:34Z</updated>
    <dc:date>2023-10-03T11:55:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.9</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.9"/>
    <summary>### Migration for existing legacy wallets (v1.x)

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.8

- Added notice in home screen when incoming Lightning payments are rejected, to make them more visible.
- Added the last swap-in failed attempt in the swap-in screen.
- Several bug fixes in lightning-kmp.

**Full changelog**:
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.8...android-v2.0.9
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.6...v1.5.8

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.9</title>
    <updated>2023-09-29T08:54:35Z</updated>
    <dc:date>2023-09-29T08:54:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/raspiblitz/raspiblitz/releases/tag/v1.10.0</id>
    <link href="https://github.com/raspiblitz/raspiblitz/releases/tag/v1.10.0"/>
    <summary>Based on new RaspiOS image, increased stability &amp; much updates: Bitcoin 25.0.0, LND 0.16.4, Core Lightning 23.08.1  .. see [CHANGES](https://github.com/rootzoll/raspiblitz/blob/v1.10/CHANGES.md#whats-new-in-version-1110-of-raspiblitz) for details.</summary>
    <title>raspiblitz/raspiblitz: v1.10.0</title>
    <updated>2023-09-28T16:04:02Z</updated>
    <dc:date>2023-09-28T16:04:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.5.4</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.5.4"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.5.4</title>
    <updated>2023-09-28T12:00:56Z</updated>
    <dc:date>2023-09-28T12:00:56Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.6</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.6"/>
    <summary>An update is recommended if you share your server with many users. Your server could crash (Error HTTP 500) if you have a high number of users.

### Bug fixes

* Fix: After a while, a busy server would send error HTTP 500 (#5354) @NicolasDorier
* Fix: Exchangerate.host falsly appear as Yadio in the UI (#5347) @NicolasDorier

### Improvements

* Improve receipt info display (#5350) @dennisreimann
* Recommend Yadio for ARS currency rate (#5347) @NicolasDorier
* Recommend exchangeratehost for COP currency rate @NicolasDorier
* Hide 'Connection established' when connection to server come back (#5352) @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.11.6</title>
    <updated>2023-09-27T08:35:24Z</updated>
    <dc:date>2023-09-27T08:35:24Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.5</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.5"/>
    <summary>### New feature

* Reporting: Add payouts (#5320) @Kukks
* Wallet: Delete custom labels (#5324, #5237) @dennisreimann
* Dashboard: Show revenue data for keypad (#5317) @dennisreimann
* Dashboard: Show the number of paid invoices in the last 7 days (#5316, #5300) @dennisreimann
* Login: Add Remember Me button (#5307, #5302) @dennisreimann
* Archive stores and apps (#5296) @dennisreimann
* New permission: Can archive pull payment (#5274) @Kukks
* Pull Payment: Show QR code for LNURL-Withdraw (#5274) @Kukks

### Bug fixes

* Fix: Transient error 500 when accessing the wallet page (#5326, #5328) @NicolasDorier
* Fix: Revert to default block explorer button wasn't working (#5340) @NicolasDorier
* Payment Request: Reflect processing status for on-chain payments (#5309, #5297) @dennisreimann
* NFC: Fix error display (#5305) @dennisreimann

### Improvements

* Email Rules: Add default texts and document placeholders (#5314) @dennisreimann
* UI: The on-chain addresses should only be truncated on the middle (#5313, #5311) @dennisreimann
* Store settings: Allow configuring NFC permission beforehand (#5319) @Kukks
* Remove legacy export (#5293) @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.11.5</title>
    <updated>2023-09-22T14:49:08Z</updated>
    <dc:date>2023-09-22T14:49:08Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v2.0.2</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v2.0.2"/>
    <summary>*Please create a full backup* before migrating or any major internal changes like switching to an electrum based installation. You can easily create a backup in Settings --&gt; Backup Specter (zip file).

## Artifacts

Specter is available in several forms: as a GUI application, as a binary that can be executed like a web app, and as a PyPI package. Additionally, Specter is available as a Docker image via the awesome [Chiang Mai LN devs](https://github.com/lncm/docker-specter-desktop).

Signed hashsum files are available for all binaries.

## GUI Application

This is a GUI application with a windowed interface, which includes the Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/Specter-Setup-v2.0.2.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/Specter-v2.0.2.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/specter_desktop-v2.0.2-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out the [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).


## specterd
Specterd is a command-line program that runs only the Specter server, behaving like a traditional web application.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/specterd-v2.0.2-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/specterd-v2.0.2-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/specterd-v2.0.2-x86_64-linux-gnu.zip)

## PyPi Packages

If you’re experienced Python user and/or developer, you might appreciate the [pypi-packages](https://pypi.org/project/cryptoadvance.specter/) which are also available on our github-release-page.

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v2.0.2/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key. For more information about Verifying signatures, see, e.g. this video.

# Release notes
- Bugfix: Add missing signet key #2368 (Manolis Mandrapilias)
- Bugfix: Jade displaying wrong multisig addresses for descriptors using multi() #2366 (Manolis Mandrapilias)
- Bugfix: JSON parsing issues when copy &amp; pasting wallet data from PDF #2355 (Manolis Mandrapilias)
- Bugfix: #2319 #2330 (k9ert)
- Bugfix: fix specter.node has no _get_rpc() #2327 (k9ert)
- Bugfix: Update spotbit api url and path #2372 (Benjamin B)
- Chore(deps): Bump semver from 5.7.1 to 5.7.2 #2353 (dependabot[bot])
- Chore(deps): Bump semver from 6.3.0 to 6.3.1 in /pyinstaller/electron #2352 (dependabot[bot])
- Chore: Regex change to capture labels in wallet data imports better #2357 (Manolis Mandrapilias)
- Chore: Use prettier for Electron app  #2347 (Manolis Mandrapilias)
- Chore: Optional ENFORCE_HWI_INITIALISATION_AT_STARTUP #2383 (k9ert)
- Chore: remove SpecterUri #2358 (k9ert)
- Chore: updating flask_babel fixes #2218 #2359 (k9ert)
- Feature: Enable import of a multisig wallet that uses a multi-descriptor #2349 (Manolis Mandrapilias)
- Feature: Implement automatic wallet import via Specter URI for MacOS #2344 (Manolis Mandrapilias)
- Security: Patched Fix Electron vulnerable to out-of-package code execution when launched with arbitrary cwd #2380 (Sergev ₱)
- Security: Fix login open redirect due to next parameter manipulation #2350 (zealsham)

# Remarks
We fixed #2343 and that fix did, in some cases, cause trouble when signing transactions with Jades. If you're suffering that issue, you can enforce an hwi-initialisation which is known to fix that issue. This might then have the downside to with usb-devices being plugged in at startup.
In order to do that, you need to setup the env-var ENFORCE_HWI_INITIALISATION_AT_STARTUP to true. This is currently not that easy if you run Specter via an Application.
</summary>
    <title>cryptoadvance/specter-desktop: v2.0.2</title>
    <updated>2023-09-21T13:40:05Z</updated>
    <dc:date>2023-09-21T13:40:05Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.8</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.8"/>
    <summary>### Migration for existing legacy wallets (v1.x)

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.7

This is a bug fix release.
- Fixed an issue where payment would be prevented when channels were in closing
- Fixed an issue where swaps would not be attempted due to a race condition between the swap-in wallet and the peer connection.

Diff:
- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.7...android-v2.0.8
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.5...v1.5.6

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.8</title>
    <updated>2023-09-20T17:35:10Z</updated>
    <dc:date>2023-09-20T17:35:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.7</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.7"/>
    <summary>### Migration for existing legacy wallets (v1.x)

Users upgrading from the legacy app (1.x) to 2.x will need to migrate to be able to use 2.x features. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process. You can see what version you are currently using in Settings &gt; About.

## Changes from 2.0.6

### Electrum Client rework

The Electrum connection logic has been improved. There should be less issues with Electrum connection, especially when connection fails and needs to be reestablished. See ACINQ/lightning-kmp#512 for details

### Increased size of logs export

The log file could be sometimes truncated by the SL4J rolling system which could result in less logs than available.

### Added support for per-app localisation

Phoenix can now use a different language than the rest of the device. This feature is only available on Android 13+.

### Improved Czech and French translation

Thanks @MasterixCZ for working on this.

### Several bug fixes and UI improvements

- phoenix: https://github.com/ACINQ/phoenix/compare/android-v2.0.6...android-v2.0.7
- lightning-kmp: https://github.com/ACINQ/lightning-kmp/compare/v1.5.4...v1.5.5

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.7</title>
    <updated>2023-09-19T08:45:45Z</updated>
    <dc:date>2023-09-19T08:45:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v23.08.1</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v23.08.1"/>
    <summary>Bugfix release for bad issues found since 23.08 which can't wait for 23.11, and some minor low-impact fixes (e.g. docker images, documentation, CI).

-  JSON-RPC: Fixed a wrong number type being used in routes (#6642) and `showrunes` on a specific rune would always say `stored`: false. (#6640)
- `clnrest` now works on MacOS (#6605) 
- Build: test for `python3` or `python`, rather than assuming `python3` (#6630)
- Plugins: `renepay`: various minor fixes. (#6632)

</summary>
    <title>ElementsProject/lightning: v23.08.1</title>
    <updated>2023-09-13T20:30:34Z</updated>
    <dc:date>2023-09-13T20:30:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.6</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.6"/>
    <summary>### Migration for existing legacy wallets (v1.x)

For users upgrading from the legacy Phoenix Android app (1.x) to 2.x, a migration is needed. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process.

## Changes from 2.0.5

### Fixed several issues related to LNURL

- withdrawals will now offer the user to withdraw the maximum amount available, instead of the minimum;
- LUD-17 urls (starting with `lnurlp`, `lnurlw`, `keyauth`) are now properly parsed.

### The Czech translation has been improved

Thanks @MasterixCZ and @margre8 for working on this.

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.6</title>
    <updated>2023-09-13T13:28:11Z</updated>
    <dc:date>2023-09-13T13:28:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.10.10</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.10.10"/>
    <summary>## What's Changed
* CI adjustment - Pinkify Legend by @arbadacarbaYK in https://github.com/lnbits/lnbits/pull/1766
* Fixed favicon to be clearer, and still use older bolt by @arcbtc in https://github.com/lnbits/lnbits/pull/1811
* Update README.md by @arcbtc in https://github.com/lnbits/lnbits/pull/1818
* Update poetry to 1.5.1 by @dni in https://github.com/lnbits/lnbits/pull/1804
* quickfixs failing checks on main by @dni in https://github.com/lnbits/lnbits/pull/1819
* remove extensions dir completly, create it on startup by @dni in https://github.com/lnbits/lnbits/pull/1778
* Increase default invoice expiry to 1 hour by @dni in https://github.com/lnbits/lnbits/pull/1825
* Data returned from wallet websocket was not json by @arcbtc in https://github.com/lnbits/lnbits/pull/1823
* add github workflow for checking openapi by @dni in https://github.com/lnbits/lnbits/pull/1551
* Fix admin notifications by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1803
* Wallets: Catch errors during cleanup by @callebtc in https://github.com/lnbits/lnbits/pull/1829
* update embit to 0.7.0 by @dni in https://github.com/lnbits/lnbits/pull/1777
* [Wallets] CLN: fix pending state check by @callebtc in https://github.com/lnbits/lnbits/pull/1770
* fix ugly printed error of uvicorn.error by @dni in https://github.com/lnbits/lnbits/pull/1833
* follow redirect for lnurls by @dni in https://github.com/lnbits/lnbits/pull/1832
* FEAT: proper failing invoice/payment responses for VoidWallet by @dni in https://github.com/lnbits/lnbits/pull/1805
* Adding Start9 by @k0gen in https://github.com/lnbits/lnbits/pull/1834
* Fix drawer by @talvasconcelos in https://github.com/lnbits/lnbits/pull/1836
* Ads layout fix by @k0gen in https://github.com/lnbits/lnbits/pull/1835
* websocket internal payment notifications by @jackstar12 in https://github.com/lnbits/lnbits/pull/1831
* TEST: add hold invoices to test helpers and a basic test by @dni in https://github.com/lnbits/lnbits/pull/1838
* remove nested filters by @jackstar12 in https://github.com/lnbits/lnbits/pull/1843
* Bug: invalid type converter by @jackstar12 in https://github.com/lnbits/lnbits/pull/1842
* Tests: hold invoice tests pending during payment by @callebtc in https://github.com/lnbits/lnbits/pull/1839
* UI: paste payment request from clipboard by @callebtc in https://github.com/lnbits/lnbits/pull/1845
* add cache utility by @jackstar12 in https://github.com/lnbits/lnbits/pull/1790
* support uvicorn reload functionality by @jackstar12 in https://github.com/lnbits/lnbits/pull/1841
* UI: hide paste payment request in unsupported environments by @michael1011 in https://github.com/lnbits/lnbits/pull/1853
* [TEST] proper credit_wallet function from services for test helpers by @dni in https://github.com/lnbits/lnbits/pull/1862
* Fix csv export by @jackstar12 in https://github.com/lnbits/lnbits/pull/1852
* [CHORE] E722 bare exception fix by @dni in https://github.com/lnbits/lnbits/pull/1871
* [CHORE] flake8 issues E402, E721 and F821 by @dni in https://github.com/lnbits/lnbits/pull/1874
* [CHORE] fix pyright warning in db.py by @dni in https://github.com/lnbits/lnbits/pull/1868
* [TEST] improved logs for tests by @dni in https://github.com/lnbits/lnbits/pull/1866
* [CHORE] cln.py pyln-client is not optional by @dni in https://github.com/lnbits/lnbits/pull/1859
* [TEST] update pytest-cov to remove warnings by @dni in https://github.com/lnbits/lnbits/pull/1867
* [BUG] dont install default extensions for tests by @dni in https://github.com/lnbits/lnbits/pull/1861
* [FEATURE] Adding coverage for 'lntbs' signet prefix by @enaples in https://github.com/lnbits/lnbits/pull/1881
* [TEST] run tests.yml on py39 and py310 by @dni in https://github.com/lnbits/lnbits/pull/1882
* FEAT: add installed extensions to log by @dni in https://github.com/lnbits/lnbits/pull/1857
* [REFACTOR] cleanup views/api.py by @dni in https://github.com/lnbits/lnbits/pull/1865
* feat: catch wallet init exception, string formatting for app.py by @dni in https://github.com/lnbits/lnbits/pull/1846
* cancel all long-running tasks by @jackstar12 in https://github.com/lnbits/lnbits/pull/1793
* Add description to POST v1/payments endpoint. by @stackregister in https://github.com/lnbits/lnbits/pull/1848
* [REFACTOR] payments sse endpoint by @jackstar12 in https://github.com/lnbits/lnbits/pull/1781
* Update payments on invoice creation by @jackstar12 in https://github.com/lnbits/lnbits/pull/1782
* [DEV] add ruff for linting and combine linters into one workflow by @dni in https://github.com/lnbits/lnbits/pull/1875
* [FEAT] add `lnbits-cli` for commands.py by @dni in https://github.com/lnbits/lnbits/pull/1890
* Wallets: add cln-rest by @callebtc in https://github.com/lnbits/lnbits/pull/1775
* [REFACTOR] WalletType into enum by @dni in https://github.com/lnbits/lnbits/pull/1888
* [FEAT] save fiat amount in api_create_invoice by @dni in https://github.com/lnbits/lnbits/pull/1869
* [CHORE] update pyln-client by @dni in https://github.com/lnbits/lnbits/pull/1894
* [CHORE] update mypy and new issues by @dni in https://github.com/lnbits/lnbits/pull/1892
* [BUG] use WalletType for get_wallet_for_key fn by @dni in https://github.com/lnbits/lnbits/pull/1896
* [CHORE] string formatting default length 88 by @dni in https://github.com/lnbits/lnbits/pull/1887
* [CHORE] improve on fastapi / openapi docs by @dni in https://github.com/lnbits/lnbits/pull/1795
* optimize balances view by @jackstar12 in https://github.com/lnbits/lnbits/pull/1779
* [CI] improve on github workflows by @dni in https://github.com/lnbits/lnbits/pull/1889
* [REFACTOR] do not throw an exception in list_parse_fallback by @dni in https://github.com/lnbits/lnbits/pull/1891
* [REFACTOR] proper create_invoice responses for descriptions by @dni in https://github.com/lnbits/lnbits/pull/1863
* refactor exchange rates by @jackstar12 in https://github.com/lnbits/lnbits/pull/1847
* [CHORE] remove redundant mocks by @dni in https://github.com/lnbits/lnbits/pull/1902
* [CHORE] cleanup cache and exception on `make test` by @dni in https://github.com/lnbits/lnbits/pull/1899
* [REFACTOR] replace async_wrap with run_sync by @dni in https://github.com/lnbits/lnbits/pull/1858
* track fiat value of payments by @jackstar12 in https://github.com/lnbits/lnbits/pull/1789
* [FIX] fakewallet: set tag of description_hash invoice correctly by @callebtc in https://github.com/lnbits/lnbits/pull/1901
* update to version 0.10.10 by @dni in https://github.com/lnbits/lnbits/pull/1773
* [TEST] add codecov token to workflow by @dni in https://github.com/lnbits/lnbits/pull/1908
* [TEST] workflows, added 10s timeout to `lncli` subprocess and logging by @dni in https://github.com/lnbits/lnbits/pull/1910

## New Contributors
* @k0gen made their first contribution in https://github.com/lnbits/lnbits/pull/1834
* @michael1011 made their first contribution in https://github.com/lnbits/lnbits/pull/1853
* @enaples made their first contribution in https://github.com/lnbits/lnbits/pull/1881
* @stackregister made their first contribution in https://github.com/lnbits/lnbits/pull/1848

**Full Changelog**: https://github.com/lnbits/lnbits/compare/0.10.9...0.10.10</summary>
    <title>lnbits/lnbits: 0.10.10</title>
    <updated>2023-09-11T10:07:28Z</updated>
    <dc:date>2023-09-11T10:07:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.5.3</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.5.3"/>
    <summary>## What's Changed
* use Promise.all in getNextAddress by @louisinger in https://github.com/vulpemventures/marina/pull/479
* Update to latest `Ionio`, `liquidjs-lib` and `@vulpemventures/secpk256k1-zkp` by @louisinger in https://github.com/vulpemventures/marina/pull/480
* Fix and test transaction displaying by @louisinger in https://github.com/vulpemventures/marina/pull/486
* `marina.sendTransaction`:  fix amount formatting  by @louisinger in https://github.com/vulpemventures/marina/pull/491
* add `publicKey` member in Address by @louisinger in https://github.com/vulpemventures/marina/pull/492


**Full Changelog**: https://github.com/vulpemventures/marina/compare/v0.5.2...v0.5.3</summary>
    <title>vulpemventures/marina: v0.5.3</title>
    <updated>2023-09-09T00:34:30Z</updated>
    <dc:date>2023-09-09T00:34:30Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.2.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.2.0"/>
    <summary>## Summary

This update establishes RocksDB as the default storage library, delivering relevant performance enhancements for database operations. It's important to emphasize that **nodes currently utilizing LevelDB will remain unaffected by this update**. To switch to RocksDB as the default database, users must take the following steps: delete their existing database files and restart the node to perform a complete blockchain synchronization.

Although this upgrade is not mandatory, **we always recommend that users upgrade their nodes to the latest version available**.

## What's New in RSKj 5.2.0

A non-comprehensive list of changes included in this version is:

* Make `RocksDb` the default database library in [#2063](https://github.com/rsksmart/rskj/pull/2063).
* Change default `networkCidr` config value in [#2070](https://github.com/rsksmart/rskj/pull/2070).

**Full Changelog**: https://github.com/rsksmart/rskj/compare/FINGERROOT-5.1.0...FINGERROOT-5.2.0

**Fingerroot 5.2.0 Milestone**: https://github.com/rsksmart/rskj/milestone/37

## Reproducible Build

SHA256 (see [Reproducible Build](https://dev.rootstock.io/rsk/node/security-chain/) guide for further details):
70ae5209720ad6477c1c32d8a8d94e29ebb0db25d57e9903546519d614eddf9f rskj-core-5.2.0-FINGERROOT-all.jar</summary>
    <title>rsksmart/rskj: FINGERROOT-5.2.0</title>
    <updated>2023-09-05T16:04:59Z</updated>
    <dc:date>2023-09-05T16:04:59Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-core/secp256k1/releases/tag/v0.4.0</id>
    <link href="https://github.com/bitcoin-core/secp256k1/releases/tag/v0.4.0"/>
    <summary>This release adds a new `ellswift` module that implements ElligatorSwift encoding for public keys and x-only Diffie-Hellman key exchange for them.

For a list of changes, see the [CHANGELOG.md](https://github.com/bitcoin-core/secp256k1/blob/master/CHANGELOG.md#040---2023-09-04).</summary>
    <title>bitcoin-core/secp256k1: v0.4.0</title>
    <updated>2023-09-04T16:49:43Z</updated>
    <dc:date>2023-09-04T16:49:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.4</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.4"/>
    <summary>Minor update recommended for deployment stacks which were using MySQL/SQLite backend in the past such as Raspiblitz, Umbrel, Embassy OS.

We fix a migration to postgres error that has been introduced a few versions ago.

### New feature

* Display wallet balance in default currency in the on-chain wallet navigation (#5281) @vbouzon

### Bug fixes

* Fix: Error on the MigrationStartupTask (#5233) @NicolasDorier
* Fix: The &quot;Open in wallet&quot; button in the checkout page was not working properly on some browsers (#5284) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.11.4</title>
    <updated>2023-09-02T14:28:20Z</updated>
    <dc:date>2023-09-02T14:28:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.5</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.5"/>
    <summary>### Migration for existing legacy wallets (v1.x)

For users upgrading from the legacy Phoenix Android app (1.x) to 2.x, a migration is needed. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process.

## Changes from 2.0.4

### Added localisation for 🇩🇪 German, 🇪🇸 Spanish, 🇵🇹 Portuguese and 🇨🇿 Czech localisation. 

Thanks @myxmaster for the help with German translation!

Spanish, Portuguese, and Czech localisation are partial, and may not be accurate. However, it's still better than just displaying English.

### Handle callback action for sucessful LNURL payments

Also, LNURL payments made prior to this version should display the `successAction` result correctly. See #404.

### Add warning regarding legacy swap addresses

For users who migrate from v1.4.x, warnings have been added about reusing legacy swap-in addresses. These addresses should not be used anymore after migration. The new wallet will only support the new address displayed in the receive screen.

If an old legacy address has benn used after the migration is done, contact support: phoenix@acinq.co

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.5</title>
    <updated>2023-09-01T19:04:07Z</updated>
    <dc:date>2023-09-01T19:04:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.7.9</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.7.9"/>
    <summary>- Add wallet accounts summary dialog (View menu)
- Support import and export of keystore labels in descriptor (`ur:crypto-output`) QR codes
- Propagate transaction label changes to inputs, outputs and addresses where their existing labels were set in the same manner
- Upgrade to HWI v2.3.1
- Suggest clearing any existing keystores when the script type is changed in the Settings tab
- Add fulcrum.sethforprivacy.com public mainnet Electrum server
- Avoid adding inputs when constructing a consolidation transaction replacement, allowing output to decrease
- Add `mempoolFullRbf` config variable to enable RBF functionality on mempool transactions without checking sequence flags (default false)
- Refactor transaction and UTXO table column sorting, add default sorting on new history if table was previously empty
- Add tooltip to account tab where label is truncated
- Add Jade multisig wallet import
- Bug fix: In Terminal, check if theme is present to avoid exception on UTXO history update
- Bug fix: Support CompactSeedQR scanning using zbar
- Bug fix: Fix single character multisig threshold parsing issue
- Bug fix: Handle Bitcoin Core bug where `listwalletdir` returns empty results even when wallets are loaded
- Bug fix: Use `ControlPort auto` instead of UNIX socket for internal Tor control to avoid a bug where UNIX socket path is too long
</summary>
    <title>sparrowwallet/sparrow: 1.7.9</title>
    <updated>2023-08-31T11:25:46Z</updated>
    <dc:date>2023-08-31T11:25:46Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.4</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.4"/>
    <summary>### Migration for existing legacy wallets (v1.x)

For users upgrading from the legacy Android app (1.x) to Android 2.x, a migration is needed. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process.

## Changes from 2.0.2

This release fixes several issues and brings a few improvements in the app.

### Swaps are now attempted at each block

Previous versions required the app to be restarted in order to attempt pending swap-ins. This is not the case anymore, the app will attempt swaps at each new block. System notifications for failed swaps have been reduced to prevent spam.

### Added link to scanner in receive screen

Receiving funds over LNURL required users to click on Send in order to open the scanner, which is counterintuitive. This has been fixed by adding back the &quot;Use LNURL link&quot; button in the Receive screen, like in the legacy app.

### Other

- Reconnecting to the Peer and the Electrum servers should be snappier
- Fixed an issue where connection to the Peer would not be made (#400)

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.4</title>
    <updated>2023-08-30T09:29:10Z</updated>
    <dc:date>2023-08-30T09:29:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.3"/>
    <summary>### Bug fixes

* Fix LNDHub connection strings parsing @Kukks
* Paying through LNDHub with an explicit amount wouldn't send the right amount @Kukks
* The `Open with wallet` deep link in the checkout page wasn't working properly on some browsers. @dennisreimann
* POS: Fix alignment of items in static view (#5271) @dennisreimann
* Only show LNAddress section if the user has the permission @Kukks
* Fix crash on /wallets/transactions with non zero skip parameter (#5183) @NicolasDorier
* Do not block payments on LN while syncing if it is not internal node (#5269) @Kukks
* Fix LN payout manual payments UI crashing when payouts are not tied to pull payment @Kukks 

### Improvements

* If the PoSData property is a stringified JSON, presents it nicely in invoice details (#5275) @dennisreimann
* POS: Unify item display in editor (#5266 #5272) @dennisreimann
* remove store ID from view request url (#5256) @dstrukt
</summary>
    <title>btcpayserver/btcpayserver: v1.11.3</title>
    <updated>2023-08-26T12:16:21Z</updated>
    <dc:date>2023-08-26T12:16:21Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.2</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.2"/>
    <summary>This release bumps the minimal Android version to android 8+ to prevent installing the app on old, incompatible devices.

Users with Android 7.1 or older can still use version 1.4.27, but we strongly recommend upgrading to a recent Android version that receives security patches.

### Migration for existing wallets

For users upgrading from the legacy app (1.x) to the new app, a migration is needed. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process.

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.2</title>
    <updated>2023-08-24T13:09:28Z</updated>
    <dc:date>2023-08-24T13:09:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v23.08</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v23.08"/>
    <summary>We're pleased to announce the 23.08 release of Core Lightning, named by Matt Morehouse.

For a list of all changes, please see the [changelog](https://github.com/ElementsProject/lightning/blob/v23.08/CHANGELOG.md)

## Highlights for Users

- Several pay plugin improvements for better payment reliability.
- New `setconfig` command to change config lines dynamically without node restart: limited now, but more coming in future.
- BIP-93 seed backup support thanks to @adi2011's [Summer of Bitcoin](https://www.summerofbitcoin.org/) project.
- @Lagrang3 (under a grant from [BuildOnLayer2](https://community.corelightning.org/c/start-here/build-on-l2-awards-10k-grant-for-core-lightning-pay-plugin-development)) implemented Pickhardt Payment in a new experimental `renepay` plugin (and corresponding `renepay` command) offers a much more sophisticated method of making payments (and much more experimental!).

## Highlights for the Network

- Per-channel `ignorefeelimits` setting for getting fee disagreements unstuck.
- Taproot address support: now the default for change addresses.
- Preemptive failure of incoming HTLCs if the outgoing is stuck due to high fees, to avoid channel loss.
- Dual-funding has been tweaked to the latest spec, but it's still experimental.
- The new `experimental-splicing` option implements the new splicing draft to move funds in and out of live channels.

## Highlights for Developers

- A new `wait` command supports `invoices`, along with `listinvoices` allowing ordering and pagination (with more commands to come!)
- pay supports self-payment: you can pay your own invoices.
- pay int a bolt11 with a description hash without providing a description has been temporarily *undeprecated* (but descriptions now work properly with \\ in them now!).
- Experimental builds are no longer required: all experimental features are now explicit runtime options.
- User-defined tracepoints have been added to the a few paths, to help with tracing bottlenecks in production systems.

Since 23.05, we've had 660 commits by 37 authors in 104 days!

A special thanks to the 12 first time contributors:

- Eduardo Quintana
- sumBTC
- Paul Miller
- Orbital
- Jonathan Underwood
- Ilya Evdokimov
- Erik De Smedt 
- Chase
- Bryan Ramos
- Bitkarrot
-  avatar4d 
- Amin Bashiri

~ @rustyrussell, @ShahanaFarooqui, @EndothermicDev, @cdecker, and @niftynei</summary>
    <title>ElementsProject/lightning: v23.08</title>
    <updated>2023-08-23T20:03:31Z</updated>
    <dc:date>2023-08-23T20:03:31Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.4</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.4"/>
    <summary>### _[Wasabi](https://WasabiWallet.io) is an easy to use, privacy-focused, open-source, non-custodial, Bitcoin wallet_

# Download

:window: [Windows](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4/Wasabi-2.0.4.msi)
:green_apple: [Apple M1/M2](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4/Wasabi-2.0.4-arm64.dmg)
:apple: [Apple Intel](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4/Wasabi-2.0.4.dmg)
:penguin: [Ubuntu / Debian](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4/Wasabi-2.0.4.deb)
:penguin: [Other Linux](https://github.com/zkSNACKs/WalletWasabi/releases/download/v2.0.4/Wasabi-2.0.4.tar.gz)

---

## Release Highlights

⏩ Faster wallet load
🚀 Speed up unconfirmed transactions
🛡️ Privacy warnings and improvement suggestions for payments
🐳 Cheaper coinjoins especially for whales
👻 Headless daemon and improved RPC interface
📸 QR code scanning on linux

## Release Summary

#### Turbosync Drastically Reduces Wallet Load Times

This release optimizes the filter checking process to reduce wallet loading times by 90% thanks to code cleanup and a clever key prioritization process dubbed “Turbosync”. With Turbosync, internal addresses that have already been used are not checked for coins in new blocks until after unused addresses have been checked first. 

#### Don’t Float in the Mempool

Incoming funds can now be confirmed faster with Child Pays For Parent (CPFP) to self-spend an unconfirmed UTXO, and outgoing transactions can use Replace By Fee (RBF) to increase confirmation priority or cancel the payment entirely. You don't have to worry about the details, it just works magically under the hood. 

#### Privacy Warnings and Spending Suggestion

New Privacy Warnings present users with one click fixes if they are attempting to construct a transaction that spends nonprivate funds or creates change. Notifications are provided when consolidating more than 10 UTXOs or spending unconfirmed funds, allowing users to avoid potential mistakes without restricting intentional usage.

#### More Privacy, Less Blockspace

The amount decomposer was refined to make the most effective use of scarce block space so that whales who set a high anonymity score target now need fewer coinjoin rounds to reach 100% privacy. The amount of outputs a client can create in a round has been increased from 8 to 10, and decompositions that produce change outputs are now rarely chosen. Adjustments to the anonymity score calculator and default settings additionally reduce the amount of coinjoining required before all coins are considered private. The anonymity score target of the “Maximize Privacy” coinjoin strategy setting was reduced from a random value between 50-100 to a less conservative range of 27-76, which brings the behavior closer in line with the two efficiency based strategies.

#### A specter is haunting this world

Wasabi now has a daemon! More experienced users can directly interact with core features of the wallet through an RPC (Remote Procedure Call) interface making it easy for developers to customize their experience and build features that are not available in the GUI version. This release bundles the Daemon, an executable called ‘wassabeed’ that runs the wallet without the graphical interface. The wallet can be run in the background by using the RPC interface, or the [Wasabi command line interface](https://github.com/zkSNACKs/WalletWasabi/blob/master/Contrib/CLI/README.md) allowing users to coinjoin, see their balance, and perform every other function of the wallet without the resource consumption of the graphical interface.

#### Penguins love black and white

Wasabi can now scan QR codes on Linux computers. This makes importing an address from a phone a lot more private, easier and faster. This feature is now available for Linux and Windows, but not yet for macOS.

#### Database migration to SQLite

Wallet loading speed improved even more by storing the filters in an SQLite database instead of a plaintext file, reducing disk space requirements by about 1 GB and increasing resilience against file corruption.

#### Fighting Entropy

Included are several updates to dependencies (HWI, Tor, Avalonia) and a lot of the usual bug squashing and UI polishing.

Read the [related blog](https://blog.wasabiwallet.io/free-transactions-from-being-stuck-in-the-mempool/) for more information. 

---

## Installation Guide

Download the operating system relevant software package and install Wasabi like you would any other software on your computer. For a detailed installation guide, including **signature verification**, see [the documentation](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html).

## Advanced Guide

If you want to build or update Wasabi from source code, check out [these easy instructions](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html).

Wasabi uses [reproducible builds](https://reproducible-builds.org/), which you can verify with [this guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md).

## Documentation

:spider_web: [Website](https://wasabiwallet.io)
:onion: [Tor onion site](http://wasabiukrxmkdgve5kynjztuovbg43uxcbcxn6y2okcrsg7gb6jdmbad.onion/)
:orange_book: [Docs](https://docs.wasabiwallet.io)
:grey_question: [FAQ](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq)

## Requirements 
- Windows 10 1607+
- Windows 11 22000+
- macOS 10.15+
- Ubuntu 18.04+
- Fedora 36+
- Debian 10+

---

## Full Changelog

* [website] Mobile fixes by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/9808
* [trivial] `ByteHelpers`: Fix namespace by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9828
* `Guard.NotNull`: Make sure analyzers will know that T was not `null` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9829
* Minor log improvement in Warden  by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/9832
* [Trivial] WasabiSetupRegtest.md: Update CcjRoundsConfig by WabiSabiConfig by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/9831
* Add Github vulnerability reporting by @MaxHillebrand in https://github.com/zkSNACKs/WalletWasabi/pull/9825
* [Trivial] Fix some namespaces by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9842
* [VDG] Fix exception of Ctrl+C by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9692
* [Trivial] Update license by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9848
* [Trivial] Fix formatting by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9849
* Add softwareexpiry=0 to knots parameters by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/9872
* `P2pBlockProvider`: Minor changes by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9851
* [website] Added sitemap to robots.txt by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/9870
* [Trivial][Refactoring] Use compound assignment by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9869
* [Trivial] Simplify new expression by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9875
* [VDG] Coin Control Stage 2 by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/9774
* Select coins from reused address by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/9782
* [Trivial] Make struct 'readonly' by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9876
* More friendly HWI error message on timeout by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/9833
* [VDG] Add wallet items to search bar by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9700
* fix namespace by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9883
* [Trivial] Use pattern matching by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9882
* [trivial] minor musicbox message improvement by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/9890
* [VDG] Simplify insufficient balance handling by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9508
* [VDG] Refactor navbar by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9725
* [VDG] [Trivial] Remove unused control NavBarListBox by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9905
* [VDG] fix build by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9906
* [Easy] `CoreNode`: Add constructor by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9880
* Re-enable coinjoins with taproot outputs by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/9710
* [VDG] [Trivial] Remove unused control BindableGrid by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9903
* [VDG] [Trivial] Remove unused control NavBarTreeView by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9902
* Signs even in when receives more money than excpected by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/9892
* [VDG] Remove unused icon assets. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/9913
* [VDG] Disable ToggleSwitch knobs transitions to fix delay of switch toggle as settings by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9912
* `TorProcessManager`: Re-throw exception by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9910
* Upgrade to Tor 0.4.7.12 (contains native macOS arm64 build) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9897
* Remove `BaseKeyChain` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9830
* Rename fallback to blame in music box by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/9874
* Cleanup all code using CodeMaid by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9850
* Update macOS icon again. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/9901
* [VDG] Fix memory leak and navigation issue during loading by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9726
* [VDG] Add TryGetSelectedWalletViewModel to WalletManagerViewModel by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9918
* [VDG] Remove unused DataTemplateSelector class by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9922
* [VDG] Remove old legal placeholder graphics with wasabi logo. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/9916
* [VDG] Add paste suggestion flyout by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/9820
* [VDG] Move global static classes to root folder by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9932
* [VDG] Cleanup behaviors naming and move types to models by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9930
* [VDG] Remove redundant this qualifier by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9923
* [trivial] Minor cleanups by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9927
* [Trivial] Remove unnecessary suppression by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9942
* Remove segwit limitation for change outputs by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/9909
* [Trivial] Remove unnecessary curly brackets by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9934
* `IndexStore`: Simplify `ForeachFiltersAsync` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9926
* [VDG] [Trivial] Remove unused NavBarTreeItem control by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9950
* [VDG] Fix Wallet Coins view discrete mode by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9946
* [VDG] Refactor TreeDataGrid column creation into methods by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9949
* Update WW1 Legal docs by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8192
* [Trivial] Fix name violation by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9935
* [Trivial] Use expression body by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9938
* Remove unused parameters by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9941
* `ProcessAsync`: Cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9961
* `CoreNode`: Remove a few more warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9969
* Call Money() instead of ambigus with long CoinJoinWithBlameRoundTestAsync by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/9965
* Fix randomization of output types by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/9973
* Refactor WhiteList by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/9963
* Small preparation for payments in coinjoins by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/9967
* [VDG] Remove unused controls by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/9979
* [VDG] Copy balance from tile by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/9937
* [VDG] Fix CS0420 for _isLoading field in loading view model by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9933
* [VDG] [Taproot UI support] #3 - Display Taproot ExtPubKey and DerivationPath in Wallet Info by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/9741
* Remove `GetBitcoinCoreVersionAsync` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9928
* [VDG] Realign NavBarItem element margins and heights. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/9986
* Add round independent by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/9974
* Fix Whitelist LastSavedChangeId property by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/9990
* `TorProcessManager`: Check our permissions wrt Tor process by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9960
* `ConfigBase` with file read &amp; write synchronization by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8074
* [VDG] Coin Control Stage 3 by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/9975
* [VDG] Add .editorconfig to silence all .NET analyzers in Models/Windows directory by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9924
* Use IDictionary.TryGetValue(TKey, out TValue) method by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9877
* [VDG] Authorize wallet info when navigated from search bar by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9989
* [Trivial] Use local function by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9881
* [VDG] [Trivial] Enable clipboard copy item in Transaction Preview by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/9853
* [VDG] Use BindPointerOverBehavior in MusicControlsView by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9943
* Remove unecessary Task.Run by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10007
* [PoC] Exclude Coins from CoinJoining by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/9925
* add latest Bitcoin Core versions to constants by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/9999
* [VDG] replace `Select(_ =&gt; Unit.Default)` with `ToSignal()` by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10000
* Start CJ with only pending coins by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10008
* [VDG] PrivacyBar refactor into Custom Control by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/9981
* Check address used by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10018
* Improve logging by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10020
* CoinHelpers and starting CJ with empty coins consistency by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10019
* Fix my mistake by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10022
* Retry API request by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10027
* [VDG] enable selection of CJing coins by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10001
* [VDG] Fix FadeOutTextBlock not updating on text change. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/10036
* Make sure content is re-created in every iteration by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10038
* Separate wasabi and wabisabi clients by @Kukks in https://github.com/zkSNACKs/WalletWasabi/pull/8852
* [VDG] fix balance format by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10035
* Upgrade NBitcoin version from 7.0.14 to 7.0.24 by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10042
* [trivial] `IdempotencyRequestCache`: Fix warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10037
* [Tor] Minor refactoring by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10030
* Fix coins dialog on address reuse by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10041
* Fix feature request workflow by @BTCparadigm in https://github.com/zkSNACKs/WalletWasabi/pull/10039
* [trivial] Fix warning in `CoinJoinClient` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10052
* Fix dust attack prevention logic by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10046
* Fix relative path in uri by @Kukks in https://github.com/zkSNACKs/WalletWasabi/pull/10024
* [VDG] Wallet Coins - fix memory leak by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10050
* [VDG] `CoinJoinStateViewModel` - Cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10026
* [VDG] Recovery words option - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9998
* [VDG] Verify Recovery Words - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9997
* [VDG] Recover Wallet - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9996
* TransactionSizeException - add failing test by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/9625
* Non default ServiceConfiguration at client init by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10045
* [VDG] Fix HoldKeyBehavior stuck when MainWindow deactivated by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10054
* Fix style (take 2) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10058
* [Tor] Minor improvements by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10053
* [Trivial] Use field by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/9940
* Fix some CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10073
* `Config`: Merge load methods by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10077
* [VDG] Coin Control - Rebuild data source when coins change by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10066
* [Trivial] Add indentation preference in .editorconfig files by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10069
* Remove `Config.TryEnsureBackwardsCompatibility` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9958
* Retry in case of exception/timeout of HttpClient by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10075
* P2PBlockProvider refactor by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10017
* Quick fix for incorrect fee issue by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10095
* Fix some dictionaries by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10088
* [Trivial] Remove unnecessary dollar sign '$' by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10087
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10093
* [Trivial] Remove unnecessary suppressions by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10070
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10107
* Improve log message by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10098
* Add request time statista for requests by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10110
* Do not enforce identity change when connecting to p2p nodes by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10062
* remove local from InvalidOperationException by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10009
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10113
* Add missing equality comparer by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10116
* Fix the impossible :) by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10117
* Fix missing navbar wallet icon resources by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/10121
* [VDG] Coin freeze - remove leftover by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10074
* [VDG] Close address displaying dialog when received funds by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10082
* [VDG] Send - fix labels for coin list by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10109
* [VDG] Fix splash animation by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10089
* Fix removal of items when task is completed by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10115
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10125
* [trivial] `IndexBuilderService`: nits by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10118
* [Trivial] Fix CodeFactor issues in ApplicationStateManager.cs by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10128
* State machine will follow the business logic (continuation) by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10059
* State machine will follow the business logic by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10032
* BnB: Trivial changes by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10134
* Add comment for future debugs by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10140
* [VDG] Disable splash animation on full private wallets by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10143
* Fix wallet start hidden by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10123
* Affiliate server integration by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10091
* Creates UT to verify script type of change outputs by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10163
* [trivial] Use raw-string literals + minor cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10162
* [Affiliate server] Fix flaky `AffiliateServerStatusUpdaterTests.GetStatusTestAsync` test by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10169
* Updated PGP until 2028.02.24. by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/10138
* Move CTS to caller by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10174
* Key generator for affiliation server by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10176
* [Trivial] Fix typos by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10179
* Put back RIDs by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10147
* [VDG] Fix copy button by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10157
* [VDG] Privacy Ring - attempt to fix double animation by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10161
* [VDG] Fix fee slider value &quot;randomly&quot; gets reset by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10148
* [VDG] fix confusing wrong message about passphrase by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10146
* [VDG] UI Decoupling #1 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10165
* Move CTS closer to its usage by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10191
* Fix coinjoin EffectiveFeeRate issue with reverse calculation by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10151
* Upgrade to Tor 0.4.7.13 (Windows on x64 instead of x86) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10188
* Bump client version to 2.0.2.2 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10201
* Orgainize contrib by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10204
* Fix Tor Browser ChangeLog URL by @kristapsk in https://github.com/zkSNACKs/WalletWasabi/pull/10192
* Faster `SpecificNodeBlockProvider`  by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10119
* No retries in case of Timeout by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10139
* Improve log message by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10090
* [trivial] Typos by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10205
* [VDG] UI Decoupling #2 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10166
* Change default backend URIs to new API hostnames by @kristapsk in https://github.com/zkSNACKs/WalletWasabi/pull/9995
* [VDG] Ask user to check the hardware wallet when confirming by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10214
* Use less strict condition in anonymity computation by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/10100
* Maximize parallel request to 30 (take 2) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10153
* Limit parallels reissuance requests to 10 by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10223
* [trivial] Fix a few warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10234
* [IndexStore][trivial] Fix test location by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10236
* IndexStore: Trivial cleanups by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10230
* Amountdecomposer with Taproot by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10071
* [Trivial] Simplify 'new' expression by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10237
* Bump version to v2.0.3 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10241
* Revert &quot;Bump version to v2.0.3&quot; by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10242
* [trivial] Remove unused variable by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10225
* [VDG] UI Decoupling #3 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10167
* [VDG] Rename cc title by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10251
* Add sample for tx history update event on new filter by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10245
* [easy] `IndexStore`: Unify CT param names and use test deadlines in tests by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10247
* `IndexStore`: Remove always `true` `deleteAndCrashIfMature` parameter by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10250
* `IndexStore`: Make it clear what locks are required by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10249
* [VDG] Coin Control - fix column width by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10253
* [VDG] Prevent window closing when dialog is open by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9586
* [Trivial] Use Count property instead of Enumerable.Count method by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10271
* [VDG] Fix address reuse coin selection by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10141
* [VDG] Coin Control - fix sorting #2 by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10255
* `IndexStore`: Remove `WrongFilter` check by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10248
* [easy-refactor][Synchronizer] Move settings to the ctor by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10257
* [VDG] Fix &quot;All coins confirmed&quot; for single coin by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10264
* [refactor] `IndexStore`: Remove CT params where not needed by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10267
* [VDG] Coin Control - fix non relevant cluster gets expanded by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10285
* [VDG] Prevent dialog cancel on pointer pressed when window is activated by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10283
* Fix output address generation and add test by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10289
* [VDG] UI Decoupling #4 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10168
* Refactor Schedule method by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10266
* [BnB] Spend address re-used coins together by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10273
* [Trivial] Fix formatting by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10294
* Use CoordinatorHttpClientFactory instead of HttpClientFactory for round state by @Kukks in https://github.com/zkSNACKs/WalletWasabi/pull/10304
* Fix adding wallet to startup upon start by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10120
* Use block height from response (take 2) by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10305
* [VDG] Layout and input diagnostics by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9236
* Improve Renewal documentation by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10124
* Bump version to v2.0.3 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10243
* [VDG] Focus dialog when it's opening by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10232
* [VDG] Fix Restart Wasabi due to dialog close prevention by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10302
* [VDG] Make USD amount clipboard suggestions smarter in Send flow by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10287
* [VDG] Ignore whitespace to compare incoming and current content by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10265
* [VDG] Labels fixes by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10229
* [VDG] Confirm Recovery Words By Selection III: &quot;World Championship Edition&quot; by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/9816
* [VDG] Fix many selected wallet at the same time by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10342
* [VDG] Dont copy negative values on Transaction Details's amount. by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/10207
* [VDG] Confirm recovery words - alphabetical instead of random by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10331
* [VDG] [TRIVIAL] SearchBar: minor wording improvement by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10352
* Throw exceptions in a more consistent way by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10353
* Downgrade warning message to debug by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10338
* Add Deepsource analyzer to the repo by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10354
* `NBitcoinExtensions`: Remove unused methods by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10351
* [VDG] Confirm recovery words - adjust layout by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10350
* [VDG] Add fiat conversion in notification cards by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/10194
* [Trivial] Fix small issues/recommendations according to deepsource by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10355
* [Trivial] Remove unused method by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10357
* [Clean up] Remove unnecessary local variables by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10337
* [Trivial] Instantiate argument exception with parameter name by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10336
* [Trivial] Remove unused parameter by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10335
* Make sure to try unregister when we can. by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10340
* `HttpContentExtensions`: Cleanup + `CoinVerifierApiClient` cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10349
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10361
* Make the test easier to understand and play with by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10363
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10362
* [VDG] Update to Avalonia 0.10.19 by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10360
* [VDG] navbar - fix weird case by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10359
* Let Alice timeout instead of remove. by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10326
* [VDG] Make ScrollBar thumb more prominent by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10369
* Fixed USD parsing in the clipboard observer by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10318
* Mobile navgitation fix by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/10333
* Fix typos by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10364
* Make sure to filter affiliated info for remixes by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10377
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10382
* Clipboard text observables produce nullable values by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10374
* [VDG] Fix QR-core is cropped wrong by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10371
* [VDG] Fix ChangePocketCommand runs in the UI thread and has noticeable delay by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10373
* [VDG] UI Decoupling #5 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10209
* Simplify LINQ calls by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10390
* [Trivial] Remove type specification by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10370
* [easy] `P2pNetwork`: Cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10383
* [VDG] UI Decoupling #6 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10210
* Add a UT needed to verify serialization compatibility by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10398
* [VDG] Fix Send - ´To´ field cuts off some letters at bottom by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10372
* [VDG] Fix less option sends the same amount by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10332
* PlebStop preventing log message to Trace by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10396
* Extract SelectCoinsForRound to CoinJoinCoinSelector static class by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10403
* Change HdPubKey Labels after Transaction is sent by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10397
* Use WabiSabi package by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10126
* [trivial][refactoring] Few misc changes by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10412
* [easy] `WalletManager`: Remove `AnyWallet` which is referenced from only one place by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10414
* [easy][refactoring] `MempoolService` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10413
* [VDG] Make error messages more user friendly by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10344
* [VDG] Fix history table selection jumping by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10231
* [VDG] Fix suggestions out of sync by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10417
* [VDG] Escape button goes back by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/9691
* [website] Google meta, email signature, 404 page by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/10137
* Make CoinJoinClientState available per wallet in CoinJoinManager by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10400
* [trivial] Fix filename by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10420
* Make Output a record by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/10425
* [VDG] UI Decoupling #8 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10239
* Revert &quot;[VDG] UI Decoupling #8&quot; by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10429
* [VDG] UI Decoupling #8 fixed by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10432
* [VDG] UI Decoupling #9 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10240
* [Trivial] Add Spell Checker rules to '.editorconfig' by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10311
* Use Func&lt;&gt; to get up-to-date coin candidates in CoinJoinClient by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10406
* Fail to signal readiness by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10381
* Add affiliation id to coinjoin notification header by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/10407
* Exception when closing the wallet fast by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10428
* Removed unused namespaces in CoinJoinManager by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10439
* Don't wait indefinitely for a Round by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10392
* [Trivial] Fix CodeFactor by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10443
* Remove unused parameter by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10445
* [Trivial] Use TryGetValue by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10434
* Use Array.Empty&lt;T&gt;() to efficiently create empty arrays by @deepsource-autofix in https://github.com/zkSNACKs/WalletWasabi/pull/10436
* Fix typos by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10444
* Sanity checks before and after we found a round by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10441
* [website] minor fixes by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10449
* Changed user facing date time formats to ISO like by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10471
* [Trivial] Simplify name by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10464
* [Trivial] Remove unused parameter by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10465
* Removed S.D.Bitmap from dependencies by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10472
* [trivial] use https instead of http by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10478
* [Trivial] Update file name in Contrib.WalletDiagnostic.README by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10480
* remove backend deployment instructions link from backend README by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10476
* Show crash report when Tor fails to be started by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10460
* [VDG] fix Preview TX: shield_regular &amp; shield_good displayed simultaniously  by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10430
* Use `RoundParameters` in Arena instead of Config by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10484
* Add extra info into the coinjoin notification request by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10442
* Fix Common.fsx script for big amount values by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10489
* Reduce MaxAnonScore of PrivateCoinJoinProfile for new wallets by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10468
* Fix typos and adds words to exclusion.dic by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10466
* SmartLabel: fix warning by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/9653
* Make recovery words copyable by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10496
* [Trivial] Fix CodeFactor by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10494
* Wasabi Daemon by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10293
* [Trivial] Fix CodeFactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10508
* Fixed crash on Linux machines without default font by Skia by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10438
* Fix typos and add words to exclusion.dic by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10506
* Simplified logging of Avalonia renderer by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10427
* Revert breaking changes in IWallet interface by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10501
* User friendly exception on PSBT saving by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10512
* [Trivial] Use coalesce expression to simplify null check by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10507
* Update HWI to 2.2.1 by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/10185
* Revenue sharing calculation script by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10491
* TorControl: Complete writer when we know that no message will be send in the future by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10499
* [VDG] do not use same icon for coinjoin indicator and anonymity score indicator by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10433
* Improve BIP21 bitcoin: URI parser test coverage by @kristapsk in https://github.com/zkSNACKs/WalletWasabi/pull/10490
* Use the TXID as the initial file name for PSBT by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10515
* [VDG] UI Decoupling #11 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10346
* [VDG] UI Decoupling #10 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10308
* [VDG] UI Decoupling #12 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10347
* Start wallets automatically after daemon starts by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10532
* Specify wallet in the request path by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10522
* Display software version by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10537
* Fixed namespace in smart label tests by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10542
* Handle CTRL+C gracefully by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10529
* Remove comma copy recovery words by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10540
* [Trivial] Correct link for API by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10549
* Fix comparison by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10555
* Introduce sqlite for storing of filters for `IndexStore`. by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10272
* Fix CjManager Notification flow by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10527
* Fix switches logic by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10564
* Optimized SmartLabel type by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10470
* Fixed view model constructors according guidelines by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10553
* [Trivial] Fix CS-R1067 issues for Deepsource by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10454
* [Easy] Fix several warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10550
* update Backend README by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10525
* Fix typos &amp; add word to exclusion.dic by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10548
* [VDG] UI Decoupling - Receive #1 by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10388
* Fix IndexStore on RegTest by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10572
* Minor changes by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10596
* [trivial] improve wording crash report title by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10599
* Removed duplicating company properties from projects by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10601
* `JsonRpcServer`: Use modern API by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10598
* Monitoring the target fees when broadcasting CJ by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10453
* Stop and Restart Coinjoins properly when entered Send Workflow by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10500
* [VDG] Improve Unused Receive Addresses wording by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10557
* SQLite migration code by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10551
* `JsonRpcServer`: Handle `stop` command better + refactoring by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10577
* [Payment in Coinjoin] Output provider by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10603
* Fix a few warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10613
* [VDG] clear clipboard on leaving dialog by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10558
* [Trivial] Fix CodeFactor by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10594
* Fixed DeepSource warnings by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10623
* Removed logic duplication in sort methods by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10611
* [Trivial] Remove comments that cause warnings. by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10619
* Removed explicit constructor from MempoolService by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10632
* Height: Fix typos by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10633
* `KeyManager`: minor refactoring by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10636
* [TurboSync] TurboSyncHeight: Set and Save by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10617
* [VDG] UI Decoupling #13 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10446
* Added support for QR code scanning on Linux by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10461
* Removed useless allocations by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10643
* Fix parsing error reporting by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10651
* Add words to exclusion.dic by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10592
* [Trivial] Rename Tor circuit classes/files by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10677
* [trivial] Extract `AddressStringParserTests` from `ParserTests` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10692
* `ConnectedNode`: Dispose node properly by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10674
* [VDG] UI Decoupling - Receive #2 by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10387
* http request better message by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10652
* Dont check `MainViewCanShutdown` in `ShuttingDownViewModel` by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10671
* [trivial] Fix a warning in `PayjoinTests` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10693
* Fix leftover by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10707
* `KeyManager`: Remove unused method (with a warning) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10706
* Verify formatting in pipelines by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10684
* [VDG] Fix wallet navigation via Notification Click by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10695
* Revert &quot;Verify formatting in pipelines&quot; by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10720
* [VDG] Fix Amount Suggestion not showing by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10624
* [VDG] Fix CJ group child item selection from SearchBar result by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10721
* [VDG] Improve history selection from SearchBar by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10723
* RpcBasedTests: Fix a few warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10694
* Refine AS Punishment Criteria by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10699
* [VDG] Disable Back in Dialogs when Escape is pressed and dialog is Busy by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10725
* [VDG] Update to Avalonia 0.10.20 by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10732
* [Index][Migration] Remove old index data by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10731
* [FireProofing] Mark output script as used if round signaled as ended by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10711
* Website colorchange by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/10644
* Reduce Non-Standard Changes by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10736
* Prefer less change by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10747
* Fix very old transition off by one bug from Sake by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10748
* [VDG] Update to Avalonia 0.10.21 by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10738
* Add Code scanning by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10737
* [VDG] Unfocus SearchBar on Escape key by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10722
* [VDG] Dispose ReceiveAddressViewModel subscription properly by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10763
* [refactoring] `SatoshiPerByte` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10571
* [VDG] [trivial] uppercase letter musicbox by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10768
* Make Naive Set truly naive by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10742
* Calculate the min feerate by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10734
* [VDG] Add fee to transaction details by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10504
* add the word `blocks` to fee provider log message by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10771
* Set BestHeight to last filter tested instead of last filter matched by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10673
* crash report: add tooltip to open GH report hyperlink by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10626
* If there are changeless candidates, don't even consider ones with change by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10777
* Fixed view models leaking into smart labels model by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10631
* [VDG] Do not use RequestAdd property in TagsBox to proxy adding new labels by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10758
* Fix whitespaces by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10714
* Extract naive decomposition out into its own method by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10770
* [Trivial] Remove sort System using directives rule by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10784
* [Trivial] Remove unused variable by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10786
* [Trivial] Fix Warning: Use Money.Zero instead of obsolete 'Money.implicit operator Money(int)' by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10785
* how to deploy by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10760
* Extract changeless decomposition out into its own method by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10787
* [trivial] Use new new by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10799
* [website] Firefox color fixes by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/10779
* [Trivial] Use new new keyword by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10800
* Introduce the concept of change tolerance by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10795
* Remove unused `SmartCoin.Secret` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10797
* `CoinsRegistry`: Minor cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10798
* [Tor] `HttpMessageHelper`: Remove dead code by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10793
* Introducing Pre-Decompositions to Enhance Decomposition Algorithms by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10788
* Increase max out from 8 to 10 by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10813
* [Trivial] Fix QR Code in lowercase by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10816
* [VDG] Fix CoinjoinError.NoCoinsToMix message in music box by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10697
* wcli+taproot by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10655
* [Trivial] Clean up for documentation by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10827
* [VDG] UI Decoupling - Receive #3 by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10386
* Ensure min output amount is economical in coinjoins by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10824
* [Trivial] Fixes warnings by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10782
* [Trivial] Fix whitespaces and formatting by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10783
* Decouple stuff from Amount Decomposer by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10840
* Alternative implementation for Combinations by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10823
* `PasswordConsole`: Remove Win7 workaround by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10835
* [VDG] Fix TagsBox by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10832
* [VDG] UI Decoupling #16 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10576
* [VDG] [DO NOT MERGE] UI Decoupling #14 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10459
* [VDG] [DO NOT MERGE] UI Decoupling #15 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10543
* Simplify fee estimations from mempool by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10818
* Remove unused members by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10837
* [VDG] UI Decoupling - Balance and Price tiles by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10834
* RPC: rename anonymitySet to anonymityScore by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10846
* [VDG] UI Decoupling #17 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10647
* [VDG] UI Decoupling #18 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10667
* [VDG] UI Decoupling #19 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10672
* Do not pay too much by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10848
* `PlainTextElementFactory`: Fix nullability warning by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10853
* [VDG] Fix BTC format in send view for full balance paste by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10772
* [Tor] `HttpMessageHelper`: Minor improvements by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10792
* [VDG] make return type nullable by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10856
* [VDG] UI Decoupling #21 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10710
* [VDG] [DO NOT MERGE] UI Decoupling #20 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10686
* [VDG] SearchBar - Press ENTER key to activate item by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10819
* Remove unused `HdPubKey.NonHardenedKeyPath` by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10828
* `RpcBasedTests`: Fix whitespace by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10854
* Minor `WabiSabiProtocolException` usage refactor in Alice-/CoinJoinClient by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10658
* Add minimum input sum check by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10842
* [VDG] Excluded VideoForWindows from web cam devices by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10861
* [VDG] Deduplication of suggested labels based on score by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10862
* [VDG] Excluded fee from amount for outgoing transactions by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10860
* [VDG] close suggestions when input field is empty by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10870
* [VDG] Changed format of copied privacy balance by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10863
* [VDG] fix discreet mode cut off by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10873
* [VDG] Fix LastSelectedWallet by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10872
* [VDG] Fix format for private amount of the privacy ring by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10876
* [VDG] UI Decoupling #22 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10716
* [VDG] CurrencyEntryBox - do not allow space by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10875
* [VDG] UI Decoupling #23 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10718
* [VDG] Fix NavBarItem stlye by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10869
* [refactoring] `RPCClientExtensions`: Simplify by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10852
* Don't show CJ broadcasted if wallet had no input in the round by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10607
* Close flyouts on window focus lose or resize by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10767
* [easy] CoreNode: Fix warning by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10891
* Packager: Rename Daemon + Fix for `Release` mode by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10883
* Update HowToDeploy.md by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10887
* [VDG] [Trivial] Show anonscore for all items by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10892
* [VDG] Add destination address to transaction summary by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10893
* [VDG] UI Decoupling #24 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10730
* Make sure used keys are saved into a file. by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10780
* [VDG] Allow shutdown main view when no wallets are present by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/10898
* `WasabiSynchronizer`: cleanup by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10895
* On shutdown prevention, stop the CJM to participate in new rounds. On cancel, restart them. by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10664
* [build] Use Central Package Management (CPM) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10889
* [VDG] UI Decoupling #25 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10745
* Fix `FilterDownloaderTestAsync` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10933
* [VDG] Copy individual address by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10907
* `WalletManager`: Pass dependencies via ctor by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10905
* [VDG][Trivial] Simplify text of Preview Transaction dialog by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10932
* [VDG] UI Decoupling #26 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10746
* TurboSync: Final by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10896
* [`TorProcessManager`] Do not allow `StartAsync` to be called without a cancellation token by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10930
* [tests]: Introduce `RegTestSetup` &amp; stabilize reg tests by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10935
* TurboSync: Add missing namespace by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10949
* TurboSync: Add missing `ConfigureAwait`s by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10946
* `PasswordFinderHelper`: Fix warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10845
* Explicit use of random generator (take 2) by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10879
* TurboSync: Remove an extra `while` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10950
* [WabiSabi] Do not ban inputs without valid ownership proof by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10953
* [WabiSabi] Verify ownership proof before any other policies by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10952
* Fix inconsistency in Github by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10961
* Fixed a crash on Ctrl+C termination by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10963
* [VDG] Used ZXing from QRackers by @YohDeadfall in https://github.com/zkSNACKs/WalletWasabi/pull/10962
* [VDG] UI Decoupling #27 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10753
* Do not remove alices. by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10914
* Reduce log levels of common errors in the Log by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10894
* Improve destination addresses algorithm by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10931
* Speed Up Wallet Load by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10967
* Prevent using the mempool info too early by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10972
* Add comments for HandleFiltersLock usage by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/10951
* [trivial] typo searchbar by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10983
* Get unconfirmed CoinJoins from the coordinator by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/10956
* [VDG] fix OOBE background on add wallet from searchbar by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10989
* [VDG] new onboarding by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/10942
* Welcome Page: tweak wording coinjoin fees page by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/10992
* Disable C# Analyzer by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10998
* [VDG] QuestionControl - fix default button on ENTER by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11006
* Add `CommitHash` to `api/software/versions` by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11003
* [VDG] Privacy Warnings &amp; Suggestions 2023 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10966
* [VDG] [Trivial] Fix label sorting by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11011
* [Trivial] Add arm64 to 'Officially Supported Architectures' by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/11007
* Fix line separators in Log by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11009
* [VDG] Select correct wallet when clicking notification by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11005
* [VDG] UI Decoupling #28 by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/10754
* add walletname to fully synced log message by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11023
* [Trivial] Remove 'exclude_patterns' from deepsource by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10999
* [VDG] Fix GUI freeze in Linux after setting WindowState=Normal by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10921
* [VDG] Transaction preview - use capital initials by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11048
* [VDG] Fix crash on privacy warnings flyout by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11051
* `FilterProcessor`: Remove lock by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11058
* Fix internal address re-use destination amount calculation by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11022
* update PackageTags by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/10602
* add issues to project board on reopening too by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11001
* Exclude coins in Critical phase from pocket when building a transaction by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/10958
* Add `EnforceExtendedAnalyzerRules` to `WalletWasabi.Fluent.Generators` project by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11066
* Use corrected estimations for coinjoins by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/10988
* [VDG] PrivacySuggestions: add warning for spending coinjoining coins by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11055
* [refactoring] `WalletManager`: Avoid disposed exceptions while accessing `CancelAllTasks.Token` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/10909
* [simple] Fix warnings by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11077
* `Wallet`: Remove `NewBlockProcessed` event by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11059
* [VDG] Fix coin selection sort order by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11047
* [VDG] Increase hover zones for copy buttons by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11075
* Always log that CoinJoinClient starts by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11081
* Store banned coins in file by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/10964
* `FilterModel`: Nits by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11091
* Minor improvement &amp; bugfix for `BlockFilterSqliteStorage` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11067
* `TransactionProcessor`: Remove guards by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11090
* [Trivial] Remove unused parameter by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/11094
* [VDG] Privacy Warning - decerase the opacity of icons of the suggestions by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11096
* [VDG] Privacy Warnings - better Change Avoidance icons by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11095
* [VDG] Fix sorting for non-private pockets by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11098
* [VDG] Fix fontsize for Label Management suggestion item by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11099
* [VDG] [trivial] rename Funds to Coins for Pocket by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11074
* [VDG] Show edit fee button always by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/10982
* Minor spellchecker workflow improvement by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11089
* [VDG] PrivacySuggestions: ToolTip with consequences and explanation by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11102
* [VDG] Fix unconfirmed coins warning by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/11113
* [VDG] Add Confirmation Time to Transaction Details by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11092
* [VDG] Notify property updates for Confirmation Time and Labels by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11116
* Have The Witness by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11129
* Request tx with witness data and ignore txs without it. by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11121
* Cancel + Speed Up Transaction by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/10976
* Fix &quot;CPFP grouping doesn't always work properly&quot; by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11136
* [PoC] Redo prison by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11052
* [VDG] Fix missing wallet tile on small screen by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/11137
* `IndexStoreTests`: Clean up the test by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11088
* Don't Use Witness Txs/Blocks over the Network by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11142
* Cancel previous task before running new privacy calculation by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/11131
* [VDG] Fix PrivacyBarSegment width calculation by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/11167
* [Trivial] Hide TXID separator if tx is not confirmed by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/11157
* Fix prison tests &amp; a few minor improvements by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11165
* Fix Tor tests by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11164
* Use NoCoinsEligibleToMix instead of AllCoinsPrivate if all candidates are private by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/11086
* Truncate `TorLogs.txt` when Tor starts by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11185
* [VDG] Go back when transaction is confirmed by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11166
* Fix LiveServer tests by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11178
* Redesign filter processing by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/11065
* Remove `selectwallet` rpc call by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11182
* Fix BuildTransactionValidationsTestAsync by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/11200
* fix: log banned until with date/time by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11209
* Get txs with witness data by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11211
* Refine detection of who's paying by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11170
* Reintroduce CoinGecko rate provider by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11168
* [Trivial] Unify warning messages for the Cancel/Speed up dialogs by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/11155
* [VDG] Speed-up / Cancel: Make transaction lookup fail-safe by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11210
* [VDG] [trivial] remove CopyableContent from confirmation time by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11216
* [VDG] SpeedUp&amp;Cancel - use compact dialogs and `ContentArea` by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11212
* [VDG] Set the slider value only once by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/11197
* Fix SpentCoinsByOutPoint is not updated by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/11221
* Cache slow `synchronize` response by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11217
* `AllFeeEstimate`: Fix parameter name by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/11223
* [VDG] Change success dialog wording for cancel and speedup by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/11218
* [VDG] Change PrivacyWarnings to IAsyncEnumerable by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/11163
* Fix authentication in wcli.sh by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11201
* [VDG] Fee Chart - fix mid value by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11213
* [VDG] Remove WatchOnlyWalletViewModel by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/11187
* [VDG] MusicBox - Fix confusing messages by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11083
* [VDG] Fixes NullReferenceException exception in ContextFlyoutWorkaroundBehavior by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/11229
* temp fix: make `CoinJoinClient started` debug log level by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11228
* Use same json serialization settings on client and server by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11080
* Change wrong usage of containingTx by spendingTx by @turbolay in https://github.com/zkSNACKs/WalletWasabi/pull/11232
* Bump version to v2.0.4 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/11237
* Revert &quot;Bump version to v2.0.4&quot; by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/11238
* [2.0.4] Create script wassabeed by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/11251
* [2.0.4] Fix pocket generation by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/11284
* [v2.0.4] Make filter migration cancellable by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/11290
* [v2.0.4] tx details: clarify expected confirmation time by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11292
* [v2.0.4] Preview Transaction: update confirmation time label text by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/11299
* [v2.0.4] Process filters while downloading them from turbolay by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/11324

## New Contributors
* @YohDeadfall made their first contribution in https://github.com/zkSNACKs/WalletWasabi/pull/10318
* @deepsource-autofix made their first contribution in https://github.com/zkSNACKs/WalletWasabi/pull/10436

**Full Changelog**: https://github.com/zkSNACKs/WalletWasabi/compare/v2.0.2.1...v2.0.4</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.4</title>
    <updated>2023-08-21T14:38:35Z</updated>
    <dc:date>2023-08-21T14:38:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.29</id>
    <link href="https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.29"/>
    <summary>## What's Changed
* Use bitcoin-kmp 0.13.0 by @sstone in https://github.com/ACINQ/bitcoin-lib/pull/78


**Full Changelog**: https://github.com/ACINQ/bitcoin-lib/compare/v0.28...v0.29</summary>
    <title>ACINQ/bitcoin-lib: v0.29</title>
    <updated>2023-08-21T08:34:25Z</updated>
    <dc:date>2023-08-21T08:34:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.1</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.1"/>
    <summary>This release fixes an issue (see #394) with withdrawals/payments done through LNURL affecting the new 2.0.0 version (legacy app is not affected).

### Migration for existing wallets

For users upgrading from the legacy app (1.x) to the new app, a migration is needed. See [the 2.0.0 release notes](https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0) for details about the migration process.

### All changes:
- https://github.com/ACINQ/phoenix/compare/android-v2.0.0...android-v2.0.1

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.1</title>
    <updated>2023-08-19T08:22:36Z</updated>
    <dc:date>2023-08-19T08:22:36Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-core/HWI/releases/tag/2.3.1</id>
    <link href="https://github.com/bitcoin-core/HWI/releases/tag/2.3.1"/>
    <summary>Also available on [PyPi](https://pypi.org/project/hwi/2.3.0/) and can be installed with `pip install -U hwi`

# Fixed

* Base58 address decoding used by BitBox02
* Various issues with the Qt GUI</summary>
    <title>bitcoin-core/HWI: 2.3.1</title>
    <updated>2023-08-17T00:39:28Z</updated>
    <dc:date>2023-08-17T00:39:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-v2.0.0"/>
    <summary>This is a major release that reworks most of the application. An automated migration is available for existing users.

## Migration

Due to the changes in the LN engine and the switch to splicing (see below), existing channels created with v1.x cannot be used by the new app. A migration process merges them together resulting in a single channel.

Users with existing wallets will remain on the legacy app, until their funds are migrated. This migration is triggered manually by the user from the legacy app.

⚠️ Important notes
- The migration process will only migrate channels that have at least 546 satoshi on the user's side. Channels with less than 546 sat cannot be migrated since their balance is below the Bitcoin dust limit, and funds are swiped by the miners. The app will display a warning when that's the case.
- Once the app has migrated, the **legacy swap-in address must not be used ever again**. Contact support if you accidentally send funds to the legacy swap-in address.
- The migration process may sometimes be disabled, usually when the mempool is congested. When that happens, the migration button is not available, and users can keep using the legacy app.

## Main changes

### Switch the LN engine from `eclair` to `lightning-kmp`

Both [eclair](https://github.com/ACINQ/eclair) and [lightning-kmp](https://github.com/ACINQ/lightning-kmp) are implementations of a Lightning node and are developed by us (ACINQ). However eclair is written in scala, targets server use-cases (relaying payments) and only runs on Android. Lightning-kmp is written in kotlin multiplatform, targets mobile platforms, and can run on iOS and Android.

Phoenix Android used to be powered by eclair, and Phoenix iOS by lightning-kmp. With this new versions, both Android/iOS use lightning-kmp.

### Support for splicing and dual-funding

Splicing allows altering channels by adding or removing funds. Instead of managing multiple channels, the app only has one single channel, which will then be modified depending on usage. This brings significant improvements:
- on-chain swaps (swap-in or swap-out) are now trustless.
- the static 1% fee for incoming payments that need new channels has been removed. Instead users pay the mining fee for the splicing operation. 
- that fee cannot exceed the maximum fee set by the user (in settings &gt; channels management). Default maximum is 5000 sat.
- a notification is displayed when an incoming payment is rejected because of the fee.
- the fee for outgoing Lightning payments is now static (0.4 %) and is displayed before sending the payment.
- unconfirmed on-chain transactions can be accelerated.

See https://github.com/ACINQ/phoenix/pull/356 and https://acinq.co/blog/phoenix-splicing-update for more information, especially the fee comparison.

### Improved fiat currencies support

The Android app is now able to convert prices to 150+ currencies, including free market rates (like for the Argentine Peso). Exchange rates should also be more accurate.

### Export payments history

Successful payments can now be exported to a CSV file.

## Compatibility with iOS

The iOS and Android apps are not compatible yet, since the iOS app does not support splicing yet. Using the same seed on both iOS and Android Phoenix apps will lead to issues.

## All changes

https://github.com/ACINQ/phoenix/compare/android-legacy-v1.4.27...android-v2.0.0

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-v2.0.0</title>
    <updated>2023-08-16T14:55:38Z</updated>
    <dc:date>2023-08-16T14:55:38Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.1.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/FINGERROOT-5.1.0"/>
    <summary>## Summary

This update brings additions and enhancements to the JSON-RPC API and security and performance improvements. Although this upgrade is not mandatory, **we highly recommend that users upgrade their nodes to the latest version**.

## What's New in RSKj 5.1.0

A non-comprehensive list of changes included in this version is:

* Fixed issues with the evm_reset JSON-RPC method in [#2024](https://github.com/rsksmart/rskj/pull/2024).
* Introduced configurable limits for the eth_getLogs JSON-RPC method in [#2035](https://github.com/rsksmart/rskj/pull/2035).
* Introduced configurable limit for JSON-RPC responses size in [#1997](https://github.com/rsksmart/rskj/pull/1997).
* New rsk_flush JSON-RPC method lets users flush the node’s databases to disk without interrupting the node in [#1856](https://github.com/rsksmart/rskj/pull/1856).
* Allow specifying VM options when running RSKj in a docker container in [#1998](https://github.com/rsksmart/rskj/pull/1998).

**Full Changelog**: https://github.com/rsksmart/rskj/compare/FINGERROOT-5.0.0...FINGERROOT-5.1.0

**Fingerroot 5.1.0 Milestone**: https://github.com/rsksmart/rskj/milestone/36

## New Contributors
* @ivanIOV made their first contribution in https://github.com/rsksmart/rskj/pull/2011

## Reproducible Build

SHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):
0c0707d01d14c7bef5a53407aace8b2a637d42964f9847b14aa38e2088e5cf3b  rskj-core-5.1.0-FINGERROOT-all.jar
</summary>
    <title>rsksmart/rskj: FINGERROOT-5.1.0</title>
    <updated>2023-08-14T21:57:49Z</updated>
    <dc:date>2023-08-14T21:57:49Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.2"/>
    <summary>## Bug fixes

* Language Select box cut off on checkout (#5210) @evanc-ole
* POS: Multiple fixes (#5228 #5241 #5252) @dennisreimann
* Greenfield: Fix invoice lookup by capitalized status (#5245) @dennisreimann
* Fix temporary file downloads for local storage option @Kukks

### Improvements

* POS: Handle flexible price items in cart view (#5238) @dennisreimann
* POS: Combine search term and category selector (#5241) @dennisreimann
* Email Rules: Improve validation (#5234) @dennisreimann
* Receipt improvements (#5239) @dennisreimann
* Improve invoices status filter (#5248 #5251) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.11.2</title>
    <updated>2023-08-11T17:50:21Z</updated>
    <dc:date>2023-08-11T17:50:21Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.4-hotfix</id>
    <link href="https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.4-hotfix"/>
    <summary>## Highlights

Hotfix for compatibility with some DIY hardware

Full release details: https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.4

## What's Changed
* be resilient to bad lshw output by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2390

**Full Changelog**: https://github.com/Start9Labs/start-os/compare/v0.3.4.4...v0.3.4.4-hotfix

## Checksums

BLAKE-3
```
ceeaacfb27d5b5e196e695a43413e1020f67c96df5b2606ec7087eb8ad8fe69e  aarch64-nonfree.iso/startos-0.3.4.4-9322b3d-20230810_aarch64-nonfree.iso
b48047ea7df90ac07075a0aeda730ee656d9a6080731e651c255283d1fb9f8bd  aarch64.iso/startos-0.3.4.4-9322b3d-20230810_aarch64.iso
dafece5f39df1a3fafd9ea3f30eb1d945e09e09a4929c3a0e7863f7b1d80d188  x86_64-nonfree.iso/startos-0.3.4.4-9322b3d-20230810_x86_64-nonfree.iso
4a599a5d4de198fd126c05dcb303d523d80a3d54ac5eb63c871991d8456a0a54  x86_64.iso/startos-0.3.4.4-9322b3d-20230810_x86_64.iso
d80711dda524b09a14c4be71d34e17c6820d6603007a09d7f030f7ed69fd9a31  raspberrypi.img/startos-0.3.4.4-9322b3d-20230810_raspberrypi.img.gz
```

SHA-256
```
e4615623a25cc2490e31d80ff0bed3cd960e8b08b65109a955e760a130e463c0  aarch64-nonfree.iso/startos-0.3.4.4-9322b3d-20230810_aarch64-nonfree.iso
693e7c4749bffb82f450f1ad291e738837402b9baf78874dd2c7afaba28be5d1  aarch64.iso/startos-0.3.4.4-9322b3d-20230810_aarch64.iso
3d85e0f55ac56745cb8722e84a2dfd295d33d3c69a23c36cac1d89abb08132dd  x86_64-nonfree.iso/startos-0.3.4.4-9322b3d-20230810_x86_64-nonfree.iso
a6c5c874818f6d76147fc89e93d795d2c0d511451c6e5cd4354cb2499156c606  x86_64.iso/startos-0.3.4.4-9322b3d-20230810_x86_64.iso
1a809c06379ec2be65add56081747d8cfe6f5d004c1e8ebe9b4fb9e9030159fb  raspberrypi.img/startos-0.3.4.4-9322b3d-20230810_raspberrypi.img.gz
```

</summary>
    <title>Start9Labs/start-os: v0.3.4.4-hotfix</title>
    <updated>2023-08-11T01:30:37Z</updated>
    <dc:date>2023-08-11T01:30:37Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.4</id>
    <link href="https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.4"/>
    <summary>## Highlights
* Https over Tor for faster UI loading times
* Change password through UI
* Use IP address for Network Folder backups
* Multiple bug fixes, performance enhancements, and other small features

## What's Changed
* use a more resourced runner for production builds by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2322
* maint/minor UI typo fixes by @kn0wmad in https://github.com/Start9Labs/start-os/pull/2330
* make it faster by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2328
* fix: Make check-version posix compliant by @Blu-J in https://github.com/Start9Labs/start-os/pull/2331
* Auto-define the OS_ARCH variable. by @k0gen in https://github.com/Start9Labs/start-os/pull/2329
* Update README.md by @kn0wmad in https://github.com/Start9Labs/start-os/pull/2337
* add reset password to UI by @MattDHill in https://github.com/Start9Labs/start-os/pull/2341
* pack compressed assets into single binary by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2344
* delete disk guid on reflash by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2334
* fix incoherent when removing by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2332
* better transfer progress by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2350
* fix all references embassyd -&gt; startd by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2355
* disable encryption for new raspi setups by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2348
* permit IP for cifs backups by @MattDHill in https://github.com/Start9Labs/start-os/pull/2342
* support http2 alpn handshake by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2354
* version bump by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2357
* update deno by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2361
* migrate tor address to https by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2358
* Fix bugs by @MattDHill in https://github.com/Start9Labs/start-os/pull/2360
* single platform builds by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2365
* fix ROFS error on os install by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2364
* Fix/pwa refresh by @elvece in https://github.com/Start9Labs/start-os/pull/2359
* Fix/mistake reorganize by @elvece in https://github.com/Start9Labs/start-os/pull/2366
* mute unexpected eof &amp; protect against fd leaks by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2369
* switch back to github caching by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2371
* fix missing parent dir by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2373
* add cli &amp; rpc to edit db with jq syntax by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2372
* add qr code to insights-&gt;about-&gt;tor by @Reckless-Satoshi in https://github.com/Start9Labs/start-os/pull/2379
* Feature/hw filtering by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2368
* Update README.md by @MattDHill in https://github.com/Start9Labs/start-os/pull/2381
* update readme layout and assets by @elvece in https://github.com/Start9Labs/start-os/pull/2382

## New Contributors
* @Reckless-Satoshi made their first contribution in https://github.com/Start9Labs/start-os/pull/2379

**Full Changelog**: https://github.com/Start9Labs/start-os/compare/v0.3.4.3...v0.3.4.4

## Updates
* Updated `aarch64.iso` to fix compatibility issue with UTM for macOS

## Checksums

BLAKE-3
```
29f0a4f8a22072fc6f604e650eb3c47d6f9c60ae4312b8105a1b680f7c04b382  startos-0.3.4.4-9322b3d-20230809_aarch64.iso
1d8c6a896ee1d2755be444c483f93ab87a60d63cedc8b8a23c30cfb236757181  startos-0.3.4.4-55f5329-20230807_aarch64-nonfree.iso
51c1d466c0696390d5a0072808b8e65b5caf8d8d34c276da27f0f943bc00c6c0  startos-0.3.4.4-55f5329-20230807_raspberrypi.img.gz
e596d981407823eb2c1d7ebd1f83ac3d4afd9a23ebbd3b669b85cba7fe7daa17  startos-0.3.4.4-55f5329-20230807_x86_64.iso
112999b2ed3d86d9ae394aa3de08dbd78a04c95d19f8a68303bd99368a23fda2  startos-0.3.4.4-55f5329-20230807_x86_64-nonfree.iso
```

SHA-256
```
b8e099e011058532ffe95b76d067fe3cc27f2924873d9e193cf541d4557d3af9  startos-0.3.4.4-9322b3d-20230809_aarch64.iso
bfac354c9b8e8a619b9faafb5e9e5339b78a80e752aaf64a44d9bc0004a83448  startos-0.3.4.4-55f5329-20230807_aarch64-nonfree.iso
f61f90083abf0972990a6c982b803854d9d53d312bbfe1e28ceb0ad978249ec0  startos-0.3.4.4-55f5329-20230807_raspberrypi.img.gz
3e44c9a42773f2ab797f337efe2b8b9a3af0410f262e948d1dec4dd0452da3d9  startos-0.3.4.4-55f5329-20230807_x86_64.iso
4852b649f17328aad0e9725410d219d9edf9caff9bb9a3dc91e23743afb37c96  startos-0.3.4.4-55f5329-20230807_x86_64-nonfree.iso
```</summary>
    <title>Start9Labs/start-os: v0.3.4.4</title>
    <updated>2023-08-07T23:20:41Z</updated>
    <dc:date>2023-08-07T23:20:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.1"/>
    <summary>## Bug fixes

* Language Select box cut off on checkout (#5210) @dstrukt
* POS Cart view malformed when special characters are in items (#5203 #5211) @Kukks
* Errors creating invoice from public form were not shown in the UI (#5208 #5211) @Kukks
* Cart view doesn't show item when the amount field is custom (#5204 #5211) @Kukks
* Can't save the item when adding a new category in POS (#5205 #5211) @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.11.1</title>
    <updated>2023-07-29T08:02:07Z</updated>
    <dc:date>2023-07-29T08:02:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.11.0"/>
    <summary>### New Features

* Complete overhaul of Invoice Reporting (#5095 #5155) @NicolasDorier
* POS Cart redesign (#5109 #5171) @dennisreimann @dstrukt
* Add product categories to POS apps (#5088 #5078) @NicolasDorier
* Checkout v2: Play sound when invoice is paid (#5085 #5113) @dennisreimann @webwworthy
* Add support for ExchangeRateHost and FreeCurrencyRates rate providers (#5166) @Kukks


### Bug fixes

* Support NFC on modal (#4251 #5033) @Kukks @dennisreimann
* Fixed setting of minimum or custom price for LNURL POS items (#5170 #5172) @Kukks
* Preventing entering of negative tips and discounts in POS (#5192 #5198) @rockstardev
* Fixing display of amount paid on Receipt page (#5195 #5197) @rockstardev
* Form invoice amount adjusters, useful for shipping and other addon amounts to the invoice (#5087 #5158) @Kukks @dennisreimann


### Improvements

* Improved Payment Requests List View (#3872 #5065) @TChukwuleta
* Improve create first store view (#5008 #5181) @dennisreimann
* Invoice lists: Show icons for payment methods (#5084 #5137) @dennisreimann
* Apps: Add direct file upload in item editor (#5086 #5140) @dennisreimann
* Add OpenSats supporters logo (#5202) @Kukks @Pavlenex
* Add recommended rate providers for UGX and RSD (#5166) @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.11.0</title>
    <updated>2023-07-27T13:21:02Z</updated>
    <dc:date>2023-07-27T13:21:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.8</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.8"/>
    <summary>* FIX: invalid cosigner when scanning cosigner during multigig vault setup (closes #5616) </summary>
    <title>BlueWallet/BlueWallet: v6.4.8</title>
    <updated>2023-07-27T00:41:23Z</updated>
    <dc:date>2023-07-27T00:41:23Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-core/HWI/releases/tag/2.3.0</id>
    <link href="https://github.com/bitcoin-core/HWI/releases/tag/2.3.0"/>
    <summary>Also available on [PyPi](https://pypi.org/project/hwi/2.3.0/) and can be installed with `pip install -U hwi`

# Added

* Jade DIY devices
* GUI import/export of PSBTs to/from file
* Apple Silicon `hwi` binary for MacOS 12.0+ (`hwi-qt` cannot be built yet)

# Fixed

* Bumped hidapi dependency for upstream bugfix</summary>
    <title>bitcoin-core/HWI: 2.3.0</title>
    <updated>2023-07-25T02:54:41Z</updated>
    <dc:date>2023-07-25T02:54:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.116</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.116"/>
    <summary># 0.0.116 - Jul 21, 2023 - &quot;Anchoring the Roadmap&quot;

## API Updates

 * Support for zero-HTLC-fee anchor output channels has been added and is now
   considered beta (#2367). Users who set
   `ChannelHandshakeConfig::negotiate_anchors_zero_fee_htlc_tx` should be
   prepared to handle the new `Event::BumpTransaction`, e.g. via the
   `BumpTransactionEventHandler` (#2089). Note that in order to do so you must
   ensure you always have a reserve of available unspent on-chain funds to use
   for CPFP. LDK currently makes no attempt to ensure this for you.
 * Users who set `ChannelHandshakeConfig::negotiate_anchors_zero_fee_htlc_tx`
   and wish to accept inbound anchor-based channels must do so manually by
   setting `UserConfig::manually_accept_inbound_channels` (#2368).
 * Support forwarding and accepting HTLCs with a reduced amount has been added,
   to support LSPs skimming a fee on the penultimate hop (#2319).
 * BOLT11 and BOLT12 Invoice and related types have been renamed to include a
   BOLTNN prefix, ensuring uniqueness in `lightning{,-invoice}` crates (#2416).
 * `Score`rs now have an associated type which represents a parameter passed
   when calculating penalties. This allows for the same `Score`r to be used with
   different penalty calculation parameters (#2237).
 * `DefaultRouter` is no longer restrained to a `Mutex`-wrapped `Score`,
   allowing it to be used in `no-std` builds (#2383).
 * `CustomMessageHandler::provided_{node,init}_features` and various custom
   feature bit methods on `*Features` were added (#2204).
 * Keysend/push payments using MPP are now supported when receiving if
   `UserConfig::accept_mpp_keysend` is set and when sending if specified in the
   `PaymentParameters`. Note that not all recipients support this (#2156).
 * A new `ConfirmationTarget::MempoolMinimum` has been added (#2415).
 * `SpendableOutputDescriptor::to_psbt_input` was added (#2286).
 * `ChannelManager::update_partial_channel_config` was added (#2330).
 * `ChannelDetails::channel_shutdown_state` was added (#2347).
 * The shutdown script can now be provided at shutdown time via
   `ChannelManager::close_channel_with_feerate_and_script` (#2219).
 * `BroadcasterInterface` now takes multiple transactions at once. While not
   available today, in the future single calls should be passed to a full node
   via a single batch/package transaction acceptance API (#2272).
 * `Balance::claimable_amount_satoshis` was added (#2333).
 * `payment_{hash,preimage}` have been added to some `Balance` variants (#2217).
 * The `lightning::chain::keysinterface` is now `lightning::sign` (#2246).
 * Routing to a blinded path has been implemented, though sending to such a
   route is not yet supported in `ChannelManager` (#2120).
 * `OffersMessageHandler` was added for offers-related onion messages (#2294).
 * The `CustomMessageHandler` parameter to `PeerManager` has moved to
   `MessageHandler` from `PeerManager::new` explicitly (#2249).
 * Various P2P messages for dual funding channel establishment have been added,
   though handling for them is not yet in `ChannelManager` (#1794)
 * Script-fetching methods in `sign` interfaces can now return errors, see docs
   for the implications of failing (#2213).
 * The `data_loss_protect` option is now required when reading
   `channel_reestablish` messages, as many others have done (#2253).
 * `InFlightHtlcs::add_inflight_htlc` has been added (#2042).
 * The `init` message `networks` field is now written and checked (#2329).
 * `PeerManager` generics have been simplified with the introduction of the
   `APeerManager` trait (#2249).
 * `ParitalOrd` and `Ord` are now implemented for `Invoice` (#2279).
 * `ParitalEq` and `Debug` are now implemented for `InMemorySigner` (#2328).
 * `ParitalEq` and `Eq` are now implemented for `PaymentError` (#2316).
 * `NetworkGraph::update_channel_from_announcement_no_lookup` was added (#2222).
 * `lightning::routing::gossip::verify_{channel,node}_announcement` was added
   (#2307).

## Backwards Compatibility
 * `PaymentParameters` written with blinded path info using LDK 0.0.115 will not
   be readable in LDK 0.0.116, and vice versa.
 * Forwarding less than `Event::HTLCIntercepted::expected_outbound_amount_msat`
   in `ChannelManager::forward_intercepted_htlc` may prevent the
   `ChannelManager` from being read by LDK prior to 0.0.116 (#2319)
 * Setting `ChannelConfig::accept_underpaying_htlcs` may prevent the
   `ChannelManager` from being read by LDK prior to 0.0.116 and un-setting the
   parameter between restarts may lead to payment failures (#2319).
 * `ChannelManager::create_inbound_payment{,_for_hash}_legacy` has been removed,
   removing the ability to create inbound payments which are claimable after
   downgrade to LDK 0.0.103 and prior. In the future handling such payments will
   also be removed (#2351).
 * Some fields required by LDK 0.0.103 and earlier are no longer written, thus
   deserializing objects written by 0.0.116 with 0.0.103 may now fail (#2351).

## Bug Fixes
 * `ChannelDetails::next_outbound_htlc_limit_msat` was made substantially more
   accurate and a corresponding `next_outbound_htlc_minimum_msat` was added.
   This resolves issues where unpayable routes were generated due to
   overestimation of the amount which is payable over one of our channels as
   the first hop (#2312).
 * A rare case where delays in processing `Event`s generated by
   `ChannelMonitor`s could lead to loss of those events in case of an untimely
   crash. This could lead to the loss of an `Event::SpendableOutputs` (#2369).
 * Fixed a regression in 0.0.115 which caused `PendingHTLCsForwardable` events
   to be missed when processing phantom node receives. This caused such
   payments to be delayed until a further, unrelated HTLC came in (#2395).
 * Peers which are unresponsive to channel messages for several timer ticks are
   now disconnected to allow for on-reconnection state machine reset. This
   works around some issues in LND prior to 16.3 which can cause channels to
   hang and eventually force-close (#2293).
 * `ChannelManager::new` now requires the current time (either from a recent
   block header or the system clock), ensuring invoices created immediately
   after startup aren't already expired (#2372).
 * Resolved an issue where reading a `ProbabilisticScorer` on some platforms
   (e.g. iOS) can lead to a panic (#2322).
 * `ChannelConfig::max_dust_htlc_exposure` is now allowed to scale based on
   current fees, and the default has been updated to do so. This substantially
   reduces the chance of force-closure due to dust exposure. Note that existing
   channels will retain their current value and you may wish to update the
   value on your existing channels on upgrade (#2354).
 * `PeerManager::process_events` no longer blocks in any case. This fixes a bug
   where reentrancy from `PeerManager` into user code which eventually calls
   `process_events` could lead to a deadlock (#2280).
 * The persist timing of network graph and scoring in
   `lightning-background-processor` has been tweaked to provide more reliable
   persistence after updates to either (#2226).
 * The number of route hints added to BOLT 11 invoices by the
   `lightning-invoice::utils` builders has been reduced to three to ensure
   invoices can be represented in scan-able QR codes (#2044).
 * Fixed sending large onion messages, which would previously have resulted in
   an HMAC error on the second hop (#2277).
 * Fixed a memory leak that may occur when a `ChannelManager` or
   `ChannelMonitor` is `drop`ed (#2233).
 * A potential deadlock in calling `NetworkGraph::eq` was resolved (#2284).
 * Fixed an overflow which prevented disconnecting peers in some minor cases
   with more than 31 peers (#2245).
 * Gossip messages with an unknown chain hash are now ignored (#2230).
 * Rapid Gossip Sync processing now fails on an unknown chain hash (#2324).
 * `RouteHintHop::htlc_maximum_msat` is now enforced. Note that BOLT11 route
   hints do not have such a field so this code is generally unused (#2305).

## Security
0.0.116 fixes a denial-of-service vulnerability which is reachable from
untrusted input from channel counterparties if a 0-conf channel exists with
that counterparty.
 * A premature `announcement_signatures` message from a peer prior to a 0-conf
   channel's funding transaction receiving any confirmations would panic in any
   version since 0-conf channels were introduced (#2439).

In total, this release features 142 files changed, 21033 insertions, 11066
deletions in 327 commits from 21 authors, in alphabetical order:
 * Alec Chen
 * Andrei
 * Antoine Riard
 * Arik Sosman
 * Chad Upjohn
 * Daniel Granhão
 * Duncan Dean
 * Elias Rohrer
 * Fred Walker
 * Gleb Naumenko
 * Jeffrey Czyz
 * Martin Habovstiak
 * Matt Corallo
 * Tony Giorgio
 * Valentine Wallace
 * Vladimir Fomene
 * Willem Van Lint
 * Wilmer Paulino
 * benthecarman
 * ff
 * henghonglee</summary>
    <title>lightningdevkit/rust-lightning: v0.0.116</title>
    <updated>2023-07-21T23:22:36Z</updated>
    <dc:date>2023-07-21T23:22:36Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.10.0</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.10.0"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#0100-jul-22-2023</summary>
    <title>romanz/electrs: v0.10.0</title>
    <updated>2023-07-21T13:40:17Z</updated>
    <dc:date>2023-07-21T13:40:17Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.2</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.2"/>
    <summary>## [0.6.2](https://github.com/unchained-capital/caravan/compare/caravan-v0.6.1...caravan-v0.6.2) (2023-07-18)


### Bug Fixes

* **sign:** pass wallet uuid for signing ([a748d97](https://github.com/unchained-capital/caravan/commit/a748d97d3bfe796487270ca7a41144b629df17a7))</summary>
    <title>unchained-capital/caravan: caravan-v0.6.2</title>
    <updated>2023-07-18T21:39:13Z</updated>
    <dc:date>2023-07-18T21:39:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.7.8</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.7.8"/>
    <summary>- Add BIP322 message signing for singlesig addresses including P2TR
- Add zbar QR reader for all QR scans (wide, cropped and inverted)
- Add `useZbar` config variable to disable zbar scanning (enabled by default)
- Add Rename Wallet command to File menu
- Set initial fee for proposed RBF transaction to satisfy minimum relay requirements
- When constructing RBF and CPFP transactions, add any additional UTXOs by output group only if effective fee is sufficient
- Make the Send to Many dialog non-modal, where reselecting the menu command brings an existing dialog to the foreground
- Show a warning in the General Preferences if currencies could not be retrieved from the exchange rate source
- Optimize memory store used for calculating the fee rate histogram in Cormorant
- For memory efficiency, only keep older mempool histogram entries at ten minute intervals
- Add additional UTXOs to CPFP transaction if the output value is below the dust threshold
- Set the transaction label to a comma separated list of the payment labels when a multiple payment transaction is broadcasted
- Show a warning dialog on Submit Bug Report to redirect users to the support channel where appropriate
- Add the Taproot script type to connected wallet import options
- Add a tooltip to the Save Final Transaction button to suggest connecting to a server in order to broadcast
- Make alert dialogs resizable
- Bug fix: Fix overselection of inputs during RBF
- Bug fix: Preserve payment labels when using RBF on multiple payment transactions
- Bug fix: Retain UTXO frozen status on wallet refresh
- Bug fix: Preserve wallet order on application restart after tabs are moved left or right
- Bug fix: On updating UTXO history in Terminal, set the scrollbar to the top if the table view is scrolled below new UTXO table row count</summary>
    <title>sparrowwallet/sparrow: 1.7.8</title>
    <updated>2023-07-18T14:16:09Z</updated>
    <dc:date>2023-07-18T14:16:09Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.1</id>
    <link href="https://github.com/unchained-capital/caravan/releases/tag/caravan-v0.6.1"/>
    <summary>## [0.6.1](https://github.com/unchained-capital/caravan/compare/caravan-v0.6.0...caravan-v0.6.1) (2023-07-13)


### Bug Fixes

* addressType conflict check not applicable for text xpubs ([185fc01](https://github.com/unchained-capital/caravan/commit/185fc01bcd6c02301fb787229ffcc8f0c4c6cd45))
* **build:** bring back hash routing ([ed83bf4](https://github.com/unchained-capital/caravan/commit/ed83bf4b6765294180ea96b11898cb1a42adfc42))
* **scriptexplorer:** change the error message for spending from new wallet ([1923dad](https://github.com/unchained-capital/caravan/commit/1923dad0d5fdc61fe88d729d6e850cee8a22e0f1)), closes [#172](https://github.com/unchained-capital/caravan/issues/172)
* **scriptexplorer:** show error message trown in fethUTXOs ([158fb61](https://github.com/unchained-capital/caravan/commit/158fb6154856909f4de77a49eaeac24cbd4a42d2)), closes [#172](https://github.com/unchained-capital/caravan/issues/172)
* **scriptexplorer:** when no error is trown check for 0 balance ([cb96364](https://github.com/unchained-capital/caravan/commit/cb96364922f61e922be30b67fc39eda2fd233dce))
* **wallet:** add delay to address and utxo calls ([d9774c1](https://github.com/unchained-capital/caravan/commit/d9774c1c7e28021a48efa30666c6ceb9e75cd1da)), closes [#317](https://github.com/unchained-capital/caravan/issues/317)</summary>
    <title>unchained-capital/caravan: caravan-v0.6.1</title>
    <updated>2023-07-13T16:05:28Z</updated>
    <dc:date>2023-07-13T16:05:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.27</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.27"/>
    <summary>This release fixes a display issue, where the decimal parts of amounts denominated in Btc/mBtc/bits units were hard to read. These parts are now correctly aligned.

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:
- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:
```
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.27</title>
    <updated>2023-07-12T13:16:03Z</updated>
    <dc:date>2023-07-12T13:16:03Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.7</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.7"/>
    <summary>FIX: can't access storage for unsigned transaction export #5559</summary>
    <title>BlueWallet/BlueWallet: v6.4.7</title>
    <updated>2023-07-09T19:13:33Z</updated>
    <dc:date>2023-07-09T19:13:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.16.4-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.16.4-beta"/>
    <summary>This is a minor release created to fix a memory leak introduced by a CPU optimization to the recently introduced mempool scanning logic. This release contains no other fixes or bug fixes other than the aforementioned one. 

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.16.4-beta.sig` and `manifest-v0.16.4-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.16.4-beta.sig manifest-v0.16.4-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Wed Jul  5 17:29:05 2023 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.16.4-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.16.4-beta.sig.ots -f manifest-roasbeef-v0.16.4-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.20.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, `kvdb_etcd` and `kvdb_sqlite`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.16.4-beta
gpg: Signature made Tue 04 Jul 2023 07:56:54 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.16.4-beta /verify-install.sh v0.16.4-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.16.4-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.16.4-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.16.4-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.16.4-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

* https://github.com/lightningnetwork/lnd/blob/v0-16-4-branch/docs/release-notes/release-notes-0.16.4.md

# Contributors (Alphabetical Order)

* Yong Yu</summary>
    <title>lightningnetwork/lnd: v0.16.4-beta</title>
    <updated>2023-07-06T00:39:13Z</updated>
    <dc:date>2023-07-06T00:39:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits/releases/tag/0.10.9</id>
    <link href="https://github.com/lnbits/lnbits/releases/tag/0.10.9"/>
    <summary>In this release, we introduce a whole suite of new security features to harden your LNbits instance. Our goal is to make these features accessible and keep every instance as safe as possible to protect user funds from possible security breaches. 

## The new Security panel
You will find a new Security panel in your Manage Server [AdminUI](https://github.com/lnbits/lnbits/wiki/LNbits-Documentation) that you can access as the super user. All features are opt-in and are also accessible via the [LNbits API](https://legend.lnbits.com/docs#/default/api_update_settings_admin_api_v1_settings__put).

The Security panel has six components:

* Server logs 📝
* IP blocker 🚫
* Rate limiter 🐌
* Security notifications 🔔
* Killswitch 🪓
* Watchdog 🐕

### Server logs 📝
You can now directly view the logs of your LNbits instance from the admin UI. This will allow users to observe the activity of your instance and identify issues without having to log into a shell.

### IP Blocker 🚫
The IP blocker allows you to add IP addresses that you would like to block from accessing your instance. 

### Rate limiter 🐌
The built-in rate limiter protects your instance better from denial-of-service attacks. You can set the number of requests per time unit you want to allow.

### Security notifications 🔔
The new notifications area will show you updates from the LNbits team to notify you about new version releases and any warnings we might want to issue. The updates are polled from a GitHub repository, so you don't leak your IP to us. This is an opt-in feature.

### Killswitch 🪓
We have built a security mechanism that allows us to temporarily disable your LNbits instance from making any payments until you restart it. This feature is only intended to protect users from loss of funds in the event of a security incident. We will trigger the killswitch only if we discover critical exploits. The updates are polled from a GitHub repository, so you don't leak your IP to us. This is an opt-in feature.

### Watchdog  🐕 (coming soon)
Watchdog is a service that runs periodic checks against your node's balance and your LNbits instance's balance. If it detects deviations between the two up to a certain margin, it will disable all payments until you turn it off again. This is to protect you from any vulnerabilities that might drain your instance's balance. Only use this feature if you don't intend to use your node for anything else than your LNbits since that would lead to a divergence of balances otherwise. Please note that we have disabled this feature for now and will enable it shortly after rigorous testing.

## Other changes

* Updates for Wallet UI
* Improves Extension manager
* Improves testing on regtest 
* Hides super_user ID to prevent leaks
* Precommit checks for developers

## Screenshot
![image](https://user-images.githubusercontent.com/93376500/250604514-e37f230f-7a32-47f2-90a2-0a0a860317c4.png)

## New Contributors
* @Perlover made their first contribution in https://github.com/lnbits/lnbits/pull/1749
* @oren-z0 made their first contribution in https://github.com/lnbits/lnbits/pull/1767
* @YauhenHuchok made their first contribution in https://github.com/lnbits/lnbits/pull/1748
* @capybarahodler made their first contribution in https://github.com/lnbits/lnbits/pull/1768

**Full Changelog**: https://github.com/lnbits/lnbits/compare/0.10.8...0.10.9</summary>
    <title>lnbits/lnbits: 0.10.9</title>
    <updated>2023-07-04T10:30:20Z</updated>
    <dc:date>2023-07-04T10:30:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.6</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.4.6"/>
    <summary>* ADD: add new languages
* ADD: support scanning SeedQR backup (closes #4959) 
* FIX: incorrect error handling when scanning invalid BC-UR data 
* FIX: incorrect data display on multisig wallet details screen 
* FIX: Scan of descriptor QR from Sparrow Wallet not working (closes #5539) 
</summary>
    <title>BlueWallet/BlueWallet: v6.4.6</title>
    <updated>2023-07-03T15:15:22Z</updated>
    <dc:date>2023-07-03T15:15:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.9.12</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.9.12"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

This is a follow-up release that fixes two issues in v1.9.11 with the included BurningMan accounting data store.

See https://github.com/bisq-network/bisq/milestone/81?closed=1 for more details.

Here are the release notes from v1.9.11:

## Release notes
Now, you can clone existing offers while sharing its maker fee and security deposit. The cloned offer can have a different price, payment method, currency, and trigger price. In this new release, Bisq starts quicker because light nodes don't process Burningman accounting statistics anymore. Further, dispute agents can resend PeerOpenedDisputeMessages to non-resposive peers.

See https://github.com/bisq-network/bisq/milestone/80?closed=1 for more details.

### Improvements
- [Allow cloning offers (with different price, payment method, currency, and trigger price) while sharing its maker fees and security deposits](https://github.com/bisq-network/bisq/pull/6675)
- [Don't process burningman accounting data by default](https://github.com/bisq-network/bisq/pull/6644)
- [Speed up burningman and statistics view loads](https://github.com/bisq-network/bisq/pull/6697)
- [Allow dispute agent to resend PeerOpenedDisputeMessage to non-resposive peer](https://github.com/bisq-network/bisq/pull/6723)
- [Prefer Burningmen's custom receiver address](https://github.com/bisq-network/bisq/pull/6700)
- [Burningman Accounting: Show total fees and total DPT](https://github.com/bisq-network/bisq/pull/6647)
- Remove Burningman activation code ([1](https://github.com/bisq-network/bisq/pull/6701), [2](https://github.com/bisq-network/bisq/pull/6702))
- [Add gettransactions method to API](https://github.com/bisq-network/bisq/pull/6680)
- [getoffers (API): Return all offers instead of the only ones with a matching accounts](https://github.com/bisq-network/bisq/pull/6646)

### Bug fixes
- [Add SEPA Payment Account country: GI (Gibraltar)](https://github.com/bisq-network/bisq/pull/6722)
- [Allow leniency of 50% when validating trade fees.](https://github.com/bisq-network/bisq/pull/6670)
- [Increase fee limit for accounting data filter.](https://github.com/bisq-network/bisq/pull/6674)
- [Remove &quot;Your computer was asleep&quot; popup](https://github.com/bisq-network/bisq/pull/6705)
- [Remove one seednode from Wiz](https://github.com/bisq-network/bisq/pull/6737)
- [Update wiz's Bitcoin nodes clearnet IP](https://github.com/bisq-network/bisq/pull/6662)
- [Move to portfolio when clicked close in popup](https://github.com/bisq-network/bisq/pull/6641)
- [Fix NullPointerException when sorting columns with blank entries](https://github.com/bisq-network/bisq/pull/6666)
- [Use new burningman accounting file recreated from scratch.](https://github.com/bisq-network/bisq/pull/6740)

### Development &amp; Documentation
- [Gradle version catalog: Fix broken gson version enforcement](https://github.com/bisq-network/bisq/pull/6716)
- [GitHub Actions: Enable Gradle Build Scans](https://github.com/bisq-network/bisq/pull/6684)
- [GitHub Actions: Run on all branches](https://github.com/bisq-network/bisq/pull/6685)
- Update GitHub Actions: checkout ([1](https://github.com/bisq-network/bisq/pull/6656), [2](https://github.com/bisq-network/bisq/pull/6728)), [gradle-build](https://github.com/bisq-network/bisq/pull/6655)
- [Add bisq2 Gradle Tor Plugin](https://github.com/bisq-network/bisq/pull/6676)
- Migrate to JUnit 5 ([1](https://github.com/bisq-network/bisq/pull/6619), [2](https://github.com/bisq-network/bisq/pull/6686), [3](https://github.com/bisq-network/bisq/pull/6687), [4](https://github.com/bisq-network/bisq/pull/6688), [5](https://github.com/bisq-network/bisq/pull/6691), [6](https://github.com/bisq-network/bisq/pull/6692), [7](https://github.com/bisq-network/bisq/pull/6693), [8](https://github.com/bisq-network/bisq/pull/6694), [9](https://github.com/bisq-network/bisq/pull/6695), [10](https://github.com/bisq-network/bisq/pull/6696), [11](https://github.com/bisq-network/bisq/pull/6713), [11](https://github.com/bisq-network/bisq/pull/6652))

### New Assets
No new assets added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Alejandro García): https://bisq.network/pubkey/E222AA02.asc
Full fingerprint: `B493 3191 06CC 3D1F 252E  19CB F806 F422 E222 AA02`

Import the key:
`curl https://bisq.network/pubkey/E222AA02.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.9.11.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.9.11-all.jar
The output need to match the value from the Bisq-1.9.11.jar.txt file.

There are three hashes within the Bisq-1.9.11.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.9 and the v1.9.11 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## API
[API]: #api-documentation
Starting with v1.9.0 you can use pre-built versions of the Bisq cli (bisq-cli-v1.9.11.zip) and Bisq daemon (bisq-daemon-v1.9.11.zip) to use Bisq without touching the user interface.

Just download the archives and extract them locally. You have to run the daemon to access the local Bisq daemon API endpoints.

To run daemon.jar on Mainnet:
```bash
$ java -jar daemon.jar --apiPassword=becareful
```

If you just want to control your headless daemon within your terminal you have to run the Bisq cli as well.

Again just download the bisq-cli archive and extract it locally.

To call getversion from cli.jar
```bash
$ java -jar cli.jar --password=becareful getversion
```

You can use the Bisq API to access local Bisq daemon API endpoints, which provide a subset of the Bisq Desktop application's feature set: check balances, transfer BTC and BSQ, create payment accounts, view offers, create and take offers, and execute trades.

The Bisq API is based on the gRPC framework, and any supported gRPC language binding can be used to call Bisq API endpoints.

You'll find in-depth documentation and examples under following link: https://bisq-network.github.io/slate/#introduction

Bisq gRPC API reference documentation example source code is hosted on GitHub at https://github.com/bisq-network/bisq-api-reference. Java and Python developers interested in bot development may find this Intellij project useful for running the existing examples, and writing their own bots.

For additional developer support please join [Development - Bisq v1](https://matrix.to/#/%23bisq.dev:bitcoin.kyoto) on Matrix.

## Known issues with installation 

### macOS:

We removed notarization from our build pipeline because of of the risk of Apple certification revocation (see https://github.com/bisq-network/bisq/discussions/6341). Unfortunately this will require extra steps when installing Bisq on macOS.

Please follow the guide at https://support.apple.com/en-us/HT202491 in the section If you want to open an app that hasn’t been notarized or is from an unidentified developer

If you are running already macOS Ventura (13.0+) you need to do following to be able to start Bisq:

enter following command in Apple Terminal `sudo xattr -rd com.apple.quarantine /Applications/Bisq.app`
hit enter and you will be prompted to enter your password to be able to execute the command as super user
After running this successfully you should be able to start Bisq as always.

### Windows:

We removed the developer code signing because of the same reason as with Apple.
For Windows you just have to ignore the warning after you have verified the installation file yourself and proceed with the installation.

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.9.11.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @alejandrogarcia83
- @alvasw
- @Emzy
- @gabernard
- @helixx87
- @HenrikJannsen
- @jmacxx
- @napoly
- @ripcurlx
- @sqrrm
- @stejbac
- @wiz
- @yonson2023

A special thanks to our first time contributor:
- @helixx87
- @napoly

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.9.12</title>
    <updated>2023-06-30T23:34:03Z</updated>
    <dc:date>2023-06-30T23:34:03Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v23.05.2</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v23.05.2"/>
    <summary>This is a bugfix-only release which repairs several issues reported in the wild. It is a recommended upgrade for anyone on v23.05.

* `--enable-experimental-features` compilation fixed.
* `pay` and `decodepay` with description now correctly handle JSON escapes (e.g &quot; inside description)
* `pay` has *undeprecated* paying a description-hash invoice without providing the description (since it didn't work reliably until now!)
* GRPC: `listpeers` sometimes could fail on unknown HTLC states.

~ @rustyrussell, @ShahanaFarooqui, @endothermicdev, @cdecker, and @niftynei</summary>
    <title>ElementsProject/lightning: v23.05.2</title>
    <updated>2023-06-29T15:00:38Z</updated>
    <dc:date>2023-06-29T15:00:38Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.10.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.10.3"/>
    <summary>### New Features

* Pull Payment: Support LNURL Withdraw with SATS denomination (#5041) @dennisreimann

### Bug fixes

* Crowdfund: Fix JS errors in empty state (#5121) @dennisreimann
* The current preimage of a invoice's lightning payment method should be available via API (#5111) @NicolasDorier
* Dashboard: Limit &quot;Top Items&quot; to five (#5110) @dennisreimann
* ToolTip causes glitching when scrolling down on mobile (#4956) @dennisreimann
* LN payments failed to be detected on litd (#5104) @NicolasDorier
* Fix for LNDHub via LNbits integration (#5083 #4482) @dennisreimann
* Applying a discount in PoS with cart wasn't working (#5079) @NicolasDorier
* Refund: Fix overpaid option (#5076 #5066) @dennisreimann
* Do not crash when an invoice have an amount that is too big (#5070) @NicolasDorier
* NFC: Do not start scanning if unsupported (#5067) @dennisreimann
* Fix: Incorrect rounding in the receipt of PoS invoice (#5071 #5072) @NicolasDorier
* Crowdfund: Fix null pointer exception for topup type (missing price) (#5068) @dennisreimann
* Greenfield: Default currency missing from stores API (#5126) @dennisreimann

### Improvements

* Load wallet transaction list asynchronously to avoid timeout on large wallets (#5100 #4987) @NicolasDorier
* Receipt improvements (#5077) @dennisreimann
* Dashboard: Make invoice badges consistent with those on invoices list (#5108 #4969) @dennisreimann
* Make file management UI more useful (#5081) @Kukks
* After changing PoS items values, the JSON template should be indented @NicolasDorier
* Add extension point to template editor (#5080) @Kukks
* Querying a lightning address no longer generates an invoice each time (#5117) @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.10.3</title>
    <updated>2023-06-27T13:25:41Z</updated>
    <dc:date>2023-06-27T13:25:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.3</id>
    <link href="https://github.com/Start9Labs/start-os/releases/tag/v0.3.4.3"/>
    <summary>## Highlights
* Improved Tor reliability
* Experimental features tab
  * Zram
  * Manually reset tor
* Multiple bugfixes and general performance enhancements
* Update branding

## What's Changed
* Integration/0.3.4.3 by @elvece in https://github.com/Start9Labs/start-os/pull/2291
* StartOS 0.3.4.3 by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2304
* fix rootflags for btrfs update by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2315
* prevent tor from spinning if a service is in a crash loop by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2316
* use port instead of pidof to detect tor going down by @dr-bonez in https://github.com/Start9Labs/start-os/pull/2320


**Full Changelog**: https://github.com/Start9Labs/start-os/compare/v0.3.4.2...v0.3.4.3

## Checksums

### BLAKE-3
```
38ef340ebf453b304dfc553f9886189b5b0c23336cc257b71adfd9724931f7d9  startos-0.3.4.3-dd28ad2-20230623_aarch64.iso
6ea3b8dec71328d4e96a9c4b08d903d9f2c9f0faf23fc039b4fda3e1e2733dbf  startos-0.3.4.3-dd28ad2-20230623_aarch64-nonfree.iso
2dc402ef6c742331fd47c93273a3ee14dfeaea16652ba0040a097b8f5f847deb  startos-0.3.4.3-dd28ad2-20230623_x86_64.iso
a5e220b99385512242ac6dee3cdeab06ed55867d3f22c80210533be5629c3e19  startos-0.3.4.3-dd28ad2-20230623_x86_64-nonfree.iso
3cb46993eda87c5f2e485efe971c61af5248da41242652b5b56949e88eaa4a7b  startos-0.3.4.3-dd28ad2-20230623_raspberrypi.img.gz
```

### SHA-256
```
720ad631b38000850be563107128c77b6803e7cbe06946e70e8737b08f46728e  startos-0.3.4.3-dd28ad2-20230623_aarch64.iso
627e7cd18521b51f2bd6988517b0edc9d461631facc37d190f8bd4bf36626b89  startos-0.3.4.3-dd28ad2-20230623_aarch64-nonfree.iso
d66015e5a29f98e0961d191036d35298549970f31e313ee1682921281c06bf22  startos-0.3.4.3-dd28ad2-20230623_x86_64.iso
035bb38d112a91c43a5e2ece7bd7fcdc22723f717540ee9a65337e0592dac1b9  startos-0.3.4.3-dd28ad2-20230623_x86_64-nonfree.iso
42df06e0f5f63431c7863f65ba0b30d78b1985e5000c2d49bd60f639e264943d  startos-0.3.4.3-dd28ad2-20230623_raspberrypi.img.gz
```</summary>
    <title>Start9Labs/start-os: v0.3.4.3</title>
    <updated>2023-06-24T21:12:50Z</updated>
    <dc:date>2023-06-24T21:12:50Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.7.7</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.7.7"/>
    <summary>- Improve the mempool fee rates chart to reflect finer granularity and offer an expanded display on click
- Add a 24h toggle to expanded mempool fee rates chart
- Add additional inputs to an RBF transaction if needed as required fee is increased
- Display the order of word selection on a Border Wallets grid
- Avoid simultaneous multiple selection on a Border Wallets grid
- Clarify recovery phrase purpose on Border Wallets PDF
- Support `spendable` property on UTXOs in BIP329 wallet label imports and exports
- Improve the error message when broadcasting an RBF transaction with insufficient fee, and indicate the minimum required fee if available
- Improve error message on broadcasting a transaction with a fee rate below the purge rate for the connected node mempool
- Add Ctrl/Cmd+B keyboard shortcut for quickly switching the bitcoin unit from BTC to sats and back
- When scanning, invert cropped frame and scan for inverted QRs
- Support scanning text QR containing seed words
- Update to hummingbird v1.6.7 to support pair (`&lt;0;1&gt;`) path components and unique part progress indicator
- Support compact SeedQRs with high error correction
- Trim leading and trailing whitespace from Pay to address field in the Send tab
- Look for supported cards across all connected card terminals
- Support airgapped keystore import of a Tapsigner with a custom derivation path
- Add a separate button to backup Tapsigner without changing the PIN
- Ensure canonical ordering of key expressions in multisig descriptor QRs
- Improve performance on large wallets with high address reuse
- Optimize fetching mempool entries for fee rate histogram when connected to Bitcoin Core
- Continue with transaction parsing if pushdata opcode is found with invalid data length
- Add context menu options to Date column in UTXOs table to freeze UTXO and view transaction
- Remove path from non-batched Electrum server request ids
- Highlight CSV download buttons
- Update `kmp-tor` to v1.4.3
- Bug fix: Fix export to Specter Desktop without any wallet history
- Bug fix: Set all witness UTXOs on PSBT inputs before attempting to sign a sweep private key Taproot transaction
- Bug fix: Fix reading of compact size int as unsigned short when parsing PSBTs
- Bug fix: Fix unit format switching on Send tab
- Bug fix: Fix UI button update when stopping mixing on Terminal</summary>
    <title>sparrowwallet/sparrow: 1.7.7</title>
    <updated>2023-06-22T10:39:10Z</updated>
    <dc:date>2023-06-22T10:39:10Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.10.0-rc.1</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.10.0-rc.1"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#0100-rc1-jun-21-2023</summary>
    <title>romanz/electrs: v0.10.0-rc.1</title>
    <updated>2023-06-21T18:22:40Z</updated>
    <dc:date>2023-06-21T18:22:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.5.4</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.5.4"/>
    <summary>This update introduces a completely reimagined App Store, crafted to provide a sleek and intuitive experience as you discover the latest self-hosted apps for your Umbrel. The new Migration Assistant feature enables seamless transfer of data and apps from a Raspberry Pi-based Umbrel to the new Umbrel Home in one click. Complementing these enhancements are various performance improvements, bug fixes, and subtle refinements, such as the option to update your display name directly from the settings.

## Changes

https://github.com/getumbrel/umbrel/compare/v0.5.3...v0.5.4

- umbrelOS 0.5.4 (d299a7ad05dfd31d18f8b5d1828cecd459760dd5) @lukechilds
- Update to dashboard 0.5.4 (4fd68cf6c995c52330ff27db05719d73fb32a253) @lukechilds
- increase margin on migration logo (c7574b26b8055b0204e0ee356a026bb48667b13c) @nmfretz
- Update migration assistant wording (016e7db3c02d677179cd9f0b3536423b985d56dd) @mayankchhabra
- Fix grammar (3043de71d594f8d26c9c8e7714143b166ad78511) @lukechilds
- Update logo (3e573a81f72318fa0cf2286b650d5ed3c3f73c79) @mayankchhabra
- Tweak migration error wording (3581215a91dbaa21fce9d19544db3ade15ea72cb) @lukechilds
- Wording tweaks (e7ec98f7f1d0c5babee9ac1d83913876bf84d89d) @mayankchhabra
- Add badge to apps optimized for Umbrel Home (3394747f45d0c1c7a6e821d031a0c8ca4c9d7244) @mayankchhabra
- Update to manager 0.5.4 (8c842b31a22bada261b2c6e1a5157d16e68e13bf) @lukechilds
- Improve release CI (f5b299dfd2a548b6e37e03b67a11b318c572d569) @lukechilds
- Fix updates button and drop down menu (c6e648209901ca2a4be82d63bc7ec07c172e58c0) @mayankchhabra
- Update categories in app store (60fcca771c6d235593a00bd00e778e78be0dc56a) @mayankchhabra
- Wrap up app store redesign (c232efa642f43f89ed0a70b9120bb62a2394b2d3) @mayankchhabra @nmfretz @lukechilds
- Show 16GB total RAM for Umbrel Home (7567472b5b27ef11865eeb673fe4e8620cec64f1) @mayankchhabra
- Update favicons (5bfc8571afc93a59a334e754ad032344bbcece51) @mayankchhabra
- Show app download progress in migration (75251753d508136e036be412a778de79024e8011) @lukechilds
- Migration assistant updates (622617bc6b8a814fbaf53b9874687be66e483ea0) @lukechilds @nmfretz
- Make sure umbreld OTA update is atomic (27d2b2dfb4973ebeec893675d60cbe6d89b3f086) @lukechilds
- Fix install script (f33ffd815fa50930b06214b752d076f30cafa4e7) @lukechilds
- Restore image cleanup logic from previous update (cfc5a9b24ffc1513ed35c0905163a3d92f019ff3) @lukechilds
- Only update Umbrel if migrations suceed (3d7e398af8af5e641619cbcb6ae70b7f587a4af3) @lukechilds
- Update info.json during update (8d5b01b4f4c68938bb2219e5f4a0fc1d99bffd28) @lukechilds
- Update umbreld in OTA update (8d9ce79deac14045ee8f9c9d174667b2d0034205) @lukechilds
- Add umbreld to install script (a52c9d1f522dd0dd0fd6007c168e2b991174bb9a) @lukechilds
- Update CI (e454e7874bda36c7f7db37b54f77ccaa9a972930) @lukechilds
- Add hot reload to manager in dev env (cba3a5677e1d9e0d15f8d2d87ca1177b17735252) @mayankchhabra
- Delete nohup.out (f3dba58a449639966f513456f84566db03b847b8) @lukechilds
- Delete old CI workflows (a0b284b249f22da48ff76843b41c67c52f1d0a90) @lukechilds
- Don't preserve new Umbrel password after migration (bec4ec90393084ec5ae6d7a5e6137780ff8934bb) @lukechilds
- Show 100% on migration completion (4f3652986b31436a8d4f2e4f80581de6ccdc19c3) @lukechilds
- Improve dev setup (e407909c661b4c31ee995e643fa97f0a57d2c2c0) @lukechilds
- Fixes disappeared app suggestions from home on fresh install (bd80c23d2282f294778bd44a635f24c865022de2) @mayankchhabra
- Improve recovery script (63e41f1ec6ed98428ae4e7b4e72e04f0703d29cc) @lukechilds
- Always run migrations (668e1ba865880a8c7d1ae71434cf717f6b0a4ab2) @lukechilds
- Move jwt keys to seperate dir so they survive migration (3bc641f706a5f11b0297a635595a72fac4b83606) @lukechilds
- Fix umbreld url (054f80396ce58737cb52efc8c3ab4ed247971f57) @lukechilds
- Finish dev integration (08f6aaa43e1c5de2ec846092583155c978c686ab) @lukechilds
- Add dashboard as package (b5832a7a8e7011a9fff5b3eeac99b35c927ba549) @lukechilds
- Copy dev files during update (431e2c92469b15fec23589c82552e81d475b7d7e) @lukechilds
- Only run power button migration if it hasn't already run (3e39d37859dc39ff0ed4491231996bbdf09ad7fc) @lukechilds
- Retry update network manager (5a140a84b09bd4980d3c306cce3fa871a3c382af) @lukechilds
- Umbrel Home hardware reset (fb4b8d1935758f6db8f63ba07a24c280b7af8a1b) @lukechilds
- Don't nuke jwt on every startup (bd330d7eb9371144fa8324ecd1898655541c574e) @lukechilds
- Add development mode (4d668dda095c35786a0d23ef263e598eb5699554) @lukechilds
- Don't enforce min length check on old password when updating (a970587c40b08f754bbe831685eebd228f44d944) @lukechilds
- Add manager as package (4429207a40a5f07d70f1a554c0c59ea9c26eccf6) @lukechilds
- Ensure umbreld doesn't get unintentionally nuked by start script (cfb93a3fdc94545000f1781df8489783a8f03261) @lukechilds
- Migrate Umbrel Home installs to using dhclient for DHCP (7db3f023bcae91976133e16e3c2132789ef19b47) @lukechilds
- Bump JWT lifetime to 1 week (dc2468d39bfac38bcb53887f7e4c00e32683138d) @lukechilds
- Add umbreld scaffolding and implement migration assistant (0e27affbf16932ebb649e2ea2ac800ba209c8cb8) @lukechilds
- Update README.md (cf22afaee6d0b3ff1e2bc67b43f12fb7299d2e22) @mayankchhabra
- replace final message at end of debug script (60b971c1db1cb60709895e0860b8ae1baf2707a1) @louneskmt @nmfretz
- fix minor spelling error (f60bebecae30de37a41633514e339be7ea1914c0) @nmfretz
- update app info in readme (597a19d753356c30f441b77167c7da0d3236c561) @nmfretz
- remove bitcoin network echo (887a4129a144d78b66b597c99268376376260fe0) @nmfretz
- Fix spelling (d94d02dccc1ace34a501acc9d9fa11b039ee2597) @deverickapollo
- Delete old locks inside .git for local app repos (d7c9f4d16317d52eef2193458935dc673790f4db) @nevets963
- chown local app repo when using repo checkout (84c29bc3f7ed3e4d4ce99b11ff8efa94196b8d25) @nevets963
- During app update, copy remaining app files before the app is started (73f99fa7ac930c905cc16d08336edd7dfdd7afcf) @nevets963
- Set default logging config for Docker daemon (a023b3db1c20b25c08dfddc9ed5728dddba65880) @nevets963
- Handle downstream WS/HTTP errors individually (36169fee71b4e96d8805e01ab109de0f702d5f7a) @nevets963
- Safe app exports (dcd7fb7743900f8e73781436994ce001a4e43c7a) @nevets963</summary>
    <title>getumbrel/umbrel: v0.5.4</title>
    <updated>2023-06-21T13:32:32Z</updated>
    <dc:date>2023-06-21T13:32:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.18.3</id>
    <link href="https://github.com/ACINQ/bitcoin-lib/releases/tag/v0.18.3"/>
    <summary>Maintenance release for the old 0.18 branch (used our by our legacy Android app) which adds support for Bech32m encoding used by taproot addresses.

:warning: this is  most probably not what you're looking for, please check our latest release instead.

**Full Changelog**: https://github.com/ACINQ/bitcoin-lib/compare/v0.18.2...v0.18.3</summary>
    <title>ACINQ/bitcoin-lib: v0.18.3</title>
    <updated>2023-06-19T15:00:16Z</updated>
    <dc:date>2023-06-19T15:00:16Z</dc:date>
  </entry>
  <dc:date>2023-12-21T12:21:32+00:00</dc:date>
</feed>