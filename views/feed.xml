<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/">
  <author>
    <name>flip_btc</name>
  </author>
  <id>https://release-tracker.b.tc/</id>
  <title>Bitcoin Projects Release Tracker</title>
  <updated>2022-07-15T04:09:24+00:00</updated>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.2"/>
    <summary>### Bug fixes:

* Fix: Cannot withdraw refund (payouts) with LNURL (#3953 #3953) @Kukks
* Fix: Cannot withdraw refund (payouts) with LN Address (#3953 #3960) @Kukks
* Fix: Missing pager in the wallet transaction list @NicolasDorier
* Fix: webhook &quot;Send specific events&quot; display issue (#3959) @rustywave

### Improvements:

* Added HRF and Strike to the list of supporters #3965 @dennisreimann
* Invoice summary: Fix indentation and heading levels (#3956) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.6.2</title>
    <updated>2022-07-15T03:52:53Z</updated>
    <dc:date>2022-07-15T03:52:53Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.5.1</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.5.1"/>
    <summary>This update brings several bugfixes, performance improvements, and the ability to see what’s changed in new app updates before installing them.

Thank you @kroese and @jordi-adame for your contributions!</summary>
    <title>getumbrel/umbrel: v0.5.1</title>
    <updated>2022-07-14T12:04:38Z</updated>
    <dc:date>2022-07-14T12:04:38Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.2</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.2"/>
    <summary># Summary

_PRIVACY IS YOUR ABILITY TO SELECTIVELY REVEAL YOURSELF TO THE WORLD_

This PR includes a couple of stabilization improvements mostly around network communication, but also adds new features. 

- Fixing the problem when Tor gets stuck with TtlExpired error. 
- Adds RedCoinIsolation [feature](https://github.com/zkSNACKs/WalletWasabi/issues/8516).
- Minor improvement in CoinJoin coin [selector algorithm]( https://github.com/zkSNACKs/WalletWasabi/pull/8659).
- Crash fixes. 

# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [How To Use](https://youtu.be/bQKU2khua-8) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET 6.0.300.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.15.

## What's Changed
* [VDG] Fix possibly null reference in QrCode by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/8627
* `TorHttpPool`: Catch even `TorConnectCommandFailedException` without `TtlExpired` flag. by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8553
* `TorTcpConnectionFactory`: Log only on trace level by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8629
* Remove unnecessary logging to console by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/8624
* Remove WW1 *client* code. by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8639
* Fix rounding error in anonscore calculation by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8633
* [Trivial] Fix code factor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/8634
* [VDG] Discreet Mode for wallet coins by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/8188
* [VDG] Modify `RxApp.DefaultExceptionHandler` by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/7478
* Backend: Additional Docker stuff by @Kukks in https://github.com/zkSNACKs/WalletWasabi/pull/8596
* Add RedCoinIsolation by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8522
* [Trivial] Update tooltip for Red coin isolation by @Szpoti in https://github.com/zkSNACKs/WalletWasabi/pull/8644
* Update CoinJoinProfile equalities + remove redundant code by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8643
* [VDG] change item order in Transaction Details by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/8645
* `WasabiSynchronizer`: Remove request blocking by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8640
* Return ownership proofs by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/8635
* Fix fallback  by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8654
* [VDG] WalletManagerViewModel - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8652
* [VDG] WalletViewModelBase - Cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8651
* [Trivial] Order elements (CodeFactor) by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/8657
* Use `NoAuthenticationRequired` for DefaultCircuit by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8660
* [Trivial] Fix Codefactor issues by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/8658
* [VDG] Update to Avalonia 0.10.16 by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/8663
* [Trivial] Remove unused code by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8668
* Revert &quot;Return ownership proofs&quot; by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8671
* Don't swallow exception by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8673
* Make AliceClient handle Protocol exceptions by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8675
* Tor: remove digest line for macOS by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8628
* [VDG] NavBarViewModel - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8666
* `WasabiSynchronizer`: Improve exception handling by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8641
* [VDG] Fix LabelsPanel not displaying all items by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/8683
* [VDG] wallet stats lowercase writing by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/8686
* [VDG] NavBarItemViewModel - cleanup by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8667
* [VDG] Fix NavBarItem shaking title by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/8688
* Weakly consider AS for coin selection by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8659
* `TorMonitor`: Add restarting capability by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8669
* Allow only single run of `PrivacySuggestionsFlyoutViewModel.BuildPrivacySuggestionsAsync` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8594
* Update Website main image by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/8702
* macOS: Tor control failed to initialize by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8700


**Full Changelog**: https://github.com/zkSNACKs/WalletWasabi/compare/v2.0.1.1...v2.0.1.2</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.1.2</title>
    <updated>2022-07-13T12:09:06Z</updated>
    <dc:date>2022-07-13T12:09:06Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.1</id>
    <link href="https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.1"/>
    <summary>## What's Changed
* Feat  bulk locking by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1422
* Switching SSH keys to start9 user by @k0gen in https://github.com/Start9Labs/embassy-os/pull/1321
* chore: Convert from ajv to ts-matches by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1415
* Fix/id params by @elvece in https://github.com/Start9Labs/embassy-os/pull/1414
* make nicer update sound by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1438
* adds product key to error message in setup flow when there is mismatch by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1436
* Update README.md to include yq by @cryptodread in https://github.com/Start9Labs/embassy-os/pull/1385
* ☯️ For the peace of mind ☯️ by @k0gen in https://github.com/Start9Labs/embassy-os/pull/1444
* Feature/update sound by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1439
* Feature/script packing by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1435
* rename ActionImplementation to PackageProcedure by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1448
* Chore/warning cleanse by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1447
* refactor packing to async by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1453
* Add nginx config for proxy redirect by @yzernik in https://github.com/Start9Labs/embassy-os/pull/1421
* Proxy local frontend to remote backend by @elvece in https://github.com/Start9Labs/embassy-os/pull/1452
* Feat/js action by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1437
* Fix/making js work by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1456
* fix: Dependency vs dependents by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1462
* refactor: isolate network toast and login redirect to separate services by @waterplea in https://github.com/Start9Labs/embassy-os/pull/1412
* Fix links in CONTRIBUTING.md, update ToC by @BBlackwo in https://github.com/Start9Labs/embassy-os/pull/1463
* Feature/require script consistency by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1451
* Chore/version 0 3 1 0 by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1475
* remove interactive TTY requirement from scripts by @moerketh in https://github.com/Start9Labs/embassy-os/pull/1469
* Disable view in marketplace button when side-loaded by @BBlackwo in https://github.com/Start9Labs/embassy-os/pull/1471
* Link to tor address on LAN setup page (#1277) by @BBlackwo in https://github.com/Start9Labs/embassy-os/pull/1466
* UI version updates and welcome message for 0.3.1 by @elvece in https://github.com/Start9Labs/embassy-os/pull/1479
* Update contribution and frontend readme by @BBlackwo in https://github.com/Start9Labs/embassy-os/pull/1467
* Clean up config by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1484
* Enable Control Groups for Docker containers by @k0gen in https://github.com/Start9Labs/embassy-os/pull/1468
* Fix/patch db unwrap remove by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1481
* handles spaces in working dir in make-image.sh by @moerketh in https://github.com/Start9Labs/embassy-os/pull/1487
* UI cosmetic improvements by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1486
* chore: fix the master by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1495
* generate unique ca names based off of server id by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1500
* allow embassy-cli not as root by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1501
* fix: potential fix for the docker leaking the errors and such by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1496
* Fix/memory leak docker by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1505
* fixes serialization of regex pattern + description by @ProofOfKeags in https://github.com/Start9Labs/embassy-os/pull/1509
* allow interactive TTY if available by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1508
* fix &quot;missing proxy&quot; error in embassy-cli by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1516
* Feat/js known errors by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1514
* fixes a bug where nginx will crash if eos goes into diagnostic mode a… by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1506
* fix: restart/ uninstall sometimes didn't work by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1527
* add &quot;error_for_status&quot; to static file downloads by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1532
* fixes #1169 by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1533
* disable unnecessary services by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1535
* chore: Update types to match embassyd by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1539
* fix: found a unsaturaded args fix by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1540
* chore: Update the lite types to include the union and enum by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1542
* Feat: Make the js check for health by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1543
* fix incorrect error message for deserialization in ValueSpecString by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1547
* fix dependency/dependent id issue by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1546
* add textarea to ValueSpecString by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1534
* Feat/js metadata by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1548
* feat: uid/gid/mode added to metadata by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1551
* Strict null checks by @waterplea in https://github.com/Start9Labs/embassy-os/pull/1464
* fix backend builds for safe git config by @elvece in https://github.com/Start9Labs/embassy-os/pull/1549
* update should send version not version spec by @elvece in https://github.com/Start9Labs/embassy-os/pull/1559
* chore: Add tracing for debuging the js procedure slowness by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1552
* Reset password through setup wizard by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1490
* feat: Make sdk by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1564
* fix: Missing a feature flat cfg by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1563
* fixed sentence that didn't make sense by @BitcoinMechanic in https://github.com/Start9Labs/embassy-os/pull/1565
* refactor(patch-db): use PatchDB class declaratively by @waterplea in https://github.com/Start9Labs/embassy-os/pull/1562
* fix bugs with config and clean up dev options by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1558
* fix: Make it so we only need the password on the backup by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1566
* kill all sessions and remove ripple effect by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1567
* adjust service marketplace button for installation source relevance by @elvece in https://github.com/Start9Labs/embassy-os/pull/1571
* fix connection failure display monitoring and other style changes by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1573
* add dns server to embassy-os by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1572
* Fix/mask generic inputs by @elvece in https://github.com/Start9Labs/embassy-os/pull/1570
* Fix/sideload icon type by @elvece in https://github.com/Start9Labs/embassy-os/pull/1577
* add avahi conditional compilation flags to dns by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1579
* selective backups and better drive selection interface by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1576
* Feat/use modern tor by @kn0wmad in https://github.com/Start9Labs/embassy-os/pull/1575
* update welcome notes for 031 by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1580
* fix: Properties had a null description by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1581
* fix backup lock ordering by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1582
* Bugfix/backup lock order by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1583
* preload redacted and visibility hidden by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1584
* turn chevron red in config if error by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1586
* switch to utc by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1587
* update patchdb for array patch fix by @elvece in https://github.com/Start9Labs/embassy-os/pull/1588
* filter package ids when backing up by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1589
* add select/deselect all to backups and enum lists by @elvece in https://github.com/Start9Labs/embassy-os/pull/1590
* fix: Stop the buffer from dropped pre-maturly by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1591
* chore: commit the snapshots by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1592
* nest new entries and message updates better by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1595
* fix html parsing in logs by @elvece in https://github.com/Start9Labs/embassy-os/pull/1598
* don't crash service if io-format is set for main by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1599
* strip html from colors from logs by @elvece in https://github.com/Start9Labs/embassy-os/pull/1604
* feat: fetch effect by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1605
* Fix/UI misc by @elvece in https://github.com/Start9Labs/embassy-os/pull/1606
* display bottom item in backup list and refactor for cleanliness by @MattDHill in https://github.com/Start9Labs/embassy-os/pull/1609
* fix: Closed file by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1608
* fix conditional display state by @elvece in https://github.com/Start9Labs/embassy-os/pull/1612
* release lock on update progress by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1614
* show available marketplace updates in menu by @elvece in https://github.com/Start9Labs/embassy-os/pull/1613
* Default to https:// urls for repositories, remove apt-transport-https by @gStart9 in https://github.com/Start9Labs/embassy-os/pull/1610
* Add basic GitHub workflows builds by @moerketh in https://github.com/Start9Labs/embassy-os/pull/1578
* remove beta flag actions from UI config build by @elvece in https://github.com/Start9Labs/embassy-os/pull/1617
* handle current-dependents properly during update by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1621
* Fix/misc UI by @elvece in https://github.com/Start9Labs/embassy-os/pull/1622
* Fix/adjust pipeline by @moerketh in https://github.com/Start9Labs/embassy-os/pull/1619
* fix icons for sideloaded packages by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1624
* keep status if package has no config by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1626
* Tor repository fix for arm64 by @k0gen in https://github.com/Start9Labs/embassy-os/pull/1623
* fix display of comma between breakages by @elvece in https://github.com/Start9Labs/embassy-os/pull/1628
* chore: updating lock just from make clean; make by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1631

## New Contributors
* @cryptodread made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1385
* @yzernik made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1421
* @BBlackwo made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1463
* @moerketh made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1469
* @BitcoinMechanic made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1565
* @gStart9 made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1610

**Full Changelog**: https://github.com/Start9Labs/embassy-os/compare/v0.3.0.3...v0.3.1</summary>
    <title>Start9Labs/embassy-os: v0.3.1</title>
    <updated>2022-07-11T16:40:40Z</updated>
    <dc:date>2022-07-11T16:40:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.1"/>
    <summary>This fix a critical issue introduced by 1.6.0.
If you are using altcoins integration, you need to update urgently as some change rate may be inverted for some pairs.

### Bug fixes:

* Fix stack overflow if ripio rate provider is unavailable @NicolasDorier
* Fix: For some asset pair the kraken rate was inverted (#3957) @NicolasDorier
</summary>
    <title>btcpayserver/btcpayserver: v1.6.1</title>
    <updated>2022-07-11T14:47:42Z</updated>
    <dc:date>2022-07-11T14:47:42Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.6.0"/>
    <summary>In the past six months, we fixed a critical security vulnerability in one of BTCPay's versions. The security vulnerability has been disclosed responsibly, and we granted a bounty to the security researcher who discovered it. As far as we know, this particular vulnerability has not been exploited in the wild as it depends on multiple factors. For security reasons, we will not publicly disclose details yet. Timeframe for public disclosure is 6-12 months. We already have a CVE number reserved for it.

It's very likely that by updating BTCPay Server in the past six months, you've already patched this vulnerability. To be safe, update your instance if you haven't done so in a long time.

### New features:

* Dashboard: Add Lightning balances and easy access to lightning services (#3838) @dennisreimann
* Dashboard: Add Point Of Sale data (#3897) @dennisreimann @dstrukt
* Greenfield: Basic API Get and Delete operations for apps (#3894) @bolatovumar
* Greenfield: Add Lightning balance endpoint (#3887) @dennisreimann
* Greenfield: Allow excluding unconfirmed UTXOs when creating a new transaction (#3737) @bolatovumar
* Checkout: Public invoice's receipt (#3612) @Kukks
* Can disable TLS certificate check for email servers @NicolasDorier
* Can add sender's name to any field accepting an email destination, for example `Nicolas Dorier &lt;blah@example.com&gt;` rather than just `blah@example.com` (#3891) @NicolasDorier
* Support LNURL Withdraw in payouts (#3709) @Kukks
* Can send parametized emails based on invoice events (#3611) @Kukks
* Dashboard: Added toggle button to switch to store default currency (#3752) @SakshamSolanki @dennisreimann 
* Support Lightning node connection string with onion addresses (#3845) @Kukks
* New rate provider: BUDA a chilean exchange (#3766) @Kukks
* Add Refunds list to Invoice details page (#3815) @Kukks

### Bug fixes:

* UI: Fix cancel plugin command (#3903) @dennisreimann 
* Crowdfunding: Fix the links for the default Quake sounds (#3745) @dennisreimann
* UI: Fix nav height issue on mobile devices (#3888) @bolatovumar
* UI: Fix mark all notifications as seen return URL (#3848) @dennisreimann
* UI: When disabling a user, then it as an admin, attempting to remove or enable the user would fail while showing success in the UI (#3829 #3832) @rustywave
* Deleting an admin gives a 500 error, and cannot disable the same user (#3785 #3818) @rustywave
* Fix some rate providers (#3813) @Kukks
* Dashboard: Do not display archived invoices in recent invoices (#3783) @dennisreimann
* Error happening when broadcasting transactions weren't shown in the UI @NicolasDorier
* If LNURL for standard invoice was disabled, and PoS print view used, the QR code would throw error 404 (#3930) @Kukks

### Improvements:

* Don't show &quot;Set up a Lightning node&quot; when LN is not supported (#3935) @bolatovumar
* Redirect to invoice details instead of list upon creation (#3936) @bolatovumar
* Better UI/UX for on-chain send and receive (#3921) @dennisreimann @dstrukt
* Add refund badge to invoice lists (#3918) @Kukks
* Creating and editing a payment request now redirect to the payment request list (#3825) @rustywave
* Crowdfunding: Several UI/UX improvement for the settings (#3708 #3488) @dennisreimann @dstrukt
* Improve the refund flow (#3715 #3731) @dstrukt @dennisreimann
* Improve email settings validation and UX (#3891) @NicolasDorier
* Add spam rate limits for public invoice endpoints (#3782 #3889) @NicolasDorier
* Greenfield doc: Adding description to `speedPolicy` parameter (#3877) @ndeet
* UI: Improvement of Crowdfund &amp; PoS Modal (#3806) @dstrukt @dennisreimann
* Server Settings: Consolidate Storage and Files (#3863) @dennisreimann
* Move `View` action to the `Name` column in Payouts &amp; Payment Requests (#3873) @dstrukt @dennisreimann
* UI: Properly report Shopify errors when testing new settings (#3853) @NicolasDorier
* Mobile header improvements (#3826) @dennisreimann
* Notification modal improvements (#3784) @dstrukt
* Improve payouts UI (#3792) @dstrukt @dennisreimann
* Update language to explicitly request view-only wallet files (b1f62f74cde09d124fe308f5af9e255522add288) @sethforprivacy
* Open public app views in new tab/window (#3920) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.6.0</title>
    <updated>2022-07-08T14:37:14Z</updated>
    <dc:date>2022-07-08T14:37:14Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.9.4</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.9.4"/>
    <summary>This is a follow-up release that adds the latest Tor version (v0.4.7.8) to improve Tor connectivity.

See https://github.com/bisq-network/bisq/milestone/74?closed=1 for more details.

Here are the release notes from v1.9.3:

## Release notes
This release improves XMR trade security by using subaddresses, improves Tor connectivity, and ships bug fixes and minor improvements across the board.

### Improvements
- [Create new XMR subaddress for each trade](https://github.com/bisq-network/bisq/pull/6236)
- [Improve XMR proof service](https://github.com/bisq-network/bisq/pull/6217)
- [Reset Tor directory when a new release is downloaded](https://github.com/bisq-network/bisq/pull/6275)
- [Adopt economyFee recommendation from Mempool rate provider](https://github.com/bisq-network/bisq/pull/6239)
- [Add chart series for total trade fees](https://github.com/bisq-network/bisq/pull/6204)
- [Show changes in BSQ Supply over time](https://github.com/bisq-network/bisq/pull/6106)
- [Prevent account creation for banned Revolut GBP sort code 040075](https://github.com/bisq-network/bisq/pull/6235)
- [Improve wording &amp; appearance of trade shutdown dialog](https://github.com/bisq-network/bisq/pull/6213)
- [Prevent shutdown if trade is in process of being taken](https://github.com/bisq-network/bisq/pull/6211)
- [Mark user's own offers in Market -&gt; Offer book](https://github.com/bisq-network/bisq/pull/6188)
- [Attempt self-ping 3 times before reporting error with connectivity](https://github.com/bisq-network/bisq/pull/6206)

### Bug fixes
- [NPE when duplicate offer with deleted account](https://github.com/bisq-network/bisq/pull/6233)
- [Include payment screen ref text message &amp; fix sizing issues](https://github.com/bisq-network/bisq/pull/6241)
- [Signed account must show signed age](https://github.com/bisq-network/bisq/pull/6197)
- [Australia PayID was not displaying payment info on buyer trade](https://github.com/bisq-network/bisq/pull/6234)
- [Refactor BSQ fee validation to handle multiple tx inputs](https://github.com/bisq-network/bisq/pull/6200)
- [Fix refresh issue with x-axis tick labels (Market/Trade charts)](https://github.com/bisq-network/bisq/pull/6201)
- [Transactions view: fix NPE in column sorting when Memo is empty](https://github.com/bisq-network/bisq/pull/6192)
- [Update matching account toggle state when tab is selected](https://github.com/bisq-network/bisq/pull/6209)

### Development &amp; Documentation
- [Seednode: Install tor from tor repository and add external tor as default](https://github.com/bisq-network/bisq/pull/6254)
- [Seednode: Update Java version for install script](https://github.com/bisq-network/bisq/pull/6237)
- [Seednode: Clean up tor files at seed node startup](https://github.com/bisq-network/bisq/pull/6231)
- [Pricenode: Add JVM flag ExitOnOutOfMemoryError](https://github.com/bisq-network/bisq/pull/6230)
- [Pricenode: Upgrade to XChange 5.0.13](https://github.com/bisq-network/bisq/pull/6229)
- [Pricenode: configurable exclusion by provider currency](https://github.com/bisq-network/bisq/pull/6227)
- [API: Block API attempt to swap BSQ with insufficient funds](https://github.com/bisq-network/bisq/pull/6253)
- [API: Add API method `getavgbsqprice`](https://github.com/bisq-network/bisq/pull/6250)
- [API: Add API method `getnetwork`](https://github.com/bisq-network/bisq/pull/6249)
- [API: Make API getoffers (altcoin) offer list order match UI](https://github.com/bisq-network/bisq/pull/6248)
- [API: Conditionally block API's send payment sent/rcvd msgs](https://github.com/bisq-network/bisq/pull/6247)
- [API: Remove legacy bitcoind txindex param from apitest harness](https://github.com/bisq-network/bisq/pull/6214)
- [API: Block API takeoffer attempt if !sufficient btc in wallet](https://github.com/bisq-network/bisq/pull/6221)
- [API: Fix API CLI gettrades bug: category param can be uppercase](https://github.com/bisq-network/bisq/pull/6207)
- [API: Fix API editoffer bug: set fixed-price=0 on margin offers](https://github.com/bisq-network/bisq/pull/6202)
- [Bisq 2: Use bisq2 rest infrastructure for daonode](https://github.com/bisq-network/bisq/pull/6228)
- [Bisq 2: Tiny daonode rest service with 1 endpoint](https://github.com/bisq-network/bisq/pull/6190)
- [Bump actions/setup-java from 3.2.0 to 3.3.0](https://github.com/bisq-network/bisq/pull/6195)
- [Bump actions/setup-java from 3.1.1 to 3.2.0](https://github.com/bisq-network/bisq/pull/6185)

### New Assets
No new assets added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.9.4.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.9.4-all.jar
The output need to match the value from the Bisq-1.9.4.jar.txt file.

There are three hashes within the Bisq-1.9.4.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.6 and the v1.9.4 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## API
[API]: #api-documentation
Starting with v1.9.0 you can use pre-built versions of the Bisq cli (bisq-cli-v1.9.4.zip) and Bisq daemon (bisq-daemon-v1.9.4.zip) to use Bisq without touching the user interface.

Just download the archives and extract them locally. You have to run the daemon to access the local Bisq daemon API endpoints.

To run daemon.jar on Mainnet:
```bash
$ java -jar daemon.jar --apiPassword=becareful
```

If you just want to control your headless daemon within your terminal you have to run the Bisq cli as well.

Again just download the bisq-cli archive and extract it locally.

To call getversion from cli.jar
```bash
$ java -jar cli.jar --password=becareful getversion
```

You can use the Bisq API to access local Bisq daemon API endpoints, which provide a subset of the Bisq Desktop application's feature set: check balances, transfer BTC and BSQ, create payment accounts, view offers, create and take offers, and execute trades.

The Bisq API is based on the gRPC framework, and any supported gRPC language binding can be used to call Bisq API endpoints.

You'll find in-depth documentation and examples under following link: https://bisq-network.github.io/slate/#introduction

Bisq gRPC API reference documentation example source code is hosted on GitHub at https://github.com/bisq-network/bisq-api-reference. Java and Python developers interested in bot development may find this Intellij project useful for running the existing examples, and writing their own bots.

For additional developer support please join [Development - Bisq v1](https://matrix.to/#/%23bisq.dev:bitcoin.kyoto) on Matrix.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.9.4.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @alkum 
- @chimp1984 
- @Emzy 
- @ghubstan  
- @jmacxx 
- @ripcurlx 
- @xyzmaker123 

A special thanks to our first time contributors:
  - @alkum: [Pricenode: Add JVM flag ExitOnOutOfMemoryError](https://github.com/bisq-network/bisq/pull/6230)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.9.4</title>
    <updated>2022-07-05T09:57:40Z</updated>
    <dc:date>2022-07-05T09:57:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.1</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.1"/>
    <summary># Summary

_PRIVACY IS YOUR ABILITY TO SELECTIVELY REVEAL YOURSELF TO THE WORLD_

The most important change is the Tor update. There is an ongoing attack against the Tor network causing delays. Under the hood Wasabi is using Tor to anonymize network traffic, so this has an effect on us as well. The updated Tor client mitigates the problem, see Tor changelog below 👇:

- This version fixes several bugfixes including a High severity security issue
  categorized as a Denial of Service. Everyone running an earlier version
  should upgrade to this version.

- Major bugfixes (congestion control, TROVE-2022-001):
    - Fix a scenario where RTT estimation can become wedged, seriously
      degrading congestion control performance on all circuits. This
      impacts clients, onion services, and relays, and can be triggered
      remotely by a malicious endpoint. Tracked as CVE-2022-33903. Fixes
      bug 40626; bugfix on 0.4.7.5-alpha.

**It is recommended to update Wasabi to this version. Please read the What's Changed section for details.** 

⚠️ Wasabi will update Tor automatically, but you have to make sure Tor is not running when you start Wasabi. The simplest solution is to restart the computer and start this version of Wasabi. 

We live in an Orwellian surveillance society where your information is being used to typecast and manipulate you. Bitcoin projects are being pressured to collect more and more data, if possible.
This is why Wasabi Wallet is programmed to be a zero-knowledge software. Developers do not and never will collect any information about you. What you do with your bitcoin is your business.

- **OPEN SOURCE**: Wasabi Wallet is a [free, open-source](https://github.com/zkSNACKs/WalletWasabi) and [deterministically reproducible](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md) software. Anyone can see, verify and even contribute to the code.

- **TRUSTLESS BY DESIGN**: The software is designed so that neither the public nor the developers can breach your privacy. This is done through [coinjoins](https://github.com/zkSNACKs/WabiSabi/), [client-side block filtering](https://nopara73.medium.com/bitcoin-core-vs-wasabi-wallet-network-level-privacy-bdca1d501387) and communication over the [Tor anonymity network.](https://www.torproject.org/)

- **NON-CUSTODIAL**: Not your keys, not your coins. Wasabi Wallet lets you control your private keys, offering you true financial self sovereignty.

- **EASY TO USE**: Wasabi is designed to be a [user friendly](https://www.researchgate.net/publication/228348285_Anonymity_loves_company_Usability_and_the_network_effect) Bitcoin wallet, that handles its users' privacy automatically under the hood, including network connections, [input](https://en.bitcoin.it/wiki/Transaction#Input) selection and conjoining.

- **COMPREHENSIVE**: The wallet uses [WabiSabi](https://github.com/zkSNACKs/WabiSabi/), an anonymous credential scheme that was designed to enable more accessible and efficient coinjoins. It allows users to utilize the best privacy tool without requiring a large amount of bitcoin in the wallet.

- **AFFORDABLE**: Coinjoining coins with a value above 0.01 BTC costs 0.3% as a [coordinator](https://github.com/zkSNACKs/WalletWasabi/tree/master/WalletWasabi.Backend) fee + [mining fees](https://mempool.space/). Inputs of 0.01 BTC or below don't pay coordinator fees, nor remixes, even after one transaction. Thus, a payment made with coinjoined funds allows the sender and the recipient to remix their coins without paying any coordinator fees.

![webpage_ui_compilation-02](https://user-images.githubusercontent.com/9844978/173797616-a68ff625-a0f7-42ce-9b45-e0d8075c4e52.png)

# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [How To Use](https://youtu.be/bQKU2khua-8) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET 6.0.300.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.15.

## What's Changed
* [VDG] Fix bad StatusIcon icon by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8558
* [VDG] shorten musicbox message by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/8548
* [VDG] Send - Add missing log by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8546
* [VDG] Fix bad flyout behavior after theme switch by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8343
* [VDG] Remove hyperlink from add HW wallet by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8320
* [VDG] Enable Go Back in Welcome Screen by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8560
* [VDG] Display error in compact dialog if it happened there by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8561
* [VDG] add confirmation numbers by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8564
* Bump version on the website by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8559
* Allow override of backend url by @Kukks in https://github.com/zkSNACKs/WalletWasabi/pull/8414
* [VDG] Sort coins in Coin List by amount by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8568
* Preparation for anonymity calculation improvement by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8178
* [VDG] Bitcoin Network Badge by @jmacato in https://github.com/zkSNACKs/WalletWasabi/pull/8526
* Clarify a sentence in website text. by @BTCparadigm in https://github.com/zkSNACKs/WalletWasabi/pull/8593
* Remove leftover by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8591
* [VDG] limit btc value decimals by @soosr in https://github.com/zkSNACKs/WalletWasabi/pull/8574
* Remove dead code by @yahiheb in https://github.com/zkSNACKs/WalletWasabi/pull/8530
* Tests: AliceTimeoutTests - minor improvements by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8601
* Filter out WW2.0.0 Clients in the First Round by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8600
* Measure arena period as well by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8592
* Only logtrace OperationCanceledException by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8611
* Elevate some log messages from Debug to Info by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8612
* Abort registrations on ended rounds by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8605
* Improve cancellation logic and logs by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8614
* Update NewtonSoft by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8599
* [VDG] Settings dialog by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/8606
* [VDG] Add implicit zero for decimal numbers by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8577
* [VDG] Fix resource icons by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8557
* [VDG] LabelsList scroll fix by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/8608
* [VDG] Add transaction counters in wallet stats by @ichthus1604 in https://github.com/zkSNACKs/WalletWasabi/pull/8609
* [VDG] Adjust network badge position on macOS by @wieslawsoltes in https://github.com/zkSNACKs/WalletWasabi/pull/8616
* Update Tor to `0.4.7.8` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8613
* Bias random coin selection towards larger amounts by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8595
* Avoid always punishing WW2 denom outputs by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8621
* Fix of CombinationsWithoutRepetition() by @onvej-sl in https://github.com/zkSNACKs/WalletWasabi/pull/8620
* Bump version to v2.0.1.1 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8623


**Full Changelog**: https://github.com/zkSNACKs/WalletWasabi/compare/v2.0.1.0...v2.0.1.1</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.1.1</title>
    <updated>2022-07-04T15:25:44Z</updated>
    <dc:date>2022-07-04T15:25:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.3.1</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.3.1"/>
    <summary>* FIX: Lightning Wallets would fail under Tor</summary>
    <title>BlueWallet/BlueWallet: v6.3.1</title>
    <updated>2022-07-03T21:20:44Z</updated>
    <dc:date>2022-07-03T21:20:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.109</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.109"/>
    <summary>## API Updates
 * `ChannelManager::update_channel_config` has been added to allow the fields
   in `ChannelConfig` to be changed in a given channel after open (#1527).
 * If we reconnect to a peer which proves we have a stale channel state, rather
   than force-closing we will instead panic to provide an opportunity to switch
   to the latest state and continue operating without channel loss (#1564).
 * A `NodeAlias` struct has been added which handles string sanitization for
   node aliases via the `Display` trait (#1544).
 * `ProbabilisticScoringParameters` now has a `banned_nodes` set which we will
    never route through during path finding (#1550).
 * `ProbabilisticScoringParameters` now offers an `anti_probing_penalty_msat`
   option to prefer channels which afford better privacy when routing (#1555).
 * `ProbabilisticScorer` now provides access to its estimated liquidity range
   for a given channel via `estimated_channel_liquidity_range` (#1549).
 * `ChannelManager::force_close_channel` has been renamed
   `force_close_broadcasting_latest_txn` and
   `force_close_without_broadcasting_txn` has been added (#1564).
 * Options which cannot be changed at runtime have been moved from
   `ChannelConfig` to `ChannelHandshakeConfig` (#1529).
 * `find_route` takes `&amp;NetworkGraph` instead of `ReadOnlyNetworkGraph (#1583).
 * `ChannelDetails` now contains a copy of the current `ChannelConfig` (#1527).
 * The `lightning-invoice` crate now optionally depends on `serde`, with
   `Invoice` implementing `serde::{Deserialize,Serialize}` if enabled (#1548).
 * Several fields in `UserConfig` have been renamed for clarity (#1540).

## Bug Fixes
 * `find_route` no longer selects routes with more than
   `PaymentParameters::max_mpp_path_count` paths, and
   `ChannelManager::send_payment` no longer refuses to send along routes with
   more than ten paths (#1526).
 * Fixed two cases where HTLCs pending at the time a counterparty broadcasts a
   revoked commitment transaction are considered resolved prior to their actual
   resolution on-chain, possibly passing the update to another channel (#1486).
 * HTLCs which are relayed through LDK may now have a total expiry time two
   weeks in the future, up from one, reducing forwarding failures (#1532).

## Serialization Compatibility
 * All new fields are ignored by prior versions of LDK. All new fields are not
   present when reading objects serialized by prior versions of LDK.
 * `ChannelConfig`'s serialization format has changed and is not compatible
   with any previous version of LDK. Attempts to read values written by a
   previous version of LDK will fail and attempts to read newly written objects
   using a previous version of LDK will fail. It is not expected that users are
   serializing `ChannelConfig` using the LDK serialization API, however, if a
   backward compatibility wrapper is required, please open an issue.

## Security
0.0.109 fixes a denial-of-service vulnerability which is reachable from
untrusted input in some application deployments.

 * Third parties which are allowed to open channels with an LDK-based node may
   fund a channel with a bogus and maliciously-crafted transaction which, when
   spent, can cause a panic in the channel's corresponding `ChannelMonitor`.
   Such a channel is never usable as it cannot be funded with a funding
   transaction which matches the required output script, allowing the
   `ChannelMonitor` for such channels to be safely purged as a workaround on
   previous versions of LDK. Thanks to Eugene Siegel for reporting this issue.

In total, this release features 32 files changed, 1948 insertions, 532
deletions in 33 commits from 9 authors, in alphabetical order:
 * Antoine Riard
 * Daniel Granhão
 * Elias Rohrer
 * Jeffrey Czyz
 * Matt Corallo
 * Matt Faltyn
 * NicolaLS
 * Valentine Wallace
 * Wilmer Paulino</summary>
    <title>lightningdevkit/rust-lightning: v0.0.109</title>
    <updated>2022-07-01T17:40:13Z</updated>
    <dc:date>2022-07-01T17:40:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.3.0</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.3.0"/>
    <summary>**Highlights:**

- Passphrase support on Multisig
- Import BIP39 multi language 
- LNurl-Auth (Login with Lightning)

**Changelog:**

* ADD: Multisig seed with passphrase export/import 
* ADD: import bip39 multilang mnemonics 
* ADD: Copy and View Wallet options 
* ADD: Nepali lang. Sync sk_sk, he 
* ADD: ask passphrase during multisig cosigners edit 
* ADD: ask passphrase during multisig cosigners edit, change replace cosigners functions 
* ADD: Close button for Select Wallet 
* ADD lnurl-auth support (@gocedoko) 
* FIX: better support parsing taproot addresses from Electrum (rel #4749) 
* FIX: broken kebab-horizontal icon 
* FIX: cant open block explorer in browser (closes #4244) 
* FIX: typo that might cause incorrect 'openSignedTransaction' procedure 
* FIX: LnURL pay animation 
* FIX: lnurl-withdrawal bug when it says 'Maximum amount is X  sats' 
* FIX: Save button matches other screens 
* FIX: electrs-esplora 'verbose transactions are currently unsupported' (closes #3985) 
* FIX: 'min relay fee not met' - better estimation of tx size for feerate calculation when creating a tx (closes #4352) 
* FIX: allow user to choose wallet type when importing empty WIF 
* FIX: Animations woulndt autoPlay 
* FIX: min/max in lndCreateInvoice 
* FIX: If you create a lightning wallet and have a bad URL (enter &quot;x&quot;) the app crashes. #4449 
* FIX: cosigner deletion should delete its passphrase</summary>
    <title>BlueWallet/BlueWallet: v6.3.0</title>
    <updated>2022-06-29T14:27:09Z</updated>
    <dc:date>2022-06-29T14:27:09Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.0</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.1.0"/>
    <summary># Summary

_PRIVACY IS YOUR ABILITY TO SELECTIVELY REVEAL YOURSELF TO THE WORLD_

This is the first release after 2.0 version. Many improvements were made to make the software more robust and tolerant against network failures for example the ongoing distributed denial of service attack (DDoS) on the Tor network. It is recommended to update Wasabi to this version. Please read the What's Changed section for details. 

⚠️ Wasabi will update Tor automatically, but you have to make sure Tor is not running when you start Wasabi. The simplest solution is to restart the computer and start this version of Wasabi. 

We live in an Orwellian surveillance society where your information is being used to typecast and manipulate you. Bitcoin projects are being pressured to collect more and more data, if possible.
This is why Wasabi Wallet is programmed to be a zero-knowledge software. Developers do not and never will collect any information about you. What you do with your bitcoin is your business.

- **OPEN SOURCE**: Wasabi Wallet is a [free, open-source](https://github.com/zkSNACKs/WalletWasabi) and [deterministically reproducible](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md) software. Anyone can see, verify and even contribute to the code.

- **TRUSTLESS BY DESIGN**: The software is designed so that neither the public nor the developers can breach your privacy. This is done through [coinjoins](https://github.com/zkSNACKs/WabiSabi/), [client-side block filtering](https://nopara73.medium.com/bitcoin-core-vs-wasabi-wallet-network-level-privacy-bdca1d501387) and communication over the [Tor anonymity network.](https://www.torproject.org/)

- **NON-CUSTODIAL**: Not your keys, not your coins. Wasabi Wallet lets you control your private keys, offering you true financial self sovereignty.

- **EASY TO USE**: Wasabi is designed to be a [user friendly](https://www.researchgate.net/publication/228348285_Anonymity_loves_company_Usability_and_the_network_effect) Bitcoin wallet, that handles its users' privacy automatically under the hood, including network connections, [input](https://en.bitcoin.it/wiki/Transaction#Input) selection and conjoining.

- **COMPREHENSIVE**: The wallet uses [WabiSabi](https://github.com/zkSNACKs/WabiSabi/), an anonymous credential scheme that was designed to enable more accessible and efficient coinjoins. It allows users to utilize the best privacy tool without requiring a large amount of bitcoin in the wallet.

- **AFFORDABLE**: Coinjoining coins with a value above 0.01 BTC costs 0.3% as a [coordinator](https://github.com/zkSNACKs/WalletWasabi/tree/master/WalletWasabi.Backend) fee + [mining fees](https://mempool.space/). Inputs of 0.01 BTC or below don't pay coordinator fees, nor remixes, even after one transaction. Thus, a payment made with coinjoined funds allows the sender and the recipient to remix their coins without paying any coordinator fees.

![webpage_ui_compilation-02](https://user-images.githubusercontent.com/9844978/173797616-a68ff625-a0f7-42ce-9b45-e0d8075c4e52.png)

# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [How To Use](https://youtu.be/bQKU2khua-8) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET 6.0.300.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.15.

## What's Changed

* 2.0 website by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/8373
* Improve backend log a bit by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8389
* Optimize MaxSuggestedAmount variation by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8390
* Add Human readable round information API by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8391
* Fix LegalDocs link in website by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8392
* Keep largest MaxSuggestedAmount until successful input reg by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8393
* Add log for possible blame failure catch by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8397
* Remove nonimportant tohashsets those might ruin things by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8401
* Log witness count by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8402
* Add more log by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8403
* Add more logs by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8404
* Remove unnecessary log by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8407
* Add wabisabi request statista by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8410
* Increase statista time to 60 minutes by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8411
* [Fix] Registration halt by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8417
* If someone didnt confirm fail and blame by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8418
* Add back output reg step for blame rounds by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8432
* Add buffer times by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8433
* Reduce buffer of signing to zero by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8441
* Send NotAllAlicesSign so people get into blame round by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8442
* Revert blame round creation by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8443
* Fix order by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8444
* Add buffer for output reg by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8445
* Timeout fast when previous phase failed by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8464
* Revert buffer time by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8465
* Fix unit test by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8466
* Never release during a Tor network disruption by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8431
* TorHttpPool: Split lock to allow concurrent Tor circuits creation [dev 2.0.1] by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8469
* Decrease input reg available time, so the clients hurry up. by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8472
* Chaos monkey by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8468
* Add phase to human monitor and order results by importance by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8485
* Log phase duration in case of late requests, so we can analyze it by @adamPetho in https://github.com/zkSNACKs/WalletWasabi/pull/8471
* Implement parallel rounds by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8486
* Implement WW2.0.0 Compatible CJ Load Balancer by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8495
* Improve DDoS Protection by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8499
* `TorMonitor`: Verify using software-versions API [dev 2.0.1] by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8481
* Update Tor to 0.4.7.7 [dev 2.0.1] by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8475
* Abort pending requests when we are late by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8489
* Continue retrying requests until the phase finishes by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8504
* Upgrade xUnit to get NRT support by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8507
* Load Balancing by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8506
* `.editorconfig`: Insert final newline to all files by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8509
* Do not unregister wrong phase by @lontivero in https://github.com/zkSNACKs/WalletWasabi/pull/8493
* Try fix tokens around registration by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8512
* Add missing EndRoundState msgs by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8510
* [trivial] Fix analyzer error. by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8474
* [VDG] Add Tor Status Checker by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8476
* Clarify wording + Increase Time by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8524
* Drop exit node after 2h instead of 1d by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8525
* Antifragility Pack WW2.0.1 by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8497
* Cancel when not conn conf by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8520
* Make WW2.0.0 client most preferred round to be the last by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8521
* Avoid exit nodes by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8533
* trivial - typo fix by @MarnixCroes in https://github.com/zkSNACKs/WalletWasabi/pull/8532
* Fix for Tor Checker preventing application from closing normally by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8534
* [VDG] Make TorIssuesControl have a proper size in StatusIcon by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8539
* `IHttpClient`: Add missing `OperationCanceledException` by @kiminuo in https://github.com/zkSNACKs/WalletWasabi/pull/8545
* Use PeriodicRunner for Tor Status Checker by @SuperJMN in https://github.com/zkSNACKs/WalletWasabi/pull/8536
* Revert fallback removal by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8551
* Keep retrying for any transport exception by @nopara73 in https://github.com/zkSNACKs/WalletWasabi/pull/8542
* Firefox blur effect fixes by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/8552
* 2.0.1 download links by @CAnorbo in https://github.com/zkSNACKs/WalletWasabi/pull/8554
* Update version to 2.0.1 by @molnard in https://github.com/zkSNACKs/WalletWasabi/pull/8555

## New Contributors
* @CAnorbo made their first contribution in https://github.com/zkSNACKs/WalletWasabi/pull/8373

**Full Changelog**: https://github.com/zkSNACKs/WalletWasabi/compare/v2.0.0.0...v2.0.1.0</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.1.0</title>
    <updated>2022-06-27T15:28:59Z</updated>
    <dc:date>2022-06-27T15:28:59Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v0.11.2</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v0.11.2"/>
    <summary>This is a minor release, highly recommended, which fixes several problems with the v0.11 (and v0.11.1) releases:

* Unwanted unilateral closes with LND.  v0.11 removed logic to downgrade errors, and this reintroduces it when LND sends &quot;internal error&quot; as the reason for an error (which it seems to do often, but recovers).
* Two more occasional crashes fixed with reconnection logic.
* connectd large memory usage and large CPU usage reduced significantly.
* &quot;Could not load channels from the database&quot; failure on startup fixed, when we had old TORv2 addresses in the database.
* Two fixes to pay/routefinding code, for better payment success.

Thanks to all the people who reported bugs!
Rusty.</summary>
    <title>ElementsProject/lightning: v0.11.2</title>
    <updated>2022-06-27T02:58:18Z</updated>
    <dc:date>2022-06-27T02:58:18Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.15.0-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.0-beta"/>
    <summary># Database Migrations

There is one database migration for this version in lnd: two new accounting related fields are added to the open channel information. This migration enables a 95% reduction in the disk space consumed by new channel updates. See the [release notes](https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.15.0.md) for more information.

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.15.0-beta.sig` and `manifest-v0.15.0-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.15.0-beta.sig manifest-v0.15.0-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Thu Jun 23 14:50:22 2022 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.15.0-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.15.0-beta.sig.ots -f manifest-roasbeef-v0.15.0-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.18.2`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `neutrinorpc`, `routerrpc`, `watchtowerrpc`, `monitoring`, `peersrpc`, `kvdb_postrgres`, and `kvdb_etcd`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.15.0-beta
gpg: Signature made Thu 23 Jun 2022 05:39:31 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.15.0-beta /verify-install.sh v0.15.0-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.15.0-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.15.0-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.15.0-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.15.0-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

Read the full release notes here: https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.15.0.md

# Contributors (Alphabetical Order)

* 3nprob
* Alyssa Hertig
* Andras Banki-Horvath
* Andreas Schjønhaug
* antonilol
* asvdf
* BhaagBoseDK
* bitromortac
* Bjarne Magnussen
* blakejakopovic
* BTCparadigm
* bufo24
* Carl Dong
* Carla Kirk-Cohen
* Carsten Otto
* Dan Bolser
* Daniel McNally
* Dimitris Apostolou
* Elle Mouton
* ErikEk
* Eugene Siegel
* Evan Kaloudis
* gabbyprecious
* Hampus Sjöberg
* henta
* hieblmi
* hitanshu-mehta
* jblachly
* Joost Jager
* Jordi Montes
* LightningHelper
* Liviu
* madskrogh
* mateuszmp
* Matt Bajorek
* Naveen Srinivasan
* Neil-LL
* Olaoluwa Osuntokun
* Oliver Gugger
* Peter Todd
* Priyansh
* randymcmillan
* Rong Ou
* sputn1ck
* Thebora Kompanioni
* thinkmassive
* Tommy Volk
* Torkel Rogstad
* Vsevolod Kaganovych
* Yong Yu
* Zdeněk Brabec</summary>
    <title>lightningnetwork/lnd: v0.15.0-beta</title>
    <updated>2022-06-23T22:19:35Z</updated>
    <dc:date>2022-06-23T22:19:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.3</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.3"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/Specter-Setup-v1.10.3.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/Specter-v1.10.3.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/specter_desktop-v1.10.3-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/specterd-v1.10.3-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/specterd-v1.10.3-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/specterd-v1.10.3-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.3/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Bugfix: Display address on device #1774 (Manolis Mandrapilias)
- Bugfix: Longer Timeout for run_the_numbers #1769 (k9ert)
- Bugfix: Rescan won't work for fullnodes without explorer #1771 (k9ert)
- Bugfix: Send max with multiple recipients #1744 (Harshit)
- Bugfix: Start_specter ran twice in sub_open #1768 (k9ert)
- Bugfix: Visual artifact in the electron settings dialog #1754 (djpnewton)
- Chore: Making text-explainer a webcomponent #1752 (Shlok Pandey)
- Chore: Refactor_wallet_manager #1667 (k9ert)
- Docs: Corrected links in development.md #1742 (Ankur)
- Feature: combined test script for cypress and pytest #1749 (relativisticelectron)
- Feature: Drag and drop for PSBT import #1758 (Shlok Pandey)
- UIUX: Fixed html character codes for multisig guide &amp; polishment of about page #1743 (Manolis Mandrapilias)
</summary>
    <title>cryptoadvance/specter-desktop: v1.10.3</title>
    <updated>2022-06-23T08:10:52Z</updated>
    <dc:date>2022-06-23T08:10:52Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.9.2</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.9.2"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

This is a hotfix release that adds the latest Tor version (v0.4.7.7) on top of v1.9.1 to improve connectivity caused by an ongoing DDoS attack on the Tor network.

For more details please see https://github.com/bisq-network/bisq/milestone/72.

Here are the release notes from v1.9.1:

## Release notes
If you ever wanted to integrate Bisq into your project and/or to automate your most common use cases, now is the time to do it! This release ships an official API: a daemon (GRPC API endpoints) and a CLI. Please see the API section below for more details.

Aside from an API, we have simplified Bisq's navigation to make it easier to find what you are looking for:
* If you want to buy Bitcoin with EUR, just go to Buy &gt; Bitcoin and select your preferred payment method
* If you want to buy BSQ, just go to Buy &gt; BSQ

This approach gets rid of several intervening and (sometimes unintuitive) steps, so we hope it makes Bisq less mind-bending for new users.

And of course there are lots of bug fixes and improvements across the board.

### Improvements
- [Improve navigation structure](https://github.com/bisq-network/bisq/pull/6135)
- [Check failed trades for sensitive data purge](https://github.com/bisq-network/bisq/pull/6132)
- [Clarify that CBM / F2F not be used to advertise websites or contact info](https://github.com/bisq-network/bisq/pull/6140)
- [Clarify DAO status shown when in sync &amp; peers have conflicts](https://github.com/bisq-network/bisq/pull/6130)
- [Editable account names](https://github.com/bisq-network/bisq/pull/6014)
- [IBAN validation for SEPA account](https://github.com/bisq-network/bisq/pull/6107)
- [Separate transaction details in funds views](https://github.com/bisq-network/bisq/pull/6110)
- [Dispute subsystem enhancements](https://github.com/bisq-network/bisq/pull/6099)
- [Add inbound Tor connectivity test](https://github.com/bisq-network/bisq/pull/6147)
- [Support Bitcoin Core v22 RPC for JSON export](https://github.com/bisq-network/bisq/pull/6123)
- [Add popup reminder to inform users of trading rules](https://github.com/bisq-network/bisq/pull/6164)

### Bug fixes
- [Prevent multiple payout screens when agent repeat clicks on close ticket](https://github.com/bisq-network/bisq/pull/6136)
- [Prevent UI freeze in BSQ dashboard view](https://github.com/bisq-network/bisq/pull/6131)
- [Show correct buy BSQ state on activation for take offer](https://github.com/bisq-network/bisq/pull/6121)
- [Update trigger price validation](https://github.com/bisq-network/bisq/pull/6109)
- [Update currency related fields after switch of payment account](https://github.com/bisq-network/bisq/pull/6097)
- [Trigger price truncation of prompt text](https://github.com/bisq-network/bisq/pull/6111)
- [Fix corrupted MaxTradePeriod when offer payment method changed](https://github.com/bisq-network/bisq/pull/6176)
- [Fix the avatar trade count tag to include BSQ Swap trades](https://github.com/bisq-network/bisq/pull/6134)
- [Fix localization issue when accessing directories and JAR resource paths](https://github.com/bisq-network/bisq/pull/6148)
- [Fix fee request throttling](https://github.com/bisq-network/bisq/pull/6133)
- [Fix update number of open offers on change](https://github.com/bisq-network/bisq/pull/6178)

### Development &amp; Documentation
- [Add logo to README](https://github.com/bisq-network/bisq/pull/6145)
- [Fix permissions for build.yml](https://github.com/bisq-network/bisq/pull/6083)
- [API: Create API cli and daemon releases as zip archives](https://github.com/bisq-network/bisq/pull/6122)
- [API: Send pretty payment details to API clients](https://github.com/bisq-network/bisq/pull/6103)
- [API: Exclude persistedAccountName from API payment acct json forms](https://github.com/bisq-network/bisq/pull/6098)
- [API: Bug-fix for incorrect BsqSwap's OfferInfo.isActivated value](https://github.com/bisq-network/bisq/pull/6094)
- [API: Send meaningful io.grpc.Status.Code to gRPC clients](https://github.com/bisq-network/bisq/pull/6088)
- [API: Move get (cryptocurrency) offer filter to daemon](https://github.com/bisq-network/bisq/pull/6086)
- [API: Fix 3 misleading .proto TradeInfo field names](https://github.com/bisq-network/bisq/pull/6081)
- [API: Convert grpc.proto field names to snake_case](https://github.com/bisq-network/bisq/pull/6080)
- [API: Remove GetTradeStatistics service from grpc.proto](https://github.com/bisq-network/bisq/pull/6079)
- [API: Continue documenting grpc.proto for API reference site](https://github.com/bisq-network/bisq/pull/6068)
- [API: Clarify meaning of API/Offer related % fields](https://github.com/bisq-network/bisq/pull/6065)
- [API: Change TradeInfo proto's tradePrice &amp; tradeVolume fields to string](https://github.com/bisq-network/bisq/pull/6062)
- [API: Change API OfferInfo volume/minVolume proto fields to string](https://github.com/bisq-network/bisq/pull/6060)
- [API: Change API grpc.proto triggerPrice field to string](https://github.com/bisq-network/bisq/pull/6057)
- [API: Change API's OfferInfo proto's price field to string](https://github.com/bisq-network/bisq/pull/6056)
- [API: Prepare API Offers .proto defs for significant changes](https://github.com/bisq-network/bisq/pull/6055)
- [API: Fix BSQ swap description of BTC price for 1 BSQ](https://github.com/bisq-network/bisq/pull/6074)
- [Bump actions/checkout from 3.0.0 to 3.0.1](https://github.com/bisq-network/bisq/pull/6152)
- [Bump actions/checkout from 2.4.0 to 3](https://github.com/bisq-network/bisq/pull/6093)
- [Bump actions/setup-java from 3.1.0 to 3.1.1](https://github.com/bisq-network/bisq/pull/6143)
- [Bump actions/setup-java from 2.5.0 to 3](https://github.com/bisq-network/bisq/pull/6082)


### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.9.2.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.9.2-all.jar
The output need to match the value from the Bisq-1.9.2.jar.txt file.

There are three hashes within the Bisq-1.9.2.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.6 and the v1.9.2 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## API
[API]: #api-documentation
Starting with v1.9.0 you can use pre-built versions of the Bisq cli (bisq-cli-v1.9.2.zip) and Bisq daemon (bisq-daemon-v1.9.2.zip) to use Bisq without touching the user interface.

Just download the archives and extract them locally. You have to run the daemon to access the local Bisq daemon API endpoints.

To run daemon.jar on Mainnet:
```bash
$ java -jar daemon.jar --apiPassword=becareful
```

If you just want to control your headless daemon within your terminal you have to run the Bisq cli as well.

Again just download the bisq-cli archive and extract it locally.

To call getversion from cli.jar
```bash
$ java -jar cli.jar --password=becareful getversion
```

You can use the Bisq API to access local Bisq daemon API endpoints, which provide a subset of the Bisq Desktop application's feature set: check balances, transfer BTC and BSQ, create payment accounts, view offers, create and take offers, and execute trades.

The Bisq API is based on the gRPC framework, and any supported gRPC language binding can be used to call Bisq API endpoints.

You'll find in-depth documentation and examples under following link: https://bisq-network.github.io/slate/#introduction

Bisq gRPC API reference documentation example source code is hosted on GitHub at https://github.com/bisq-network/bisq-api-reference. Java and Python developers interested in bot development may find this Intellij project useful for running the existing examples, and writing their own bots.

For additional developer support please join [Development - Bisq v1](https://matrix.to/#/%23bisq.dev:bitcoin.kyoto) on Matrix.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.9.2.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @Devils-Knight 
- @ghubstan
- @jmacxx 
- @MarnixCroes 
- @ripcurlx 
- @xyzmaker123 

A special thanks to our first time contributors:
  - @Devils-Knight : [Fix permissions for build.yml](https://github.com/bisq-network/bisq/pull/6083)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.9.2</title>
    <updated>2022-06-21T20:43:50Z</updated>
    <dc:date>2022-06-21T20:43:50Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.8</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.8"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.8</title>
    <updated>2022-06-21T10:01:29Z</updated>
    <dc:date>2022-06-21T10:01:29Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.2</id>
    <link href="https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.2"/>
    <summary># 1.9.2

This release is backwards compatible with the 1.9.2 release of bitcoin-s

See the individual module sections for more information on lower level updates to the codebase.

Want to get started quickly? See our `docker-compose.yml` file. [See instructions here](https://github.com/bitcoin-s/bitcoin-s/#docker)

If you are a typescript developer, [you can access the backend via our typescript library](https://github.com/bitcoin-s/bitcoin-s-ts)

## Running bitcoin-s

If you want to run the standalone server binary, after verifying gpg signatures, you
can `unzip bitcoin-s-server-1.9.2.zip` and then run it with `chmod +x ./bin/bitcoin-s-server &amp;&amp; ./bin/bitcoin-s-server` to start the node. You will need to
configure the node properly first, you can find example
configurations [here](https://bitcoin-s.org/docs/config/configuration#example-configuration-file).

You can then unzip the `bitcoin-s-cli-1.9.2.zip` folder and start using the `bitcoin-s-cli` like this:

```bashrc
./bin/bitcoin-s-cli --help
Usage: bitcoin-s-cli [options] [&lt;cmd&gt;]

  -n, --network &lt;value&gt;    Select the active network.
  --debug                  Print debugging information
  --rpcport &lt;value&gt;        The port to send our rpc request to on the server
  -h, --help               Display this help message and exit
```

For more information on what commands `bitcoin-s-cli` supports check the documentation, here is where to
start: https://bitcoin-s.org/docs/next/applications/server#server-endpoints

## Verifying signatures

This release is signed with [Chris's signing key](https://bitcoin-s.org/docs/next/security#disclosure) with
fingerprint `9234F4D6AF47C71B741A390F8976CA0AF71A7A2A`

To do the verification, first hash the executable using `sha256sum`. You should check that the result is listed in
the `SHA256SUMS.asc` file next to its file name. After doing that you can use `gpg --verify` to authenticate the
signature.

Example:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
gpg: Signature made Thu 16 Jun 2022 06:34:05 PM CDT
gpg:                using RSA key 9234F4D6AF47C71B741A390F8976CA0AF71A7A2A
gpg: Good signature from &quot;Chris Stewart &lt;stewart.chris1234@gmail.com&gt;&quot; [ultimate]

$ sha256sum -c SHA256SUMS.stripped                                                                                           
bitcoin-s_1.9.2-1_amd64.deb: OK
bitcoin-s-1.9.2.dmg: OK
bitcoin-s-cli-linux-1.9.2.zip: OK
bitcoin-s-cli-mac.os.x-1.9.2.zip: OK
bitcoin-s-cli-windows.server.2019-1.9.2.zip: OK
bitcoin-s-oracle-server-linux-1.9.2.zip: OK
bitcoin-s-oracle-server-mac.os.x-1.9.2.zip: OK
bitcoin-s-oracle-server-windows.server.2019-1.9.2.zip: OK
bitcoin-s-server-linux-1.9.2.zip: OK
bitcoin-s-server-mac.os.x-1.9.2.zip: OK
bitcoin-s-server-windows.server.2019-1.9.2.zip: OK
```

### Website

https://bitcoin-s.org/

### Releases

https://repo1.maven.org/maven2/org/bitcoin-s/

### Snapshot releases

https://oss.sonatype.org/content/repositories/snapshots/org/bitcoin-s/

# Executive Summary

## app commons

Adds the ability to stream logs from a process (such as tor) to our `bitcoin-s.log` file.

488716d10a Add ProcessLogger to ProcessBuilder so that we capture logs from binaries like tor (#4327)

## App server

Improves logging capability, we will now cap log files at 100MB and roll over to a new one.
The old file will be archived and compressed. The total archive size for log files is capped at 5GB.

This release also improves startup time of the backend by decoupling binding of the http server &amp; tor startup.\

Finally, in some cases on raspberry pi's bitcoind can drop blocks and need to re-sync.
This release implements logic to retry connecting to bitcoind with an exponential backoff.

1ad540703c Improve bitcoind connection retry logic (#4386)
8a01432db4 Try to debug why shutdown isn't working on windows (#4349)
d335cd1933 Enable LauncherJarPlugin on oracleServer/appServer (#4338)
5036b37729 2022 05 11 tor race condition (#4333)
d46b4a6c91 Make logging to file async, remove neverBlock configuration so that we are guaranteed to capture logs (#4305)
be34593e80 2022 04 29 issue 4302 (#4304)
f4d864fab8 2022 04 26 Startup time of `appServer` (#4294)
17944c4aad Update rolling policies for log files (#4291)
bac3cb4190 Fix rolling log file (#4288)
16c5d835de 2022 04 20 issue 4280 (#4282)
e3e59923c4 Parallelize some startup on startBitcoinSBackend() to increase performance (#4217)

## bitcoind rpc

## bundle

The bundle will be removed in future releases. 
We are implementing a new electron GUI, it can be found here: https://github.com/bitcoin-s/bitcoin-s-ts

## Build

The major improvement this release is integrating [jlink](https://docs.oracle.com/en/java/javase/11/tools/jlink.html)
`jlink` allows you to ship with a custom JRE in the application you ship so the user doesn't need to download Java.

There is some caveats to using `jlink` on arm64 machines, see #4383.

cbeae5cdbc Remove carve out for protoc on aarch64 now that the akka grpc plugin has been updated (#4384)
171001273c Implement a workaround for 4369 on docker images and m1 macs IF the user has another java installed on their machine (#4377)
0a0fc92f32 Switch base docker image to ubuntu to get docker working again (#4367)
e4d38ba53a 2022 05 05 OS specific jlink builds (#4322)
dd9a9dcea6 Remove explicit inclusion of jdk.unsupported as its not included by default (#4319)
087b9f90b5 2022 05 03 oracle server jlink build (#4316)
cbfe684352 Reduce what gets tested on tor CI (#4274)

## Core

Begins laying the ground work for Taproot by including the `XOnlyPubKey` data structure.

Adds various TLVs defined in BOLT14.

Finally fixes various bugs and improves ergonomics of the core library.

ddbdde495d 2022 06 13 taprootspk xonlypubkey (#4388)
7e2ecd9d6a Added data structure for x-only public keys with undetermined parity (#4387)
5f82307e27 Added Compute Contract Id test Vectors (#4385)
344a8fd759 Add TLVs defined in BOLT 4 (#4380)
b021649ac4 Refactor WitnessVersion.rebuild() to be Either[ScriptError,ScriptPubKey] to make the taproot implemtation easier (#4382)
ab215e26df Set recovery id properly for buildLnInvoiceSignature (#4379)
efc1f9fb77 Have Satoshis extend Numeric (#4364)
676c0b4261 Add isStandard to Address (#4353)
90970058f9 Improve TLV error message (#4283)

## Crypto

Rework how `HashType` is handled in the `ECDigitalSignature` API.
Previously it was extremely confusing whether an `ECDigitalSiganture` had a `HashType` or not.
Now you can call `ECDigitalSignature.hashTypeOpt` to determine if the signature has a `HashType`.

b80bf4649e Add HashType to ECDigitalSignature API (#4320)
f42d7ae8e7 Added validation to signature methods to avoid corruption edge cases (#4214)

## db commons

Allow other library users to access the internal flyway configuration.

441937238f Make flyway protected so other apps can access it (#4372)

## DLC node

272f31aeaa Fix race condition on DLC node startup wrt to tor (#4335)

## DLC wallet

This release of the DLC wallet introduces the concept of `Contacts`. 
These are people you are frequently doing DLCs so we should save their information to make it easier to enter
into a new DLC with that same contact.

This PR also adds a mapping between DLCs in the wallet and the contact you are doing the DLC with.
Now the contact information will be shown by the DLC so you can remember who you did the DLC with.

fdf281b469 DLC &lt;-&gt; contact mapping (#4346)
79b4f096ec Improve logging around signDLC (#4299)
525fb2ac0d Default createDLCOffer to current block height (#4285)
f5940c93d4 Contact list (#4234)
d29bad3437 Add better logs for a DLCWallet.cancelDLC() (#4278)

## gui

## keymanager

## Lnd rpc

Update lnd to 0.14.3, implement probing with lnd, and various bug fixes.

762202a54d Add test/example on how to use the channel acceptor (#4375)
c2d8735dd7 LND: Add configs for gossip in test env (#4378)
45777f2bb0 Fix outPointToChannelPoint to use correct endianness (#4376)
54c3f77f8e Improve lnd test suite reliability (#4361)
527e3ae862 Fix lnd sendToRoute for 0 amount invoices (#4348)
e9582d2145 Update lnd to v0.14.3-beta (#4347)
63e8d76dfc Add ability to get LndInstanceRemote from config (#4334)
6845caf778 Make all uint64 types from lnd a UInt64 (#4332)
18c5ded5d3 Check if lnd network config is equal to 1 (#4330)
8ff4ee13e5 Use route hints with probing (#4312)
16c13568a9 Lnd probing: only update route with mpp record if we can (#4293)
b8a984a986 Implement probing in lnd (#4202)
95bbb06789 Add lnd invoice client (#4289)
587bca87c4 Add router rpc to lnd, use for paying invoices (#4286)
5856745398 Add raw funding of psbt to LndRpc (#4235)

## Lnurl

Adds an initial implementation of the [LnURL specification](https://lnurl.com/). 

d60d984a6b LnURL Module (#4295)

## node

Removes old SPV code as that was not used and is being slowly deprecated on the bitcoin network.

d8fc8e588f Remove Spv code (#4356)
b980c432fd Bump node initialization timeout to 20 seconds (#4328)
ce00d3ac36 Segregate handling of Tcp.ErrorClosed command from the rest of Tcp.ConnectionClosed (#4307)

## Oracle Explorer Client

Adds tor endpoints for the Suredbits Oracle Explorer so you can send announcements/attestations directly to the hidden service.

c9502babba Tor endpoints for the oracle explorer client (#4314)

## wallet

This release fixes a bug where we could create a duplicate UTXO in the wallet.
If this bug is detected in the wallet, this will trigger a rescan on wallet startup to correct wallet state.

This also fixes a bug in our sql queries where we fetch too many outpoints at one time for a block.
This resulted in a SQL exception. Now we break the query up into smaller queries.

bf88d0d93f Remove exception when we have zero relevant outputs (#4352)
f680ab8691 Persist whether wallet is rescanning in the database (#4326)
059f2f5fac Fix `ERROR: relation &quot;txo_spending_info&quot; does not exist` (#4323)
341c712563 Validate bitcoin-s.wallet.walletName config option (#4336)
fac0713405 Reduce rescan threadpool size to just be number of available processors (#4306)
0c6c9180ed Handle duplicate UTXOs (#4296)
486fa36d2c Make _findOutputsBeingSpentQuery take at most 1,000 outpoints (#4300)
6db1f26625 2022 03 22 getrelevantoutputs upfront (#4219)
3831b35817 Prevent the wallet from creating duplicate UTXOs (#4290)

## testkit-core

## testkit

## tor

9d90b2279a Tor v0.4.6.10 (#4331)
6356a50a89 Add log for tor being provided (#4329)

## Website

4c74f54741 Made change to cli.md file, clarifed only need to do either (Building the command line interface) or (Native binaries) section (#4373)
1706ec8e84 Fix typo (#4365)
4fc3b05ed5 Upgrade website dependencies (#4363)
72fef5a27e initial draft of 1.9.2 release notes (#4362)
c911808996 Fix example (#4324)
67f8ac8294 Add cd bitcoin-s-server (#4298)
a739a2dd2b Bump README versions (#4284)
b0e849c233 Update pgp key as previous key expired (#4273)
8cda343fd3 Add version 1.9.1 to the website (#4269)

## Dependencies

2af7923f3b Downgrade slick to fix jlink build (#4345)
107f95cd5a Upgrade sttp to 3.6.1 (#4341)
63df47e002 Upgrade to slick to 3.4.0-M1 (#4342)
4b2ca33495 upgrade micropickle to 1.6.0 (#4340)
a3faa0c56f Upgrade plugin dependencies (#4318)
678dc6f676 Upgrade sbt native packager to 1.9.9 (#4317)
e05cf21827 Upgrade dropWizards to 4.2.9 (#4313)
2f4bbf7014 Upgrade flyway to 8.5.9 (#4311)
56138cea92 Remove source code dependency, its not used anywhere (#4310)
3dc709386a Upgrade Eclair to v0.7.0 (#4308)
7566a96b31 Update akka to 2.6.19 (#4287)
813b58e977 Update deps (#4279)
ca5bde46d4 Bump prismjs from 1.26.0 to 1.27.0 in /website (#4133)
47b65cae65 Bump async from 2.6.3 to 2.6.4 in /website (#4271)
</summary>
    <title>bitcoin-s/bitcoin-s: 1.9.2</title>
    <updated>2022-06-16T23:01:34Z</updated>
    <dc:date>2022-06-16T23:01:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.0.0</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v2.0.0.0"/>
    <summary># Summary

_PRIVACY IS YOUR ABILITY TO SELECTIVELY REVEAL YOURSELF TO THE WORLD_

We live in an Orwellian surveillance society where your information is being used to typecast and manipulate you. Bitcoin projects are being pressured to collect more and more data, if possible.
This is why Wasabi Wallet is programmed to be a zero-knowledge software. Developers do not and never will collect any information about you. What you do with your bitcoin is your business.

- **OPEN SOURCE**: Wasabi Wallet is a [free, open-source](https://github.com/zkSNACKs/WalletWasabi) and [deterministically reproducible](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md) software. Anyone can see, verify and even contribute to the code.

- **TRUSTLESS BY DESIGN**: The software is designed so that neither the public nor the developers can breach your privacy. This is done through [coinjoins](https://github.com/zkSNACKs/WabiSabi/), [client-side block filtering](https://nopara73.medium.com/bitcoin-core-vs-wasabi-wallet-network-level-privacy-bdca1d501387) and communication over the [Tor anonymity network.](https://www.torproject.org/)

- **NON-CUSTODIAL**: Not your keys, not your coins. Wasabi Wallet lets you control your private keys, offering you true financial self sovereignty.

- **EASY TO USE**: Wasabi is designed to be a [user friendly](https://www.researchgate.net/publication/228348285_Anonymity_loves_company_Usability_and_the_network_effect) Bitcoin wallet, that handles its users' privacy automatically under the hood, including network connections, [input](https://en.bitcoin.it/wiki/Transaction#Input) selection and conjoining.

- **COMPREHENSIVE**: The wallet uses [WabiSabi](https://github.com/zkSNACKs/WabiSabi/), an anonymous credential scheme that was designed to enable more accessible and efficient coinjoins. It allows users to utilize the best privacy tool without requiring a large amount of bitcoin in the wallet.

- **AFFORDABLE**: Coinjoining coins with a value above 0.01 BTC costs 0.3% as a [coordinator](https://github.com/zkSNACKs/WalletWasabi/tree/master/WalletWasabi.Backend) fee + [mining fees](https://mempool.space/). Inputs of 0.01 BTC or below don't pay coordinator fees, nor remixes, even after one transaction. Thus, a payment made with coinjoined funds allows the sender and the recipient to remix their coins without paying any coordinator fees.

![webpage_ui_compilation-02](https://user-images.githubusercontent.com/9844978/173797616-a68ff625-a0f7-42ce-9b45-e0d8075c4e52.png)


# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [How To Use](https://youtu.be/bQKU2khua-8) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET 6.0.300.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.15.

## Release Notes

- Brand new considerations to improve the user experience. Receive, wait, spend. Privately, by default. 
- Easy to install, easy to use. 
- New UI made with love using [Avalonia](https://github.com/AvaloniaUI) framework.
- A new coinjoin protocol called WabiSabi. See the research paper [here](https://github.com/zkSNACKs/WabiSabi). 
- Apple M1 native packages, as well as portable packages (zip files), are available.
- For a blog post about new features, click [here](https://blog.wasabiwallet.io/).  
- Max Privacy, @MaxHillebrand.

&lt;details&gt;
  &lt;summary&gt;Credits&lt;/summary&gt;
  @adamPetho @Szpoti @molnard @lontivero @kiminuo @nopara73 @nothingmuch @yahiheb @MarnixCroes @jmacato @danwalmsley @soosr @ichthus1604 @SuperJMN @wieslawsoltes @MaxHillebrand @BTCparadigm @CAnorbo @Belliusz @bharmat @hgergoil @Bodnaralexa @seresistvanandras @Trxlz @AvivMilner  and many others...
&lt;/details&gt;

</summary>
    <title>zkSNACKs/WalletWasabi: v2.0.0.0</title>
    <updated>2022-06-15T14:53:33Z</updated>
    <dc:date>2022-06-15T14:53:33Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.108</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.108"/>
    <summary>## Bug Fixes
 * Fixed `lightning-background-processor` build in release mode.

In total, this release features 9 files changed, 120 insertions, 74
deletions in 5 commits from 4 authors, in alphabetical order:
 * Elias Rohrer
 * Matt Corallo
 * Max Fang
 * Viktor Tigerström</summary>
    <title>lightningdevkit/rust-lightning: v0.0.108</title>
    <updated>2022-06-10T16:49:18Z</updated>
    <dc:date>2022-06-10T16:49:18Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.4.0</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.4.0"/>
    <summary>## The Mempool Open Source Project v2.4.0

&lt;img width=&quot;400&quot; src=&quot;https://user-images.githubusercontent.com/232186/172827460-0749f324-6f2d-4fa1-be0f-bd252d5962f8.png&quot;&gt;&lt;img width=&quot;400&quot; src=&quot;https://user-images.githubusercontent.com/232186/172827530-ea2899fc-7a1b-4337-b9e7-38caf204d7ee.png&quot;&gt;

&lt;img width=&quot;200&quot; src=&quot;https://user-images.githubusercontent.com/232186/172835000-807d1590-547a-4ea4-abc0-ba01d2964bf0.gif&quot;&gt;&lt;img width=&quot;200&quot; src=&quot;https://user-images.githubusercontent.com/232186/172830590-2b3e44dc-c66d-4310-ac89-b3fe73ed6975.png&quot;&gt;&lt;img width=&quot;200&quot; src=&quot;https://user-images.githubusercontent.com/232186/172830598-387d33a0-54e8-4050-a0a2-942ce072b69e.png&quot;&gt;&lt;img width=&quot;200&quot; src=&quot;https://user-images.githubusercontent.com/232186/172830576-8456996c-4cc0-486b-8a35-5ddf0f274793.png&quot;&gt;

This release introduces many cool new features:

* All-new mining dashboard with 7 new mining graphs
* Added &quot;bitfeed style&quot; mempool block visualization
* Improved blocks page that identifies mining pools
* Improved fee suggestions with a &quot;no priority&quot; rate
* And much more!

Out of the ~3400 commits in our git repo, ~1300 were made since v2.3.
Lots of work went into v2.4, and all users are encouraged to upgrade to enjoy this new functionality.

## Notes for upgrading from v2.3 if your timezone is NOT set to UTC

If you are upgrading from v2.3 or earlier and you want to migrate your historical mempool statistics database, you will need to do a special update procedure **if your server's timezone is NOT set to UTC**. How to migrate:

1) Backup your MySQL database.
2) Terminate the mempool backend process.
3) Run the following query to check your mysql connection timezone: `SELECT @@global.time_zone, @@session.time_zone;`
4) If you get SYSTEM, check your system timezone with the `date` command.
5) Perform the SQL query with your negative GMT offset: `UPDATE statistics SET added=DATE_ADD(added, INTERVAL -2 HOUR);` (For example, if your timezone is set to CEST (UTC+2), you need to shift all your statistics entries negative 2 hours.)
6) Proceed with upgrading mempool as usual.

## Changelog

* Insert zeroed statistics in the database if the mempool is empty by @nymkappa in https://github.com/mempool/mempool/pull/1151
* Only apply vbytes/sec cap on Bitcoin mainnet - Fix linter issues by @nymkappa in https://github.com/mempool/mempool/pull/1154
* Move difficulty adjustment code to separate module by @nymkappa in https://github.com/mempool/mempool/pull/1152
* dont use hardcoded genesis coinbase and block hash by @antonilol in https://github.com/mempool/mempool/pull/1158
* Display Liquid asset icons by @softsimon in https://github.com/mempool/mempool/pull/1167
* Liquid asset loading fixes by @softsimon in https://github.com/mempool/mempool/pull/1170
* Fix Liquid proxy settings by @knorrium in https://github.com/mempool/mempool/pull/1171
* Asset name overflow fix by @softsimon in https://github.com/mempool/mempool/pull/1172
* Update Liquid tests by @knorrium in https://github.com/mempool/mempool/pull/1176
* Update Cypress to v9.3.1 by @knorrium in https://github.com/mempool/mempool/pull/1175
* Update e2e tests: new scenarios for Liquid, Bisq and refactor button by @knorrium in https://github.com/mempool/mempool/pull/1178
* Fix broken link on the Bisq transaction page by @knorrium in https://github.com/mempool/mempool/pull/1177
* Cleanup master-page template by @nymkappa in https://github.com/mempool/mempool/pull/1183
* Wrap statistics db ops with try/catch by @nymkappa in https://github.com/mempool/mempool/pull/1182
* Mining dashboard (1/2) - Import mining pools into the database by @nymkappa in https://github.com/mempool/mempool/pull/1163
* Remove useless autocommit=0 in db migration script by @nymkappa in https://github.com/mempool/mempool/pull/1187
* Fixing Liquid asset precision by @softsimon in https://github.com/mempool/mempool/pull/1173
* Change Citadel link to core by @AaronDewes in https://github.com/mempool/mempool/pull/1194
* Mining dashboard (2/2) - Dashboard PoC by @nymkappa in https://github.com/mempool/mempool/pull/1162
* Increase nginx send_timeout and keepalive_requests by @wiz in https://github.com/mempool/mempool/pull/1193
* Enable nginx warm cache for mining pools API data by @wiz in https://github.com/mempool/mempool/pull/1198
* Let backend set its own HTTP cache time headers for APIs by @wiz in https://github.com/mempool/mempool/pull/1199
* Replaced /mining/pools?interval=X by /mining/pools/X by @nymkappa in https://github.com/mempool/mempool/pull/1208
* Set proper mining pool page title - Rename &quot;Name&quot; to &quot;Pool&quot; by @nymkappa in https://github.com/mempool/mempool/pull/1207
* outputs of genesis coinbase are always unspent by @antonilol in https://github.com/mempool/mempool/pull/1160
* Proxy all /api and /api/v1 requests to local nodejs server by @softsimon in https://github.com/mempool/mempool/pull/1215
* Wrap custom blocks fields into a sub object of IEsplora.Blocks by @nymkappa in https://github.com/mempool/mempool/pull/1212
* Adding a &quot;mixed&quot; dev proxy by @softsimon in https://github.com/mempool/mempool/pull/1219
* Local dev proxy working with all base modules by @softsimon in https://github.com/mempool/mempool/pull/1218
* Fetch conversion rates over Tor by @knorrium in https://github.com/mempool/mempool/pull/1213
* Run tests in Staging by @knorrium in https://github.com/mempool/mempool/pull/1228
* Featured assets and asset groups by @softsimon in https://github.com/mempool/mempool/pull/1224
* Add EXTERNAL_ASSETS defaults to the Docker start script README by @knorrium in https://github.com/mempool/mempool/pull/1225
* Disable featured assets test for testnet by @softsimon in https://github.com/mempool/mempool/pull/1230
* add log priority option for stdout log by @antonilol in https://github.com/mempool/mempool/pull/1180
* Cypress improvements by @knorrium in https://github.com/mempool/mempool/pull/1234
* sync-assets: Download pool logos from github by @nymkappa in https://github.com/mempool/mempool/pull/1233
* Remove debug return which break the UX the first time we open by @nymkappa in https://github.com/mempool/mempool/pull/1232
* Allow TV view time span switch through url fragment by @nymkappa in https://github.com/mempool/mempool/pull/1192
* Duplicated db blocks insertion attempts are expected by @nymkappa in https://github.com/mempool/mempool/pull/1220
* Consider we're synced with the mempool if we cached 99% by @nymkappa in https://github.com/mempool/mempool/pull/1240
* Refactor docs by @hunicus in https://github.com/mempool/mempool/pull/1239
* Added /api/v1/blocks-extras endpoint by @nymkappa in https://github.com/mempool/mempool/pull/1235
* implement /api/mempool for home users (romanz/electrs backend) by @antonilol in https://github.com/mempool/mempool/pull/1248
* Don't wait for 100% mempool sync before starting block indexing by @nymkappa in https://github.com/mempool/mempool/pull/1243
* Remove duplicated tests by @nymkappa in https://github.com/mempool/mempool/pull/1252
* Provide a way to completely disable block indexing and mining menu by @nymkappa in https://github.com/mempool/mempool/pull/1250
* Created mining pool stats page by @nymkappa in https://github.com/mempool/mempool/pull/1242
* Index more block data by @nymkappa in https://github.com/mempool/mempool/pull/1253
* Create difficulty chart component by @nymkappa in https://github.com/mempool/mempool/pull/1255
* Change pool ranking pie chart colors by @nymkappa in https://github.com/mempool/mempool/pull/1257
* Create mining dashboard page by @nymkappa in https://github.com/mempool/mempool/pull/1254
* When blocks need re-indexing, truncate the table by @nymkappa in https://github.com/mempool/mempool/pull/1258
* Update docker default min loglevel to info by @knorrium in https://github.com/mempool/mempool/pull/1261
* Show miner tag under blocks in the mining dashboard by @nymkappa in https://github.com/mempool/mempool/pull/1259
* Display top featured assets on Liquid dashboard by @softsimon in https://github.com/mempool/mempool/pull/1245
* detect lightning htlc and unilateral close + fix multisig badge by @antonilol in https://github.com/mempool/mempool/pull/1223
* Created hashrate chart component by @nymkappa in https://github.com/mempool/mempool/pull/1269
* Tweak new charts design by @nymkappa in https://github.com/mempool/mempool/pull/1272
* Show block reward in the mining dashboard by @nymkappa in https://github.com/mempool/mempool/pull/1274
* Display asset circulating amount more nicely fixing overflow by @softsimon in https://github.com/mempool/mempool/pull/1273
* Merge hashrate and difficulty components, cleanup mining design by @nymkappa in https://github.com/mempool/mempool/pull/1275
* Remove block subsidy from mempool blocks by @nymkappa in https://github.com/mempool/mempool/pull/1277
* Handle missing asset registry assets by @softsimon in https://github.com/mempool/mempool/pull/1278
* Add proxy support for Liquid Testnet by @softsimon in https://github.com/mempool/mempool/pull/1279
* Show tx value sum if complete unblinding data is provided by @softsimon in https://github.com/mempool/mempool/pull/1280
* Fixed incoming transactions bar on the status page by @softsimon in https://github.com/mempool/mempool/pull/1281
* Fix status page regex by @knorrium in https://github.com/mempool/mempool/pull/1282
* Update Cypress to v9.5.0 by @knorrium in https://github.com/mempool/mempool/pull/1283
* Upgrade frontend deps: Angular 13.2, echarts 5.3, fortawesome by @softsimon in https://github.com/mempool/mempool/pull/1284
* Create pools hashrate dominance chart by @nymkappa in https://github.com/mempool/mempool/pull/1285
* Merge pool share and dominance into one widget by @nymkappa in https://github.com/mempool/mempool/pull/1288
* Only reset hashrate state flag after database migration - Fix weekly … by @nymkappa in https://github.com/mempool/mempool/pull/1297
* Make sure to reset hashrates indexing flags upon error by @nymkappa in https://github.com/mempool/mempool/pull/1298
* Pause block indexing chunk upon error and retry later by @nymkappa in https://github.com/mempool/mempool/pull/1300
* Only return unique address prefix autocomplete by @softsimon in https://github.com/mempool/mempool/pull/1291
* Shorten address search with middle ellipsis by @softsimon in https://github.com/mempool/mempool/pull/1293
* fix 0 sat/vB not displaying by @antonilol in https://github.com/mempool/mempool/pull/1185
* Fix hashrate indexing backend logic by @nymkappa in https://github.com/mempool/mempool/pull/1302
* Mining dashboard polishing by @nymkappa in https://github.com/mempool/mempool/pull/1303
* UTXO spent tracking by @softsimon in https://github.com/mempool/mempool/pull/1305
* Handle missing asset registry for inputs by @softsimon in https://github.com/mempool/mempool/pull/1306
* Truncate hashrates table only for bitcoin (db migration v9) by @nymkappa in https://github.com/mempool/mempool/pull/1308
* Bugfix/auto refresh reward stats by @nymkappa in https://github.com/mempool/mempool/pull/1310
* UTXO spent tracking refactor by @softsimon in https://github.com/mempool/mempool/pull/1314
* Add skeleton in the mining dashboard page by @nymkappa in https://github.com/mempool/mempool/pull/1315
* Fix broken navigation when clicking on pie chart by @nymkappa in https://github.com/mempool/mempool/pull/1313
* Shorten reward stats by @nymkappa in https://github.com/mempool/mempool/pull/1312
* Replace difficulty adjustment timestamp with block height by @nymkappa in https://github.com/mempool/mempool/pull/1311
* Added new Zeus logo by @Bosch-0 in https://github.com/mempool/mempool/pull/1316
* Index blocks.blockTimestamp for faster hashrates indexing by @nymkappa in https://github.com/mempool/mempool/pull/1319
* Replace by fee storage by @softsimon in https://github.com/mempool/mempool/pull/1318
* Added pool hashrate chart by @nymkappa in https://github.com/mempool/mempool/pull/1317
* Fix skeleton for difficulty adjustment table by @nymkappa in https://github.com/mempool/mempool/pull/1324
* Show `+` sign on positive diff adjust by @nymkappa in https://github.com/mempool/mempool/pull/1325
* Display unknown for non standard output types by @softsimon in https://github.com/mempool/mempool/pull/1323
* Increment db version to 10 by @nymkappa in https://github.com/mempool/mempool/pull/1329
* improve testnet block time estimations by @antonilol in https://github.com/mempool/mempool/pull/1328
* Index weekly hashrates using last Monday midnight - Fix charts by @nymkappa in https://github.com/mempool/mempool/pull/1333
* Fix pool detail page on Firefox by @nymkappa in https://github.com/mempool/mempool/pull/1326
* Always show scrolbar to avoid horizontal jumpy UI by @nymkappa in https://github.com/mempool/mempool/pull/1327
* Show current indexing progress in charts without data by @nymkappa in https://github.com/mempool/mempool/pull/1331
* Index more data using getblockstats core RPC by @nymkappa in https://github.com/mempool/mempool/pull/1330
* regtest fixes by @antonilol in https://github.com/mempool/mempool/pull/1320
* Add new production installation script and related files by @wiz in https://github.com/mempool/mempool/pull/1321
* Revert &quot;Always show scrolbar to avoid horizontal jumpy UI&quot; by @softsimon in https://github.com/mempool/mempool/pull/1337
* Make blocks.fees larger data type by @nymkappa in https://github.com/mempool/mempool/pull/1338
* Add production frontend configurations by @wiz in https://github.com/mempool/mempool/pull/1344
* Install production backend/frontend configurations from master by @wiz in https://github.com/mempool/mempool/pull/1345
* Remove old install script, merge remaining stuff into upgrade script by @wiz in https://github.com/mempool/mempool/pull/1346
* Set git to always rebase from install script by @wiz in https://github.com/mempool/mempool/pull/1349
* Create symlinks for mempool scripts in installation script by @wiz in https://github.com/mempool/mempool/pull/1350
* Add mariadb-server and mysql db creation to install script by @wiz in https://github.com/mempool/mempool/pull/1347
* Fix database migration/typing issues by @nymkappa in https://github.com/mempool/mempool/pull/1340
* Fix empty diff adjust table by @nymkappa in https://github.com/mempool/mempool/pull/1336
* Create new /mining/blocks page by @nymkappa in https://github.com/mempool/mempool/pull/1335
* Fix font size in reward stat widget by @nymkappa in https://github.com/mempool/mempool/pull/1353
* Reorganizing community integrations by @softsimon in https://github.com/mempool/mempool/pull/1357
* Fix duplicate hashrate data points in &quot;difficulty vs hashrate&quot; chart by @nymkappa in https://github.com/mempool/mempool/pull/1351
* Add support for MySQL connections over UNIX sockets by @dsbaars in https://github.com/mempool/mempool/pull/1360
* Increase default INDEXING_BLOCKS_AMOUNT by 10x to 11000 blocks by @wiz in https://github.com/mempool/mempool/pull/1358
* Address page highlight and transfer value by @softsimon in https://github.com/mempool/mempool/pull/1304
* Fix docs navigation on desktop by @hunicus in https://github.com/mempool/mempool/pull/1342
* Difficulty adjustment refactor by @softsimon in https://github.com/mempool/mempool/pull/1352
* Move all charts into /graphs page by @nymkappa in https://github.com/mempool/mempool/pull/1309
* Updated websocket mock data with difficulty adjustment by @softsimon in https://github.com/mempool/mempool/pull/1364
* Remove duplicate websocket push. by @softsimon in https://github.com/mempool/mempool/pull/1363
* Make the hashrate/difficulty widget simpler by @nymkappa in https://github.com/mempool/mempool/pull/1362
* Capitalize js package labels in docs by @hunicus in https://github.com/mempool/mempool/pull/1361
* Fix typo in hashrate widget by @nymkappa in https://github.com/mempool/mempool/pull/1366
* Fix docs navigation on mobile by @hunicus in https://github.com/mempool/mempool/pull/1354
* Merge node-bitcoin into the project by @softsimon in https://github.com/mempool/mempool/pull/1370
* Address value did not calculate self transfers by @softsimon in https://github.com/mempool/mempool/pull/1371
* Optimize RPC calls by @nymkappa in https://github.com/mempool/mempool/pull/1374
* Index asciiScriptSig and display it in /mining/blocks by @nymkappa in https://github.com/mempool/mempool/pull/1375
* Hide tabs in /graphs page is mining not available by @nymkappa in https://github.com/mempool/mempool/pull/1379
* Force disable mining dashboard if base_module not mempool by @nymkappa in https://github.com/mempool/mempool/pull/1380
* Updated blocks list in pool details page by @nymkappa in https://github.com/mempool/mempool/pull/1381
* Apply coinbase style to blocks list tooltip by @nymkappa in https://github.com/mempool/mempool/pull/1382
* Fix pagination on /mining/blocks by @nymkappa in https://github.com/mempool/mempool/pull/1376
* Fix javascript crash when disable hashrate/difficulty chart line by @nymkappa in https://github.com/mempool/mempool/pull/1383
* fix and improve block time predictions by @antonilol in https://github.com/mempool/mempool/pull/1373
* Use our forked repo of mining pool data by @nymkappa in https://github.com/mempool/mempool/pull/1390
* Show pools in main dashboard in mining dashboard is enabled by @nymkappa in https://github.com/mempool/mempool/pull/1398
* Don't navigate to root when sub network url is wrong. by @softsimon in https://github.com/mempool/mempool/pull/1400
* Configure syslog for keybase alerts from install script by @wiz in https://github.com/mempool/mempool/pull/1410
* Set build script to notify new location based Keybase channels by @wiz in https://github.com/mempool/mempool/pull/1411
* Install mempool crontab from install script by @wiz in https://github.com/mempool/mempool/pull/1412
* Create zfs filesystem for /backup and chown to mempool by @wiz in https://github.com/mempool/mempool/pull/1413
* Subscribe to blocks and mempool updates in the mining dashboard by @softsimon in https://github.com/mempool/mempool/pull/1415
* Update Cypress to v9.5.2 by @knorrium in https://github.com/mempool/mempool/pull/1418
* Address highlighting tests by @knorrium in https://github.com/mempool/mempool/pull/1417
* Enable full block indexing on all Bitcoin networks by @wiz in https://github.com/mempool/mempool/pull/1416
* Fix path in mempool crontab for daily backup script by @wiz in https://github.com/mempool/mempool/pull/1419
* Add minfee node setup to production install script by @wiz in https://github.com/mempool/mempool/pull/1420
* Use 10 minutes avg block time for halving calculation by @nymkappa in https://github.com/mempool/mempool/pull/1422
* Disable cluster mode in prod bisq backend config by @wiz in https://github.com/mempool/mempool/pull/1425
* If we have incomplete data for the day/week, don't index hashrate by @nymkappa in https://github.com/mempool/mempool/pull/1423
* Don't show coinbase tooltip on mining dashboard by @nymkappa in https://github.com/mempool/mempool/pull/1431
* Format Transaction vBytes per second (vB/s) tooltip value by @nymkappa in https://github.com/mempool/mempool/pull/1429
* Improve skeleton on pool detail page by @nymkappa in https://github.com/mempool/mempool/pull/1430
* More dynamic mining reward  by @nymkappa in https://github.com/mempool/mempool/pull/1427
* Set weekly hashrates timestamp to midnight by @nymkappa in https://github.com/mempool/mempool/pull/1424
* Fix git commit error by @knorrium in https://github.com/mempool/mempool/pull/1434
* Last hashrate indexing check needs to be in milliseconds by @softsimon in https://github.com/mempool/mempool/pull/1435
* Truncate hashrates after #1435 - Fix hashrate indexing logs by @nymkappa in https://github.com/mempool/mempool/pull/1437
* Added slug into `pools` table by @nymkappa in https://github.com/mempool/mempool/pull/1446
* Fix rounding issue in reward stats by @nymkappa in https://github.com/mempool/mempool/pull/1445
* Fix blocks list mobile layout by @nymkappa in https://github.com/mempool/mempool/pull/1428
* Remove unnecessary echart init option by @nymkappa in https://github.com/mempool/mempool/pull/1449
* Use relative pipe for pie chart click event by @nymkappa in https://github.com/mempool/mempool/pull/1450
* If pool slug does not exist, generate one on the fly, avoid crash by @nymkappa in https://github.com/mempool/mempool/pull/1451
* Disable glitchy angular tooltips animation by @nymkappa in https://github.com/mempool/mempool/pull/1458
* Use mining pool slug in urls by @nymkappa in https://github.com/mempool/mempool/pull/1456
* Use slug instead of id in mining blocks list component by @nymkappa in https://github.com/mempool/mempool/pull/1467
* Fix query to insert unknown mining pool by @nymkappa in https://github.com/mempool/mempool/pull/1470
* Use mining pool slug in block component by @nymkappa in https://github.com/mempool/mempool/pull/1468
* Pool addresses collapse - Cleanup mobile layout by @nymkappa in https://github.com/mempool/mempool/pull/1457
* Add data zoom on pool hashrate chart by @nymkappa in https://github.com/mempool/mempool/pull/1472
* Use slugs in cache warmer by @nymkappa in https://github.com/mempool/mempool/pull/1474
* Show block reward on blockchain blocks for all Bitcoin networks by @nymkappa in https://github.com/mempool/mempool/pull/1484
* Fix spam call to `/api/v1/mining/pool/{slug}` by @nymkappa in https://github.com/mempool/mempool/pull/1489
* Update pool detail page label - Fix no data text by @nymkappa in https://github.com/mempool/mempool/pull/1485
* Add missing mining API endpoint to cache warmer by @nymkappa in https://github.com/mempool/mempool/pull/1483
* Enable nginx warm cache for all /api/v1/mining API endpoints by @wiz in https://github.com/mempool/mempool/pull/1475
* Don't use `slugs` if it's not available in pools.json frontend by @nymkappa in https://github.com/mempool/mempool/pull/1490
* Apply smooth scrolling to docs only by @hunicus in https://github.com/mempool/mempool/pull/1491
* Subscribe to websocket blocks update for all graphs components by @nymkappa in https://github.com/mempool/mempool/pull/1493
* Remove unused `/api/v1/mining/difficulty/{interval}` endpoint by @nymkappa in https://github.com/mempool/mempool/pull/1482
* Fix some mobile UI issues on mining dashboard by @nymkappa in https://github.com/mempool/mempool/pull/1401
* Detect more lightning scripts by @antonilol in https://github.com/mempool/mempool/pull/1464
* Mining stats does not depend on the websocket blocks number by @nymkappa in https://github.com/mempool/mempool/pull/1496
* Return empty pool addresses on testnet and signet by @nymkappa in https://github.com/mempool/mempool/pull/1488
* Correcting wrong or missing op_codes display by @softsimon in https://github.com/mempool/mempool/pull/1500
* Correcting op_code coloring by @softsimon in https://github.com/mempool/mempool/pull/1501
* Avoid parralel hashrate indexing when initial query is too slow by @nymkappa in https://github.com/mempool/mempool/pull/1498
* Send 404 when accessing non existing mining pool by @nymkappa in https://github.com/mempool/mempool/pull/1487
* Rounding bitcoin api satoshis by @softsimon in https://github.com/mempool/mempool/pull/1486
* Update AS142052 link by @nymkappa in https://github.com/mempool/mempool/pull/1504
* Updated pool summary page to display more info on hashrate/blocks by @nymkappa in https://github.com/mempool/mempool/pull/1503
* If mining dashboard is enabled, set block miner to &quot;Unknown&quot; by @nymkappa in https://github.com/mempool/mempool/pull/1492
* Npm run start broke by @softsimon in https://github.com/mempool/mempool/pull/1510
* Use github api to fetch and update the pools database, once a week by @nymkappa in https://github.com/mempool/mempool/pull/1511
* fix RTL layout issues by @TechMiX in https://github.com/mempool/mempool/pull/1506
* Fix Lightning HTLC detection with options_anchors by @antonilol in https://github.com/mempool/mempool/pull/1514
* [Indexing] - Support 10 blocks depth reorgs by @nymkappa in https://github.com/mempool/mempool/pull/1369
* Add block fees graph by @nymkappa in https://github.com/mempool/mempool/pull/1512
* Add block rewards graph by @nymkappa in https://github.com/mempool/mempool/pull/1513
* Set zlevel for all graphs series by @nymkappa in https://github.com/mempool/mempool/pull/1495
* fix wrong display of other sighash types + p2sh redeemScript by @antonilol in https://github.com/mempool/mempool/pull/1502
* Add faq by @hunicus in https://github.com/mempool/mempool/pull/1473
* Cleanup mining related backend logs by @nymkappa in https://github.com/mempool/mempool/pull/1519
* Fix log rotation configuration for mempool backend logs by @wiz in https://github.com/mempool/mempool/pull/1499
* Refactor database pool use by @nymkappa in https://github.com/mempool/mempool/pull/1517
* Sponsor page revamped by @softsimon in https://github.com/mempool/mempool/pull/1505
* Create dependabot.yml by @naveensrinivasan in https://github.com/mempool/mempool/pull/1339
* Breaking out strtotime from locutus lib by @softsimon in https://github.com/mempool/mempool/pull/1518
* Pin actions by SHA and set permissions for workflow by @naveensrinivasan in https://github.com/mempool/mempool/pull/1341
* Allow syncing external backend assets using Tor by @knorrium in https://github.com/mempool/mempool/pull/1433
* Add try/catch liquid icon loading by @nymkappa in https://github.com/mempool/mempool/pull/1546
* Add mercury wallet in the about page by @nymkappa in https://github.com/mempool/mempool/pull/1555
* Wait for external assets file writers to complete by @nymkappa in https://github.com/mempool/mempool/pull/1558
* Add block fee rates percentiles chart by @nymkappa in https://github.com/mempool/mempool/pull/1521
* Use block count instead of oldest block for timespan selection by @nymkappa in https://github.com/mempool/mempool/pull/1548
* Update blocks list skeleton by @nymkappa in https://github.com/mempool/mempool/pull/1553
* Validate block hash chain after indexing and for new blocks by @nymkappa in https://github.com/mempool/mempool/pull/1554
* Remove loading indicator for blocks-extras API by @nymkappa in https://github.com/mempool/mempool/pull/1563
* Ignore case on coinbase tag regexes by @nymkappa in https://github.com/mempool/mempool/pull/1564
* Read bisq dump blocks line by line and parse manually by @nymkappa in https://github.com/mempool/mempool/pull/1569
* Update docker faq by @hunicus in https://github.com/mempool/mempool/pull/1571
* Clean local block cache before loading dump by @nymkappa in https://github.com/mempool/mempool/pull/1579
* Fix reward stats skeleton titles by @nymkappa in https://github.com/mempool/mempool/pull/1580
* Show current network hashrate and difficulty using core RPC by @nymkappa in https://github.com/mempool/mempool/pull/1592
* Revise main readme and docker install docs by @hunicus in https://github.com/mempool/mempool/pull/1599
* Add screenshot for 2.4.0 to readme by @hunicus in https://github.com/mempool/mempool/pull/1600
* Fix datababse typo by @knorrium in https://github.com/mempool/mempool/pull/1587
* Moving Docs and Faq to separate lazy loaded module by @softsimon in https://github.com/mempool/mempool/pull/1568
* Upgrading npm packages and by @softsimon in https://github.com/mempool/mempool/pull/1584
* Update pools table before fetching the first blocks by @nymkappa in https://github.com/mempool/mempool/pull/1565
* Change faq docker link since docker docs moved by @hunicus in https://github.com/mempool/mempool/pull/1610
* Add back overwritten sentence to main readme by @hunicus in https://github.com/mempool/mempool/pull/1609
* Run hashrate indexing after midnight by @nymkappa in https://github.com/mempool/mempool/pull/1590
* fix lightning force close label with CSV delay &lt;= 16 by @antonilol in https://github.com/mempool/mempool/pull/1598
* Bump crypto-js from 4.0.0 to 4.1.1 in /backend by @dependabot in https://github.com/mempool/mempool/pull/1538
* Bump typescript from 4.4.4 to 4.6.4 in /backend by @dependabot in https://github.com/mempool/mempool/pull/1585
* Bump ws from 8.3.0 to 8.6.0 in /backend by @dependabot in https://github.com/mempool/mempool/pull/1593
* Bump express from 4.17.1 to 4.18.1 in /backend by @dependabot in https://github.com/mempool/mempool/pull/1594
* Refine production deployment doc by @hunicus in https://github.com/mempool/mempool/pull/1611
* Remove $ from commands in repo docs by @hunicus in https://github.com/mempool/mempool/pull/1618
* Add faq on address lookups by @hunicus in https://github.com/mempool/mempool/pull/1617
* Add graph download feature by @nymkappa in https://github.com/mempool/mempool/pull/1601
* Create indexing progress sticky notification by @nymkappa in https://github.com/mempool/mempool/pull/1596
* detect received lighting HTLC outputs by @antonilol in https://github.com/mempool/mempool/pull/1561
* Add block sizes vs weights graph by @nymkappa in https://github.com/mempool/mempool/pull/1597
* Update issue templates by @hunicus in https://github.com/mempool/mempool/pull/1630
* Fix the socks5 connection after updating the socks lib by @knorrium in https://github.com/mempool/mempool/pull/1633
* Modify minfee node bitcoin.conf to connect to external peers by @wiz in https://github.com/mempool/mempool/pull/1636
* Fix ELECTRUM_TLS_ENABLED Docker variable by @knorrium in https://github.com/mempool/mempool/pull/1640
* Added some missing alt tags on some img by @nymkappa in https://github.com/mempool/mempool/pull/1644
* Skip missing blocks during block hash chain validation by @nymkappa in https://github.com/mempool/mempool/pull/1591
* Update block API by @nymkappa in https://github.com/mempool/mempool/pull/1556
* Add simple faq on full mempool by @hunicus in https://github.com/mempool/mempool/pull/1639
* Update the recommended node version to v16.15.0 (LTS) by @knorrium in https://github.com/mempool/mempool/pull/1625
* Polish dashboards second widgets line by @nymkappa in https://github.com/mempool/mempool/pull/1629
* Delete useless log by @nymkappa in https://github.com/mempool/mempool/pull/1662
* Correcting and harmonizing i18n strings by @softsimon in https://github.com/mempool/mempool/pull/1627
* Minor i18n corrections by @softsimon in https://github.com/mempool/mempool/pull/1663
* Always use BTC unit in blocks list by @nymkappa in https://github.com/mempool/mempool/pull/1652
* Allow CTRL F an address on the transaction list component by @nymkappa in https://github.com/mempool/mempool/pull/1653
* Use passive listeners to improve scrolling performance by @nymkappa in https://github.com/mempool/mempool/pull/1658
* Cleanup mining API endpoints by @nymkappa in https://github.com/mempool/mempool/pull/1659
* Define avg block time to 10 min until we have at least 146 block in the current epoch by @nymkappa in https://github.com/mempool/mempool/pull/1661
* Fix for transaction inputs being fetched recursively by @softsimon in https://github.com/mempool/mempool/pull/1665
* Reset outspends cache when switching to new tx page. by @softsimon in https://github.com/mempool/mempool/pull/1632
* Tweaking the websocket retry timers by @softsimon in https://github.com/mempool/mempool/pull/1637
* pools-updater: Support secure Tor connection to sync data with Github by @ayanamidev in https://github.com/mempool/mempool/pull/1649
* Remove unused config from nginx by @ayanamidev in https://github.com/mempool/mempool/pull/1666
* Adding some missing i18n strings by @softsimon in https://github.com/mempool/mempool/pull/1664
* Upgrade Cypress to v9.6.1 by @knorrium in https://github.com/mempool/mempool/pull/1672
* Don't prepend apiBasePath for services backend resources by @wiz in https://github.com/mempool/mempool/pull/1670
* Index blocks.hash by @nymkappa in https://github.com/mempool/mempool/pull/1673
* Cache /block API response for 10 min on user side by @nymkappa in https://github.com/mempool/mempool/pull/1674
* Additional expiration header for mining pool API endpoints by @nymkappa in https://github.com/mempool/mempool/pull/1676
* Add mining api docs by @hunicus in https://github.com/mempool/mempool/pull/1654
* Moving graphs and mining dashboard to a lazy loaded module by @softsimon in https://github.com/mempool/mempool/pull/1682
* Add feedback for mining API docs by @hunicus in https://github.com/mempool/mempool/pull/1680
* Set /mining/blocks/xxx APIs expiration to 60 seconds instead of 5 min by @nymkappa in https://github.com/mempool/mempool/pull/1686
* Fixes broken fee rate calculation for mempool transactions by @softsimon in https://github.com/mempool/mempool/pull/1688
* Improving loading indicator UX by @softsimon in https://github.com/mempool/mempool/pull/1667
* Fixes for Liquid module routing by @softsimon in https://github.com/mempool/mempool/pull/1690
* Reward stats i18n fix by @softsimon in https://github.com/mempool/mempool/pull/1694
* Round miners reward to full dollar by @softsimon in https://github.com/mempool/mempool/pull/1695
* Fix websockets tab by @hunicus in https://github.com/mempool/mempool/pull/1697
* Lazy load tx inputs in Bitcoin Core mode by @softsimon in https://github.com/mempool/mempool/pull/1643
* Add escaped slug into logs when slug does not match any pool by @nymkappa in https://github.com/mempool/mempool/pull/1657
* Make sure to re-index skipped block when backend is offline for too long by @nymkappa in https://github.com/mempool/mempool/pull/1635
* Fix missing tx column in main dashboard on mobile by @nymkappa in https://github.com/mempool/mempool/pull/1708
* Hide graph selection button on non bitcoin networks by @nymkappa in https://github.com/mempool/mempool/pull/1707
* Add schildbach bitcoin wallet to about page by @hunicus in https://github.com/mempool/mempool/pull/1710
* Update case in some mining API endpoint response by @nymkappa in https://github.com/mempool/mempool/pull/1685
* Merge legacy and mining /blocks components and APIs by @nymkappa in https://github.com/mempool/mempool/pull/1696
* Block transactions list error handling by @softsimon in https://github.com/mempool/mempool/pull/1700
* Add role attributes for doc nav elements by @hunicus in https://github.com/mempool/mempool/pull/1701
* Replace all oldestIndexedBlockTimestamp with X-total-count header by @nymkappa in https://github.com/mempool/mempool/pull/1687
* Liquid empty miner UX fix by @softsimon in https://github.com/mempool/mempool/pull/1699
* Move manual install notes to separate docs by @hunicus in https://github.com/mempool/mempool/pull/1714
* NgBootstrap library import optimization by @softsimon in https://github.com/mempool/mempool/pull/1717
* Add faq on empty blocks by @hunicus in https://github.com/mempool/mempool/pull/1728
* Add loading spinner in /blocks page by @nymkappa in https://github.com/mempool/mempool/pull/1718
* Remove keybase link from about page by @hunicus in https://github.com/mempool/mempool/pull/1735
* Adjust stuck tx faqs for angry people by @hunicus in https://github.com/mempool/mempool/pull/1736
* Angular 13.3.10 update by @softsimon in https://github.com/mempool/mempool/pull/1733
* Mining dashboard still runs fine if Bitcoin Core becomes unavailable by @nymkappa in https://github.com/mempool/mempool/pull/1716
* Don't try to run pools parser if db is not enabled by @nymkappa in https://github.com/mempool/mempool/pull/1719
* Fix doc page titles by @hunicus in https://github.com/mempool/mempool/pull/1730
* Use block hash instead of block height in urls by @nymkappa in https://github.com/mempool/mempool/pull/1739
* Add `economyFee` field in /api/fees/recommended API by @nymkappa in https://github.com/mempool/mempool/pull/1738
* Upgrading packages by @softsimon in https://github.com/mempool/mempool/pull/1742
* Changed menu buttons to links by @softsimon in https://github.com/mempool/mempool/pull/1750
* Bump clipboard from 2.0.10 to 2.0.11 in /frontend by @dependabot in https://github.com/mempool/mempool/pull/1624
* Save bisq aggregate exchange rates in the database for each new block by @nymkappa in https://github.com/mempool/mempool/pull/1723
* Handle nonstandard inputs by @softsimon in https://github.com/mempool/mempool/pull/1751
* Change backend start syslog message from DEBUG to NOTICE by @wiz in https://github.com/mempool/mempool/pull/1763
* Remove fee calculation from the frontend by @nymkappa in https://github.com/mempool/mempool/pull/1741
* Only attempt to save fx rate if database is enabled by @nymkappa in https://github.com/mempool/mempool/pull/1764
* Use inline SVG for mempool.space logo by @wiz in https://github.com/mempool/mempool/pull/1752
* If bisq data folder is not ready, retry every 3 minutes instead of exit by @nymkappa in https://github.com/mempool/mempool/pull/1642
* Send fee info with init data by @softsimon in https://github.com/mempool/mempool/pull/1765
* Re-add hash field in the mysql block query by @nymkappa in https://github.com/mempool/mempool/pull/1769
* Rewamp the fee widget by @nymkappa in https://github.com/mempool/mempool/pull/1766
* Feature: Projected block visualization by @mononaut in https://github.com/mempool/mempool/pull/1774
* Minor refactor for projected block transactions by @softsimon in https://github.com/mempool/mempool/pull/1779
* Updated new fee widget design by @nymkappa in https://github.com/mempool/mempool/pull/1790
* Make node 16.15 required not recommended by @hunicus in https://github.com/mempool/mempool/pull/1784
* Skip blocks disk cache loading after db migration by @nymkappa in https://github.com/mempool/mempool/pull/1797
* Update dashboard screenshot for v2.4.0 release by @wiz in https://github.com/mempool/mempool/pull/1792
* Update /api/blocks docs by @hunicus in https://github.com/mempool/mempool/pull/1795
* Refactor pool ranking rxjs observable by @nymkappa in https://github.com/mempool/mempool/pull/1772
* Re-added missing cache version by @nymkappa in https://github.com/mempool/mempool/pull/1800
* Improve disk cache logging by @nymkappa in https://github.com/mempool/mempool/pull/1801
* Fix for mempool logo SVG issue by @softsimon in https://github.com/mempool/mempool/pull/1809
* Make sure blocks list rxjs observable triggers at least once by @nymkappa in https://github.com/mempool/mempool/pull/1808
* Cypress v10 upgrade by @knorrium in https://github.com/mempool/mempool/pull/1806
* stricter multisig check + detect bare multisig when spent by @antonilol in https://github.com/mempool/mempool/pull/1745
* Reload mempool visualization on reconnect by @softsimon in https://github.com/mempool/mempool/pull/1811
* Handle Error with basic retry while syncing external assets by @ayanamidev in https://github.com/mempool/mempool/pull/1691
* Add pull request template to discourage tx prs by @hunicus in https://github.com/mempool/mempool/pull/1825
* Update fee faq by @hunicus in https://github.com/mempool/mempool/pull/1819
* Add 'db-less' mining pool tagging support by @nymkappa in https://github.com/mempool/mempool/pull/1822
* Add feerate tooltips by @hunicus in https://github.com/mempool/mempool/pull/1820
* Change 'projected blocks' to 'mempool blocks' in feerate tooltips by @hunicus in https://github.com/mempool/mempool/pull/1827
* Change &quot;projected block&quot; to &quot;mempool block&quot; in feerate faq by @hunicus in https://github.com/mempool/mempool/pull/1830
* Fix pool import crash by @nymkappa in https://github.com/mempool/mempool/pull/1834
* Add missing sed substitutions in docker/backend/start.sh by @wiz in https://github.com/mempool/mempool/pull/1839
* Use ellipsis + tooltip combo to fix layout on long string by @nymkappa in https://github.com/mempool/mempool/pull/1855
* Release v2.4.0 by @wiz in https://github.com/mempool/mempool/pull/1858

## New Contributors
* @antonilol made their first contribution in https://github.com/mempool/mempool/pull/1158
* @AaronDewes made their first contribution in https://github.com/mempool/mempool/pull/1194
* @Bosch-0 made their first contribution in https://github.com/mempool/mempool/pull/1316
* @dsbaars made their first contribution in https://github.com/mempool/mempool/pull/1360
* @naveensrinivasan made their first contribution in https://github.com/mempool/mempool/pull/1339
* @ayanamidev made their first contribution in https://github.com/mempool/mempool/pull/1649
* @mononaut made their first contribution in https://github.com/mempool/mempool/pull/1774

**Full Changelog**: https://github.com/mempool/mempool/compare/v2.3.1...v2.4.0</summary>
    <title>mempool/mempool: v2.4.0</title>
    <updated>2022-06-09T15:25:19Z</updated>
    <dc:date>2022-06-09T15:25:19Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.107</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.107"/>
    <summary># 0.0.107

## API Updates
 * Channels larger than 16777215 sats (Wumbo!) are now supported and can be
   enabled for inbound channels using
   `ChannelHandshakeLimits::max_funding_satoshis` (#1425).
 * Support for feature `option_zeroconf`, allowing immediate forwarding of
   payments after channel opening. This is configured for outbound channels
   using `ChannelHandshakeLimits::trust_own_funding_0conf` whereas
   `ChannelManager::accept_inbound_channel_from_trusted_peer_0conf` has to be
   used for accepting inbound channels (#1401, #1505).
 * `ChannelManager::claim_funds` no longer returns a `bool` to indicate success.
   Instead, an `Event::PaymentClaimed` is generated if the claim was successful.
   Likewise, `ChannelManager::fail_htlc_backwards` no longer has a return value
   (#1434).
 * `lightning-rapid-gossip-sync` is a new crate for syncing gossip data from a
   server, primarily aimed at mobile devices (#1155).
 * `RapidGossipSync` can be passed to `BackgroundProcessor` in order to persist
   the `NetworkGraph` and handle `NetworkUpdate`s during event handling (#1433,
   #1517).
 * `NetGraphMsgHandler` has been renamed to `P2PGossipSync`, the `network_graph`
    module has been renamed to `gossip`, and `NetworkUpdate::ChannelClosed` has
   been renamed `NetworkUpdate::ChannelFailure` (#1159).
 * Added a `filtered_block_connected` method to `chain::Listen` and a default
   implementation of `block_connected` for those fetching filtered instead of
   full blocks (#1453).
 * The `lightning-block-sync` crate's `BlockSource` trait methods now take
   `&amp;self` instead of `&amp;mut self` (#1307).
 * `inbound_payment` module is now public to allow for creating invoices without
   a `ChannelManager` (#1384).
 * `lightning-block-sync`'s `init` and `poll` modules support `&amp;dyn BlockSource`
   which can be determined at runtime (#1423).
 * `lightning-invoice` crate's `utils` now accept an expiration time (#1422,
   #1474).
 * `Event::PaymentForwarded` includes `prev_channel_id` and `next_channel_id`
   (#1419, #1475).
 * `chain::Watch::release_pending_monitor_events`' return type now associates
   `MonitorEvent`s with funding `OutPoints` (#1475).
 * `lightning-background-processor` crate's `Persister` trait has been moved to
   `lightning` crate's `util::persist` module, which now has a general
   `KVStorePersister` trait. Blanket implementations of `Persister` and
   `chainmonitor::Persist` are given for types implementing `KVStorePersister`.
   ` lightning-persister`'s `FilesystemPersister` implements `KVStorePersister`
   (#1417).
 * `ChannelDetails` and `ChannelCounterparty` include fields for HTLC minimum
   and maximum values (#1378).
 * Added a `max_inbound_htlc_value_in_flight_percent_of_channel` field to
   `ChannelHandshakeConfig`, capping the total value of outstanding inbound
   HTLCs for a channel (#1444).
 * `ProbabilisticScorer` is parameterized by a `Logger`, which it uses to log
   channel liquidity updates or lack thereof (#1405).
 * `ChannelDetails` has an `outbound_htlc_limit_msat` field, which should be
   used in routing instead of `outbound_capacity_msat` (#1435).
 * `ProbabilisticScorer`'s channel liquidities can be logged via
   `debug_log_liquidity_stats` (#1460).
 * `BackgroundProcessor` now takes an optional `WriteableScore` which it will
   persist using the `Persister` trait's new `persist_scorer` method (#1416).
 * Upgraded to `bitcoin` crate version 0.28.1 (#1389).
 * `ShutdownScript::new_witness_program` now takes a `WitnessVersion` instead of
   a `NonZeroU8` (#1389).
 * Channels will no longer be automatically force closed when the counterparty
   is disconnected due to incompatibility (#1429).
 * `ChannelManager` methods for funding, accepting, and closing channels now
   take a `counterparty_node_id` parameter, which has also been added as a field
   to `Event::FundingGenerationReady` (#1479, #1485).
 * `InvoicePayer::new` now takes a `Retry` enum (replacing the `RetryAttempts`
   struct), which supports both attempt- and timeout-based retrying (#1418).
 * `Score::channel_penalty_msat` takes a `ChannelUsage` struct, which contains
   the capacity as an `EffectiveCapacity` enum and any potential in-flight HTLC
   value, rather than a single `u64`. Used by `ProbabilisticScorer` for more
   accurate penalties (#1456).
 * `build_route_from_hops` is a new function useful for constructing a `Route`
   given a specific list of public keys (#1491).
 * `FundingLocked` message has been renamed `ChannelReady`, and related
   identifiers have been renamed accordingly (#1506).
 * `core2::io` or `std::io` (depending on feature flags `no-std` or `std`) is
   exported as a `lightning::io` module (#1504).
 * The deprecated `Scorer` has been removed in favor or `ProbabilisticScorer`
   (#1512).

## Performance Improvements
 * `lightning-persister` crate's `FilesystemPersister` is faster by 15x (#1404).
 * Log gossip query messages at `GOSSIP` instead of `TRACE` to avoid
   overwhelming default logging (#1421).
 * `PeerManager` supports processing messages from different peers in parallel,
   and this is taken advantage of in gossip processing (#1023).
 * Greatly reduced per-channel and per-node memory usage due to upgrade of
   `secp256k1` crate to 0.22.1 and `bitcoin` crate to 0.28.1
 * Reduced per-peer memory usage in `PeerManager` (#1472).

## Spec Compliance
 * `find_route` now assumes variable-length onions by default for nodes where
   support for the feature is unknown (#1414).
 * A `warn` message is now sent when receiving a `channel_reestablish` with an
   old commitment transaction number rather than immediately force-closing the
   channel (#1430).
 * When a `channel_update` message is included in an onion error's `failuremsg`,
   its message type is now encoded. Reading such messages is also supported
   (#1465).

## Bug Fixes
 * Fixed a bug where crashing while persisting a `ChannelMonitorUpdate` for a
   part of a multi-path payment could cause loss of funds due to a partial
   payment claim on restart (#1434).
 * `BackgroundProcessor` has been fixed to improve serialization reliability on
   slow systems which can avoid force-closes (#1436).
 * `gossip_timestamp_filter` filters are now honored when sending gossip to
   peers (#1452).
 * During a reorg, only force-close a channel if its funding transaction is
   unconfirmed rather than as it loses confirmations (#1461).
 * Fixed a rare panic in `lightning-net-tokio` when fetching a peer's socket
   address after the connection has been closed caused by a race condition
   (#1449).
 * `find_route` will no longer return routes that would cause onion construction
   to fail in some cases (#1476).
 * `ProbabilisticScorer` uses more precision when approximating `log10` (#1406).

## Serialization Compatibility
 * All above new events/fields are ignored by prior clients. All above new
   events/fields are not present when reading objects serialized by prior
   versions of the library.
 * `ChannelManager` serialization is no longer compatible with versions prior to
   0.0.99 (#1401).
 * Channels with `option_zeroconf` feature enabled (not required for 0-conf
   channel use) will be unreadable by versions prior to 0.0.107 (#1401, #1505).

In total, this release features 96 files changed, 9304 insertions, 4503
deletions in 153 commits from 18 authors, in alphabetical order:
 * Arik Sosman
 * Devrandom
 * Duncan Dean
 * Elias Rohrer
 * Jeffrey Czyz
 * John Cantrell
 * John Corser
 * Jurvis Tan
 * Justin Moon
 * KaFai Choi
 * Mateusz Faltyn
 * Matt Corallo
 * Valentine Wallace
 * Viktor Tigerström
 * Vincenzo Palazzo
 * atalw
 * dependabot[bot]
 * shamardy
</summary>
    <title>lightningdevkit/rust-lightning: v0.0.107</title>
    <updated>2022-06-08T23:56:54Z</updated>
    <dc:date>2022-06-08T23:56:54Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.5.0</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.5.0"/>
    <summary>Introducing Umbrel 0.5. A whole new look. Realtime app updates. App permissions, dependencies, and authentication. Official Bitcoin &amp; Lightning node apps. Oh, and dark mode.

Our biggest update to Umbrel yet. Read the full announcement: https://link.umbrel.com/surprise</summary>
    <title>getumbrel/umbrel: v0.5.0</title>
    <updated>2022-06-07T13:00:45Z</updated>
    <dc:date>2022-06-07T13:00:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.2</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.2"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/Specter-Setup-v1.10.2.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/Specter-v1.10.2.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/specter_desktop-v1.10.2-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/specterd-v1.10.2-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/specterd-v1.10.2-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/specterd-v1.10.2-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.2/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Feature: Basic auth in electron #1730 (djpnewton)
- Feature: Multisig beginner guide #1731 (relativisticelectron)
- Bugfix: Corrected build instructions and made virtuelenv name dynamic #1735 (relativisticelectron)
- Bugfix: issues while using specter as library #1740 (k9ert)
- Bugfix: PDF backup does not open for multisig #1741 (k9ert)
- UIUX: fix typo in error_logs #1739 (Bufo)
</summary>
    <title>cryptoadvance/specter-desktop: v1.10.2</title>
    <updated>2022-06-03T08:19:20Z</updated>
    <dc:date>2022-06-03T08:19:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.4</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.4"/>
    <summary>### New features:

* Allow resending verification email for users (#3726) @bolatovumar

### Bug fixes:

* Allow pull payments denominated in SATS to be claimed (#3778) @dennisreimann
* Balance was not updated after a wallet rescan @NicolasDorier
</summary>
    <title>btcpayserver/btcpayserver: v1.5.4</title>
    <updated>2022-05-28T12:33:54Z</updated>
    <dc:date>2022-05-28T12:33:54Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.0</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.10.0"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/Specter-Setup-v1.10.0.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/Specter-v1.10.0.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/specter_desktop-v1.10.0-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/specterd-v1.10.0-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/specterd-v1.10.0-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/specterd-v1.10.0-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.10.0/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Feature: adding has_service() method to user #1732 (Kim Neunert)
- Feature: Choose file button for labels import #1682 (Manolis)
- Feature: Customised front end for adding Electrum devices #1622 (relativisticelectron)
- Feature: introducing gunicorn as an alternative WSGI HTTP Server #1721 (Kim Neunert)
- Feature: Message signing via QR code #1567 (Manolis)
- Feature: new extensionpoint specter_persistence_callback #1723 (Kim Neunert)
- Feature: Optimized uncle jim pdf for the Debasafebags. #1706 (f9ert)
- Bugfix: add proper uid to initial config fixes #1714 #1715 (Kim Neunert)
- Bugfix: better error-handling and version checks #1691 (Kim Neunert)
- Bugfix: wrong arguments for requests_session #1719 (Kim Neunert)
- Chore: Adjusted releasing process and adding liquidissuer  #1716 (Kim Neunert)
- Chore: Bump ejs from 3.1.5 to 3.1.7 in /pyinstaller/electron #1697 (dependabot[bot])
- Chore: Change Specter compatibility to &quot;&gt;=3.7,&lt;3.10&quot; #1707 (relativisticelectron)
- Chore: Docker #1696 (Aaron Dewes)
- Chore: embit Upgrade to 0.4.13 (ripemd160 replacement)  #1702 (relativisticelectron)
- Chore: install_noded.sh support for elements binary #1717 (relativisticelectron)
- Chore: misc changes #1733 (Kim Neunert)
- Chore: Non-standard ports for test-cypress.sh #1729 (Kim Neunert)
- Chore: Refactor UTXO scan (and timeout bugfix for utxo_scan) #1687 (Kim Neunert)
- Chore: Removing HWIBridge initialisation on module-level #1720 (Kim Neunert)
- Chore: Upgrade black version for pre-commit #1708 (relativisticelectron)
- Chore: Introducing an issue template #1692 (Kim Neunert)
- Docs: Added support for other distros (Arch/Fedora) #1713 (Ankur)
</summary>
    <title>cryptoadvance/specter-desktop: v1.10.0</title>
    <updated>2022-05-27T13:32:02Z</updated>
    <dc:date>2022-05-27T13:32:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.5</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.5"/>
    <summary>- Add Ledger Nano S Plus support
- Allow watch-only keystores to enable signing from matching connected hardware wallets
- Import gap limit from Electrum wallets
- Bug fix: Restore Ledger hardware wallet functionality on 2.0.4 firmware (@achow101)
- Bug fix: Restore hardware wallet communication on older (10.x) MacOS
- Bug fix: When hiding empty used addresses, add and remove addresses if address balance changes
- Bug fix: Explicitly commit spinner editor value when closing dialogs
- Bug fix: Fix date sorting on UTXOs table
- Bug fix: Raise minimum for min mixes before mixing out to 2
- Bug fix: Improve delete wallet performance on some systems by reducing overwrite entropy
- Bug fix: Fix PSBT taproot internal key duplication
- Bug fix: Set Lock All Wallets menu command status on every wallet lock
- Bug fix: Hide entry cell action boxes completely when not hovered over</summary>
    <title>sparrowwallet/sparrow: 1.6.5</title>
    <updated>2022-05-26T12:03:34Z</updated>
    <dc:date>2022-05-26T12:03:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.3"/>
    <summary>### New features:

* Add an experimental mode for new features (#3772) @NicolasDorier
* Wallet transactions export (#3744) @dennisreimann

### Bug fixes:

* Fix: Invoices from shopify had empty orderId (#3777 #3769) @NicolasDorier
* Lightning: Allow specifying explicit amount for invoices (#3753) @dennisreimann
* Make login and password not required for sending email (#3764) @bolatovumar @NicolasDorier
* Fix labels not showing multiple payouts payments (#3729) @Kukks
* Fix overflowing text in order ID field in invoices table (#3765) @bolatovumar
* Fix a couple of mobile display issues (#3759) @bolatovumar
* Fix unwanted alert list marker for single error in payout's validation form, issue #3583 MrPaz
* Fix a bunch of open redirect vulnerability @NicolasDorier (Thanks to Iman Sharafaldin @ImanOracle for reporting those)
* Fix Automatically Approved column in pull payment was always false, even if automatic approval was activated (#3693) @bolatovumar

### Improvements:

* Performance improvement when lot's of invoices are pending (#3774) @NicolasDorier
* Remove of an unused table in postgres (#3773) @NicolasDorier
* Remove some logs from the payout processor @NicolasDorier
* Payout Processors: Use friendly name in delete confirmation (#3758) @dennisreimann
* Wallet display improvements (#3755) @dennisreimann
* Some UI improvements @dstrukt</summary>
    <title>btcpayserver/btcpayserver: v1.5.3</title>
    <updated>2022-05-25T10:38:42Z</updated>
    <dc:date>2022-05-25T10:38:42Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-core/HWI/releases/tag/2.1.1</id>
    <link href="https://github.com/bitcoin-core/HWI/releases/tag/2.1.1"/>
    <summary>Also available on [PyPi](https://pypi.org/project/hwi/2.1.1/) and can be installed with `pip install -U hwi`

# Added

* Ledger Nano S Plus Support

# Fixed

* Change detection of Taproot change outputs for Trezors
* Signing failure for Ledger Bitcoin App 2.x</summary>
    <title>bitcoin-core/HWI: 2.1.1</title>
    <updated>2022-05-24T20:39:01Z</updated>
    <dc:date>2022-05-24T20:39:01Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.7</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.7"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.7</title>
    <updated>2022-05-24T19:47:25Z</updated>
    <dc:date>2022-05-24T19:47:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.6</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.6"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.6</title>
    <updated>2022-05-24T19:42:41Z</updated>
    <dc:date>2022-05-24T19:42:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.4</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.4"/>
    <summary>- Native support for Apple M1 (aarch64)
- Add Blockstream Jade support
- Upgrade to HWI 2.1.0 for hardware wallet Taproot signing (Trezor and Ledger) (@achow101)
- Support scanning seed QRs (SeedQR, CompactSeedQR, ur:crypto-seed, ur:crypto-bip39) to import seed words and xpubs and to sign PSBTs with immediate clearing of the seed
- Add dust attack warning to UTXOs where small value transactions are received on previously used addresses
- Add 'Restart in Testnet' menu command
- Add 'Delete Wallet' function to File menu, overwriting wallet file data first
- Add 'Select All' button to UTXOs tab
- Disable 'Lock All Wallets' menu item when all wallets are locked
- Rename 'Refresh Wallet' to 'Refresh Wallet Account' where necessary to indicate wallet accounts are refreshed individually
- Enable 'Max' button when RBF replacement transaction has only one output and no additional inputs
- Disable privacy optimisation button for BIP78 Payjoins
- Update confirmation status for opened unconfirmed wallet txes once they have been mined
- Show signature status on transaction tab for loaded transactions even when offline
- Pass the desired account number to keystore import description when importing for additional accounts
- Make connection toggle pulsing clearer by increasing the opacity range
- Make USB hardware wallet enumeration period configurable
- Enable pasting a string into send to many spreadsheet using pre-edit cell context menu
- Update to JavaFX 18, Gradle 7.4.2 and Java 17.0.2
- Bug fix: Update wallet name in db on load if wallet filename is changed in order to fix passphrase entry dialog
- Bug fix: Reverse sort order of date column in UTXOs tab
- Bug fix: Update 'Mix to' button text when wallet label is changed
- Bug fix: Don't show 'Mix Selected' button for Taproot wallets
- Bug fix: Improve validation and focus handling in integer spinners
- Bug fix: Upgrade to nightjar 0.2.33 for Whirlpool startup fix (@zeroleak)
- Bug fix: Recalculate txid before copying from Txid copy button
- Bug fix: Ensure minimum relay fee rate is always equal or greater than 1 sat/vb</summary>
    <title>sparrowwallet/sparrow: 1.6.4</title>
    <updated>2022-05-19T12:17:13Z</updated>
    <dc:date>2022-05-19T12:17:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v0.11.1</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v0.11.1"/>
    <summary>This is a minor release, highly recommended, which fixes two problems with the v0.11.0.1 release:

1. Unwanted unilateral closes.  We could get confused by reconnections, and think that a peer had sent us out-of-date &quot;channel_reestablish&quot; data.  This caused us to complain about e.g. &quot;bad reestablish revocation_number: 7457 vs 7462&quot; and send an error and close the channel.
2. An overzealous check in `connectd`, particularly when reconnecting with multiple channels, which intermittently crashed the node.

Thanks to all the people who reported bugs!
Rusty.</summary>
    <title>ElementsProject/lightning: v0.11.1</title>
    <updated>2022-05-16T01:19:32Z</updated>
    <dc:date>2022-05-16T01:19:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.18</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.18"/>
    <summary>This update brings two brand new apps to the Umbrel App Store — Elements Core and IPFS Podcasting, along with updated apps and bugfixes.</summary>
    <title>getumbrel/umbrel: v0.4.18</title>
    <updated>2022-05-13T13:26:45Z</updated>
    <dc:date>2022-05-13T13:26:45Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.3</id>
    <link href="https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.3"/>
    <summary>## What's Changed
* refactor: decompose app component by @waterplea in https://github.com/Start9Labs/embassy-os/pull/1359
* Update Makefile by @kn0wmad in https://github.com/Start9Labs/embassy-os/pull/1400
* ⬐ smarter wget by @k0gen in https://github.com/Start9Labs/embassy-os/pull/1401
* prevent the kernel from OOMKilling embassyd by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1402
* attempt to heal when health check passes by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1420
* Feat  new locking by @Blu-J in https://github.com/Start9Labs/embassy-os/pull/1384
* version bump by @dr-bonez in https://github.com/Start9Labs/embassy-os/pull/1423
* Update server-show.page.ts by @chrisguida in https://github.com/Start9Labs/embassy-os/pull/1424
* Bump async from 2.6.3 to 2.6.4 in /frontend by @dependabot in https://github.com/Start9Labs/embassy-os/pull/1426
* Update index.html by @mirkoRainer in https://github.com/Start9Labs/embassy-os/pull/1419

## New Contributors
* @dependabot made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1426
* @mirkoRainer made their first contribution in https://github.com/Start9Labs/embassy-os/pull/1419

**Full Changelog**: https://github.com/Start9Labs/embassy-os/compare/v0.3.0.2...v0.3.0.3</summary>
    <title>Start9Labs/embassy-os: v0.3.0.3</title>
    <updated>2022-05-09T20:06:31Z</updated>
    <dc:date>2022-05-09T20:06:31Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.2"/>
    <summary>### Bug fixes:

* Various internal fixes @NicolasDorier @Kukks
* Various UI fixes (#3702 #3721) @dennisreimann
* Updated Payout processor Label for setting interval (#3698) @Bangalisch
* Update validation of crowdfund app settings (#3708) @bolatovumar
* Fix POS styling (#3713) @ishristov 

### Improvements:

* Do not always provide counting in list views (#3696) @NicolasDorier
* Lightning: Catch and display external service error (#3710) @dennisreimann
* Add dark mode option for public pull payment and payment request views (#3707) @dennisreimann
* Show Shopify Order Id instead of Shopify order internal id (#3718) @Kukks
</summary>
    <title>btcpayserver/btcpayserver: v1.5.2</title>
    <updated>2022-05-09T12:16:43Z</updated>
    <dc:date>2022-05-09T12:16:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.9.1</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.9.1"/>
    <summary>**A newer version is already available! Please don’t use this version anymore.**

This is a follow-up release that fixes a null pointer exception when resolving a mediation with custom payout, fixes an API issue with AustrialianPayId and improves fee transaction validation.

See https://github.com/bisq-network/bisq/milestone/70?closed=1 for more details.

Here are the release notes from v1.9.0:

## Release notes
If you ever wanted to integrate Bisq into your project and/or to automate your most common use cases, now is the time to do it! This release ships an official API: a daemon (GRPC API endpoints) and a CLI. Please see the API section below for more details.

Aside from an API, we have simplified Bisq's navigation to make it easier to find what you are looking for:
* If you want to buy Bitcoin with EUR, just go to Buy &gt; Bitcoin and select your preferred payment method
* If you want to buy BSQ, just go to Buy &gt; BSQ

This approach gets rid of several intervening and (sometimes unintuitive) steps, so we hope it makes Bisq less mind-bending for new users.

And of course there are lots of bug fixes and improvements across the board.

### Improvements
- [Improve navigation structure](https://github.com/bisq-network/bisq/pull/6135)
- [Check failed trades for sensitive data purge](https://github.com/bisq-network/bisq/pull/6132)
- [Clarify that CBM / F2F not be used to advertise websites or contact info](https://github.com/bisq-network/bisq/pull/6140)
- [Clarify DAO status shown when in sync &amp; peers have conflicts](https://github.com/bisq-network/bisq/pull/6130)
- [Editable account names](https://github.com/bisq-network/bisq/pull/6014)
- [IBAN validation for SEPA account](https://github.com/bisq-network/bisq/pull/6107)
- [Separate transaction details in funds views](https://github.com/bisq-network/bisq/pull/6110)
- [Dispute subsystem enhancements](https://github.com/bisq-network/bisq/pull/6099)
- [Add inbound Tor connectivity test](https://github.com/bisq-network/bisq/pull/6147)
- [Support Bitcoin Core v22 RPC for JSON export](https://github.com/bisq-network/bisq/pull/6123)
- [Add popup reminder to inform users of trading rules](https://github.com/bisq-network/bisq/pull/6164)

### Bug fixes
- [Prevent multiple payout screens when agent repeat clicks on close ticket](https://github.com/bisq-network/bisq/pull/6136)
- [Prevent UI freeze in BSQ dashboard view](https://github.com/bisq-network/bisq/pull/6131)
- [Show correct buy BSQ state on activation for take offer](https://github.com/bisq-network/bisq/pull/6121)
- [Update trigger price validation](https://github.com/bisq-network/bisq/pull/6109)
- [Update currency related fields after switch of payment account](https://github.com/bisq-network/bisq/pull/6097)
- [Trigger price truncation of prompt text](https://github.com/bisq-network/bisq/pull/6111)
- [Fix corrupted MaxTradePeriod when offer payment method changed](https://github.com/bisq-network/bisq/pull/6176)
- [Fix the avatar trade count tag to include BSQ Swap trades](https://github.com/bisq-network/bisq/pull/6134)
- [Fix localization issue when accessing directories and JAR resource paths](https://github.com/bisq-network/bisq/pull/6148)
- [Fix fee request throttling](https://github.com/bisq-network/bisq/pull/6133)
- [Fix update number of open offers on change](https://github.com/bisq-network/bisq/pull/6178)

### Development &amp; Documentation
- [Add logo to README](https://github.com/bisq-network/bisq/pull/6145)
- [Fix permissions for build.yml](https://github.com/bisq-network/bisq/pull/6083)
- [API: Create API cli and daemon releases as zip archives](https://github.com/bisq-network/bisq/pull/6122)
- [API: Send pretty payment details to API clients](https://github.com/bisq-network/bisq/pull/6103)
- [API: Exclude persistedAccountName from API payment acct json forms](https://github.com/bisq-network/bisq/pull/6098)
- [API: Bug-fix for incorrect BsqSwap's OfferInfo.isActivated value](https://github.com/bisq-network/bisq/pull/6094)
- [API: Send meaningful io.grpc.Status.Code to gRPC clients](https://github.com/bisq-network/bisq/pull/6088)
- [API: Move get (cryptocurrency) offer filter to daemon](https://github.com/bisq-network/bisq/pull/6086)
- [API: Fix 3 misleading .proto TradeInfo field names](https://github.com/bisq-network/bisq/pull/6081)
- [API: Convert grpc.proto field names to snake_case](https://github.com/bisq-network/bisq/pull/6080)
- [API: Remove GetTradeStatistics service from grpc.proto](https://github.com/bisq-network/bisq/pull/6079)
- [API: Continue documenting grpc.proto for API reference site](https://github.com/bisq-network/bisq/pull/6068)
- [API: Clarify meaning of API/Offer related % fields](https://github.com/bisq-network/bisq/pull/6065)
- [API: Change TradeInfo proto's tradePrice &amp; tradeVolume fields to string](https://github.com/bisq-network/bisq/pull/6062)
- [API: Change API OfferInfo volume/minVolume proto fields to string](https://github.com/bisq-network/bisq/pull/6060)
- [API: Change API grpc.proto triggerPrice field to string](https://github.com/bisq-network/bisq/pull/6057)
- [API: Change API's OfferInfo proto's price field to string](https://github.com/bisq-network/bisq/pull/6056)
- [API: Prepare API Offers .proto defs for significant changes](https://github.com/bisq-network/bisq/pull/6055)
- [API: Fix BSQ swap description of BTC price for 1 BSQ](https://github.com/bisq-network/bisq/pull/6074)
- [Bump actions/checkout from 3.0.0 to 3.0.1](https://github.com/bisq-network/bisq/pull/6152)
- [Bump actions/checkout from 2.4.0 to 3](https://github.com/bisq-network/bisq/pull/6093)
- [Bump actions/setup-java from 3.1.0 to 3.1.1](https://github.com/bisq-network/bisq/pull/6143)
- [Bump actions/setup-java from 2.5.0 to 3](https://github.com/bisq-network/bisq/pull/6082)


### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.9.1.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.9.1-all.jar
The output need to match the value from the Bisq-1.9.1.jar.txt file.

There are three hashes within the Bisq-1.9.1.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.6 and the v1.9.1 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## API
[API]: #api-documentation
Starting with v1.9.1 you can use pre-built versions of the Bisq cli (bisq-cli-v1.9.1.zip) and Bisq daemon (bisq-daemon-v1.9.1.zip) to use Bisq without touching the user interface.

Just download the archives and extract them locally. You have to run the daemon to access the local Bisq daemon API endpoints.

To run daemon.jar on Mainnet:
```bash
$ java -jar daemon.jar --apiPassword=becareful
```

If you just want to control your headless daemon within your terminal you have to run the Bisq cli as well.

Again just download the bisq-cli archive and extract it locally.

To call getversion from cli.jar
```bash
$ java -jar cli.jar --password=becareful getversion
```

You can use the Bisq API to access local Bisq daemon API endpoints, which provide a subset of the Bisq Desktop application's feature set: check balances, transfer BTC and BSQ, create payment accounts, view offers, create and take offers, and execute trades.

The Bisq API is based on the gRPC framework, and any supported gRPC language binding can be used to call Bisq API endpoints.

You'll find in-depth documentation and examples under following link: https://bisq-network.github.io/slate/#introduction

Bisq gRPC API reference documentation example source code is hosted on GitHub at https://github.com/bisq-network/bisq-api-reference. Java and Python developers interested in bot development may find this Intellij project useful for running the existing examples, and writing their own bots.

For additional developer support please join [Development - Bisq v1](https://matrix.to/#/%23bisq.dev:bitcoin.kyoto) on Matrix.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.9.1.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @Devils-Knight 
- @ghubstan
- @jmacxx 
- @MarnixCroes 
- @ripcurlx 
- @xyzmaker123 

A special thanks to our first time contributors:
  - @Devils-Knight : [Fix permissions for build.yml](https://github.com/bisq-network/bisq/pull/6083)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.9.1</title>
    <updated>2022-05-05T07:20:39Z</updated>
    <dc:date>2022-05-05T07:20:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.7</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.7"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#097-apr-30-2022</summary>
    <title>romanz/electrs: v0.9.7</title>
    <updated>2022-04-30T17:48:44Z</updated>
    <dc:date>2022-04-30T17:48:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.1"/>
    <summary>### Bug fixes:

* Do not show balance if can't get the balance (#3695) @NicolasDorier
* Fix performance issue on dashboard for big wallets (#3694) @NicolasDorier
* Do not crash if /apps/{appId} do not exists @NicolasDorier

### Improvements:

* Remove logs about pending invoices @NicolasDorier
* Add missing swagger doc for auto approval of payouts @Kukks
</summary>
    <title>btcpayserver/btcpayserver: v1.5.1</title>
    <updated>2022-04-30T04:12:32Z</updated>
    <dc:date>2022-04-30T04:12:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.0</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.5.0"/>
    <summary>### New features:
* DASHBOARD!!! (#3530 #3629 #3631 #3654) @NicolasDorier @dennisreimann @dstrukt
* Payout Processors (#3476) @Kukks
* Allow pull payments, refunds to be automatically approved (#1851  #3682) @Kukks
* Greenfield: Add transaction info for on chain wallet (#3561) @bolatovumar
* Greenfield: Add label filter for on chain wallet transaction (#3588) @bolatovumar
* Greenfield: Add lightning payment info (#3557) @dennisreimann
* Greenfield: Add description hash to CreateLightningInvoiceRequest (#3559) @dennisreimann
* Allow Users to be disabled/enabled (#3639) @Kukks
### Bug fixes:
* Various UI fixes (#3599 #3577 #3624 #3642) @leesalminen @bolatovumar @dafunction @dennisreimann
* Fix bug when bumping fee (#3608) @bolatovumar
* Fix bug around Pay button html generator (#3646) @dennisreimann
* Fix Lightning addresses not being deleted after removing store (#3638) @Kukks
* Fix payment request redirect url (#3672 #3673) @dennisreimann
### Improvements
* Add additional rate providers as supported from CoinGecko @NicolasDorier
* Allow default payment method for Pay button (#3606) @bolatovumar
* Link directly to services from Lightning wallet page (#3593) @dennisreimann
* Use the store's default currency when creating entities (#3585) @dennisreimann
* Specify PayJoin enabled in Payment Link heading (#3614) @orangesurf
* LNURL: Use Lightning description template in LNURL metadata (#3667) @dennisreimann
* Design updates (#3647 #3653 #3565) @dennisreimann @dstrukt
* Hide empty plugins section (#3643) @dennisreimann</summary>
    <title>btcpayserver/btcpayserver: v1.5.0</title>
    <updated>2022-04-29T11:02:07Z</updated>
    <dc:date>2022-04-29T11:02:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.4</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.4"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/Specter-Setup-v1.9.4.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/Specter-v1.9.4.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/specter_desktop-v1.9.4-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/specterd-v1.9.4-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/specterd-v1.9.4-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/specterd-v1.9.4-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.4/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Bugfix: better error-management for seed words which language is not detected #1660 (Kim Neunert)
- Bugfix: i18n issue preventing historical proces to work in edge cases #1664 (Kim Neunert)
- Docs: Architectural Notes #1673 (Kim Neunert)
- Docs: Fix exta / in url in service.md #1659 (Brendan Murphy)
- UIUX: Overhaul of UTXO list, handling of locked UTXOs and scrollbar added to tx-table web component #1580 (Manolis)
- Chore: Bump electron from 11.5.0 to 13.6.9 #1647 (Kim Neunert)
- Chore: Bump async from 3.2.0 to 3.2.3 #1674 (dependabot[bot])
- Chore: Bump minimist from 1.2.5 to 1.2.6 in /pyinstaller/electron #1637 (dependabot[bot])
- Chore: Updating cypress from 7.1.0 to 9.5.4  #1672 #1676 (Kim Neunert)
- Chore: upgrade flask (and others) from 1.1.4 to 2.1.1 #1666 (Kim Neunert)
</summary>
    <title>cryptoadvance/specter-desktop: v1.9.4</title>
    <updated>2022-04-28T11:55:21Z</updated>
    <dc:date>2022-04-28T11:55:21Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/lightning/releases/tag/v0.11.0.1</id>
    <link href="https://github.com/ElementsProject/lightning/releases/tag/v0.11.0.1"/>
    <summary>We're pleased to announce the 0.11.0 release of c-lightning, named on behalf of @SimonVrouwe.

This release is the first under the rebranded &quot;Core Lightning&quot; name.
(Note: binaries are labelled v0.11.0.1 due to a minor bugfix required for reproducible builds).

## Highlights for Users

* We now finally support multiple live channels to the same peer!
* If we detect rust support, we'll build the `cln-grpc` plugin for full native GRPC support.
* We advertize an external IP address if it's reported by two or more peers (`disable-ip-discovery` or `always-use-proxy` disables).
* You can specify two databases with --wallet, and we'll write to both at once (sqlite3 only).
* `pay` supports BOLT 11 payment metadata: we'll send it if it's in the invoice.
* New `setchannel` command (deprecates `setchannelfee`) allows setting max and min HTLC amounts.  Try `lightning-cli setchannel all 0` for #zerobasefee.
* `pay` can be forced to exclude channels or nodes with the `exclude` 
* Significant speedup in start times for old nodes with many historical HTLCs.

# Highlights for the Network

* We send the remote node's IP address in the `init` message, so they can tell what it is. (https://github.com/lightning/bolts/pull/917)
* We are more aggressive in sending our own gossip to peers, to help propagation.
* Default port is set by network, so regtest and testnet defaults are different. (https://github.com/lightning/bolts/pull/968)
* We never generate legacy onions, it's always TLV.  We still forward legacy onions for now.
* We flush sockets before closing, so errors are more likely to reach the peer.
* Experimental support for announcing DNS addresses in node_announcement (https://github.com/lightning/bolts/pull/911)

 
# Highlights for Developers

* `pay` has a `maxfee` parameter, which sets a simple LND-style upper fee (vs using `maxfeepercent` and `exemptfee`)
* You can create invoices with only a description hash, using `deschashonly`.  We still store the full description, so use restraint!
* `pay` has deprecated paying solely by description hash: you should provide the full description, too.
* `delinvoice` has a new `desconly` parameter to simply trim the descriptions, but leave the rest intact.
* We have a rust crate `cln-rpc` to easily interact with our JSON-RPC.
* `msggen` tool allows easy generation of language bindings for our JSON RPC interface.

More details can be found in the changelog.

Thanks to everyone for their contributions and bug reports; please keep them coming.

Since 0.10.2, we've had 712 commits from 37 different authors over 170 days.

A special thanks goes to the 18 first time contributors (a new record!):

* Aaron Dewes
* Tim W
* manreo
* Gregory Sanders
* zero fee routing
* Stephen Webel
* Michael Dance
* Marnix
* lightning-developer
* kiwiidb
* Jules Comte
* JohnOnGit
* GoofyAF
* Denis Ahrens
* Clay Shoaf
* benthecarman
* azuchi
* Anand Suresh

Cheers,
Christian, Rusty, Lisa.</summary>
    <title>ElementsProject/lightning: v0.11.0.1</title>
    <updated>2022-04-26T21:48:40Z</updated>
    <dc:date>2022-04-26T21:48:40Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin/bitcoin/releases/tag/v23.0</id>
    <link href="https://github.com/bitcoin/bitcoin/releases/tag/v23.0"/>
    <summary>Bitcoin Core version 23.0 is now available from:

https://bitcoincore.org/bin/bitcoin-core-23.0/

For the release notes please see the git repository:

https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-23.0.md

Do not use the links provided by GitHub, rather use the above download links, they are guaranteed to be generated deterministically and signed.</summary>
    <title>bitcoin/bitcoin: v23.0</title>
    <updated>2022-04-25T14:17:32Z</updated>
    <dc:date>2022-04-25T14:17:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.14.3-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.14.3-beta"/>
    <summary>This is the third, and final (?) minor release of the v0.14.x series! This release contains only a series of bug fixes, and doesn't introduce any backwards compatible changes (database migrations, etc) from the prior version. Notable fixes in this release include: a fix to an invoice registry related deadlock, a fix for an edge case when running the remote signer operating mode, and a fix to ensure that 3rd parties sweeping an anchor UTXO doesn't lead to the wallet having a fragmented internal UTXO state, and a fix for a payment state inconsistency (a payment looks like it was stuck though no HTLCs exist).


# Database Migrations
This release contains no database migrations. 

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.14.3-beta.sig` and `manifest-v0.14.3-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.14.3-beta.sig manifest-v0.14.3-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Mon Apr 18 13:26:47 2022 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.14.3-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.14.3-beta.sig.ots -f manifest-roasbeef-v0.14.3-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.17.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.14.3-beta
gpg: Signature made Mon Apr 18 11:15:09 2022 PDT
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.14.3-beta /verify-install.sh v0.14.3-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.14.3-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.14.3-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.3-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.3-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

# Release Notes

The release notes can be found here: https://github.com/lightningnetwork/lnd/blob/v0.14.3-beta/docs/release-notes/release-notes-0.14.3.md</summary>
    <title>lightningnetwork/lnd: v0.14.3-beta</title>
    <updated>2022-04-19T14:49:22Z</updated>
    <dc:date>2022-04-19T14:49:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.1</id>
    <link href="https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.1"/>
    <summary># 1.9.1

This release is backwards compatible with the 1.9.0 release of bitcoin-s

See the individual module sections for more information on lower level updates to the codebase.

A major developer UX improvement we had since this release is the ability for a developer to spin up a docker environment for the DLC wallet easily. [See instructions here](https://github.com/bitcoin-s/bitcoin-s/#docker)

If you are a typescript developer, [you can access the backend via our typescript library](https://github.com/bitcoin-s/bitcoin-s-ts)

## Running bitcoin-s

If you want to run the standalone server binary, after verifying gpg signatures, you
can `unzip bitcoin-s-server-1.9.1.zip` and then run it with `chmod +x ./bin/bitcoin-s-server &amp;&amp; ./bin/bitcoin-s-server` to start the node. You will need to
configure the node properly first, you can find example
configurations [here](https://bitcoin-s.org/docs/config/configuration#example-configuration-file).

You can then unzip the `bitcoin-s-cli-1.9.1.zip` folder and start using the `bitcoin-s-cli` like this:

```bashrc
./bin/bitcoin-s-cli --help
Usage: bitcoin-s-cli [options] [&lt;cmd&gt;]

  -n, --network &lt;value&gt;    Select the active network.
  --debug                  Print debugging information
  --rpcport &lt;value&gt;        The port to send our rpc request to on the server
  -h, --help               Display this help message and exit
```

For more information on what commands `bitcoin-s-cli` supports check the documentation, here is where to
start: https://bitcoin-s.org/docs/next/applications/server#server-endpoints

## Verifying signatures

This release is signed with [Chris's signing key](https://bitcoin-s.org/docs/next/security#disclosure) with
fingerprint `9234F4D6AF47C71B741A390F8976CA0AF71A7A2A`

To do the verification, first hash the executable using `sha256sum`. You should check that the result is listed in
the `SHA256SUMS.asc` file next to its file name. After doing that you can use `gpg --verify` to authenticate the
signature.

Example:

```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
gpg: Signature made Mon 18 Apr 2022 02:19:54 PM CDT
gpg:                using RSA key 9234F4D6AF47C71B741A390F8976CA0AF71A7A2A
gpg: Good signature from &quot;Chris Stewart &lt;stewart.chris1234@gmail.com&gt;&quot; [ultimate]

$ sha256sum -c SHA256SUMS.stripped                                                                                            
bitcoin-s_1.9.1-1_amd64.deb: OK
bitcoin-s-1.9.1.dmg: OK
bitcoin-s-bundle.msi: OK
bitcoin-s-cli-x86_64-apple-darwin: OK
bitcoin-s-cli-x86_64-pc-linux: OK
bitcoin-s-server-1.9.1.zip: OK

```

### Website

https://bitcoin-s.org/

### Releases

https://repo1.maven.org/maven2/org/bitcoin-s/

### Snapshot releases

https://oss.sonatype.org/content/repositories/snapshots/org/bitcoin-s/

# Executive Summary

- Implements `sendoffer` so you now can send a DLC offer to a peer
- Implements the DLC mailbox to allow aggregation of messages such as `sendoffer` from your peer
- Allow DLC payouts to an external address not in the bitcoin-s wallet
- Only sync compact filters since wallet's creation time. This reduces IBD significantly and saves 13GB in disk space.
- Improving the windows installation experience

## app commons

6e87eb1480 Offer.offerCollateralSatoshis to offerCollateral (#4148)
1bab51c1c6 Adjust appconfig logging to INFO (#4139)

## App server

The major feature this release is adding mempool support when bitcoind is as a backend. Now our wallet
will be informed of transactions relevant to the wallet that are in the mempool.

This release also reworks the label APIs in the wallet to make them easier to use.

Finally we expose the `offer-send` RPC so you can progmatically send an offer to another DLC wallet.

ff8f44282b Reduce parallelism to 4 (#4259)
10157d108f Reduce parallelism when fetches txs in mempool for bitcoind backend (#4257)
1bc3962cfb Async mempool processing (#4245)
4b96407408 Add a Tx callback for Bitcoin Core backend (#4243)
00bce5adae Fix peer configuration for docker-compose (#4225)
0770fe0550 Mempool support for the bitcoind RPC client (#4196)
73fe4099f9 Renable tor configuration by default (#4179)
668ab21ca1 2022 03 09 label refactor (#4175)
aeb3169884 `getdlcoffer` RPC (#4166)
56d0ae68ad `offer-send` RPC (#4153)
6b7058af4a Add the temporaryContractId field to the json rpc response for offers (#4146)
c315dce05b Add jdk version to log (#4142)
b86d4e492c Allow both lnmessage and raw tlv to be sent over rpc for acceptdlc (#4140)
44b2ca3c3d Improve validation error messages (#4141)

## bitcoind rpc

3c2ecd555f Make better error message when you cannot connect to bitcoind (#4200)

## bundle

bd7f35e9ed Set both bitcoin-s.proxy.enabled and bitcoin-s.tor.enabled in bitcoin-s-bundle.conf (#4194)

## Build

52bb6f6daf Update docker-compose.yml (#4218)
715639033c Support for Tor Docker (#4223)
b8539bf68c Upgrade sbt to 1.6.2 (#4187)
23f359821f 2022 03 08 Publish zip as part of `release.yml` (#4174)
30226219e6 2022 03 01 static wix upgrade product code (#4149)
8d47f804d9 Update previous stable version to 1.9.0 (#4143)
54e18e6a8d Update docker image to jdk 17 (#4128)
96d11163a6 Bump heap size on ci-release (#4118)
16f3da7ee0 Update setup scala action to v13 (#4113)
e98b2c6caa Update release.yml to use openjdk@1.17.0 (#4115)
eddcc94b03 Upgrade CI jdks to openjdk@1.17.0 (#4114)

## Core

Small bug fixes and renames this release for `core`.

07209ce670 2022 04 14 dlctxsigner err msg (#4262)
0a092e4e03 Add fromString for TransactionOutPoint (#4261)
f2fa56221d 2022 03 31 collateral invariant (#4232)
d5807daeab Remove SpendingInfoDb.txid parameter (#4199)
8d2a749df6 Rename WitnessScriptPubKeyV1 -&gt; TaprootScriptPubKey (#4198)
c379cf4a73 Round Bitcoins to nearest Satoshi (#4154)
5e9be9d69e Fix hardened serialization (#4160)
c3300aec52 2022 03 03 hdpath fromstring factory exn (#4159)
d1fc32758b Fix tempContractId hash so we include LnMessage() bytes (#4150)
528e7c8f0e Remove TxoState.DoesNotExist (#4108)
f657510d80 Remove invoice max amount limit (#4104)

## DLC node

The major feature this release is the offer inbox. This allows a counterparty to send you
and offer for a DLC. Next time you open up your wallet, you can see offers that were sent to you
and decide to accept them or put them in the trash.

c1dccd7831 Offer inbox RPC (#4129)
5aa46be423 Add a warn log if tor is not enabled and we are booting up DLCServer (#4126)
f3c443804b Make DLCDataHandler more type safe (#4123)
34b7d18268 External payout addresses for acceptdlc (#4121)

## DLC wallet

The theme for this release was making database operations transactional to avoid corrupt wallet states.

We also included a new state for computing adaptor signatures. This can take signficant time on low resource
devices such as a raspberry pi. The new state `AdaptorSigComputationState` can now be used by UI developers
to signal to the user their DLC is in progress, specifically computing signatures.

The last feature is adding the ability to specify external payout addresses for a wallet to receive DLC payouts.
We plan on using this at Bitcoin 2022 in Miami to allow for users to receive payouts from a esports gaming DLC.

717533baec Make first set of database writes in signDLC be transactional (#4264)
37da24b94b Add SignDbState to fix rescan exception (#4246)
a2587677c3 Use upsert rather than create in dlcsign in case we have seen the inputs before (#4248)
30a061e549 Use upsert rather than create as offers can use the same outpoints if negotiation fails for some reason (#4247)
ddabc91294 2022 04 02 fix walletdlcsetup test (#4237)
b5bfcbc009 Increase amount so test fails more consistently (#4233)
8081772b57 Allow acceptor to upsert same outpoint multiple times for different offers (#4230)
5eabe7640f Don't send websocket events for DLCs while rescanning the wallet (#4222)
faac871db6 Make buildCreateOfferAction upsert funding inputs rather than insert (#4186)
3f18f7b04c Only allow executing a DLC if it is in the Broadcast or Confirmed state (#4185)
a747f84bbb Mark extarnal payout addresses (#4173)
37611ddea1 Move all initialization of accept into initDLCForAccept() (#4162)
0bb0d9acdb Add AdaptorSigComputation states to states that a DLC can be cancelled in (#4158)
ee98aa1d30 Increase offer message size (#4136)
ffd7d921a8 Database support for incoming offers (#4105)
5777ec1c31 Add an ability to set custom payout and change addresses (#4101)

## gui

ec384a8b39 2022 03 05 rescan gui (#4170)
8f02ebce10 2022 02 26 dynamic fee gui (#4135)

## keymanager

8e3b8c1f4f Improve key manager error message (#4161)
5113cac6c2 Log root xpub on keymanager startup (#4157)

## Lnd rpc

5c9d64647e Add PSBT functions for LND (#4124)
cff0e84440 Fix get txs for lnd (#4111)

## node

Only sync compact filters since wallet's creation time. This reduces IBD sigficantly and saves 13GB in disk space.
As a datapoint, for a wallet created in May of 2019 it takes ~50 minutes to do IBD. For a new wallet it takes 30 minutes.

This increases the IBD for a new wallet by 90% giving a much better UX. If you want to sync all compact filters from genesis,
the only way to currently do this is adjusting `creationTime` to be an older timestamp inside of the seed file found at
`$HOME/.bitcoin-s/seeds/encrypted-bitcoin-s-seed.json` by default.

22051d2550 Bumps user agent to 1.9.1 (#4226)
b46574c0c4 2022 02 18 sync since creationtime pt2 (#4109)

## wallet


27cb4a3c20 Add height to log message when processing block (#4251)
7c1c572081 Rescan failure logging (#4250)
24125eaca3 Fix case where we broadcast tx with a tag, and then also add the tag when we receive the tx in a block (#4239)
33171fd069 Use the set of addresses in the wallet when rescanning rather than generating more (#4211)
413dbcacbb Rename clearUtxosAndAddreses(account) -&gt; clearUtxos(account) (#4206)
5475a994cf Bump default address gap limit to 100, add log indicating we didn't find funds in the last addressBatchSize addresses (#4201)
a3dba47970 Refactor pending receives/spent states into one spot (#4026)
46229d712c Rename `clearAllUtxosAndAddresses()` -&gt; `clearAllUtxos()` (#4193)
ef41cce32d Log entire address path when the address is generated (#4191)
8214c0b931 Add the account to the address generation log (#4190)
c882372c45 Improve process compact filter logs (#4189)
1072078d7c Improve tx processing log to show when we have a relevant input/output to the wallet (#4172)
d63e845de4 Only update wallet's sync height if we don't have a match in processCompactFilter() (#4169)
f1bd0ea3a5 Add log message for the case where we match a script but do not have a matching address in our database (#4156)
4cefa56c99 Add unit test for address creation when we are already watching the script (#4152)
374c1d7b9f Upgrade RescanHandlingTest to use the newest release of bitcoind (#4151)
7a5c2971dd Refactor receive flow to use the same utxo state transitions (#4134)
c069b01e53 2022 02 24 rm prune addresses after rescan (#4130)
3ba95700b2 Add RescanState, make sure we don't start concurrent rescans (#4131)
940c66807e Add log for when a new address is generated (#4127)
e6bf7bd67e Segregate updating received utxos and spent utxos (#4093)

## testkit-core

c11d9ef1fe Fix unit test where coinbase input was sometimes selected (#4165)

## testkit 

5ad5993f1a Refactor WalletAppConfig test fixture destructions to stop the config… (#4266)

## tor

This release improves logging for our tor module.

3136b228fd Log hidden service address (#4212)
fe86233489 Add better tor message to UI (#4181)

## Website

3d86276902 Bump minimist from 1.2.5 to 1.2.6 in /website (#4249)
3a5ae90cc2 Add a section to README.md about running docker-compose up (#4224)
c51db2c57a 2022 03 24 update 1.9.1 release notes (#4213)
702b7cae15 Add instructions for how to use sdkman in getting-setup.md (#4208)
f16167642b Upgrade website dependencies with yarn upgrade (#4204)
049411ccd6 Add note about backing up oracle db (#4197)
b0d7bee008 First draft of 1.9.1 release notes (#4195)
7ddeae66d2 Add web UI build tutorial (#4183)
90ff59c6fe Add The Bitcoin Company to users list (#4177)

## Dependencies

d7f12be1d4 Update scalafx to 17.0.1-R26 (#3874)
666885bc11 Re-add javafx media,graphics dependnecies to fix GUI (#4107)
5b1b1ee149 Remove uneeded javafx deps (#4103)</summary>
    <title>bitcoin-s/bitcoin-s: 1.9.1</title>
    <updated>2022-04-18T17:44:34Z</updated>
    <dc:date>2022-04-18T17:44:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-core/HWI/releases/tag/2.1.0</id>
    <link href="https://github.com/bitcoin-core/HWI/releases/tag/2.1.0"/>
    <summary>Also available on [PyPi](https://pypi.org/project/hwi/2.1.0/) and can be installed with `pip install -U hwi`

# Added

* Blockstream Jade is now supported
* Taproot support
  * Taproot signing support for Trezors and Ledger
  * Taproot PSBT fields
  * `tr()` descriptors and `tap` address type
* Support for Ledger Bitcoin App 2.0. Note that the 2.0 app changes what the Ledger will sign and may break some workflows.
* Trezor multisig change address verification
* `signtx` will return a status indicating whether the PSBT was signed
* Trezor labels will be output in `enumerate`
* PSBTv2 support

# Removed

* For Trezor Ones with firmware 1.10.6 and greater and Trezor Ts with firmware 2.4.4 and greater will not be able to sign transactions containing external inputs

# Fixed

* Keepkeys will no longer also appear as Trezors
* Nonresponse with some Trezors/Keepkeys when sending PIN</summary>
    <title>bitcoin-core/HWI: 2.1.0</title>
    <updated>2022-04-15T21:41:28Z</updated>
    <dc:date>2022-04-15T21:41:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.5</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.5"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.5</title>
    <updated>2022-04-12T18:04:58Z</updated>
    <dc:date>2022-04-12T18:04:58Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.2</id>
    <link href="https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.2"/>
    <summary>Minor compatibility fixes

- #1392 
- #1390 
- #1388 </summary>
    <title>Start9Labs/embassy-os: v0.3.0.2</title>
    <updated>2022-04-12T15:11:43Z</updated>
    <dc:date>2022-04-12T15:11:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.1</id>
    <link href="https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0.1"/>
    <summary>Minor bugfixes and performance improvements.</summary>
    <title>Start9Labs/embassy-os: v0.3.0.1</title>
    <updated>2022-04-07T04:40:20Z</updated>
    <dc:date>2022-04-07T04:40:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.17</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.17"/>
    <summary>This update brings two brand new apps to the Umbrel App Store — Agora and sparkkiosk, along with updated apps and bugfixes.</summary>
    <title>getumbrel/umbrel: v0.4.17</title>
    <updated>2022-04-05T12:02:34Z</updated>
    <dc:date>2022-04-05T12:02:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.2</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.2"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/Specter-Setup-v1.9.2.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/SpecterDesktop-v1.9.2.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/specter_desktop-v1.9.2-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/specterd-v1.9.2-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/specterd-v1.9.2-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/specterd-v1.9.2-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.2/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Bugfix: Tzdata module missing on windows fixes #1653 #1654 (Kim Neunert)
</summary>
    <title>cryptoadvance/specter-desktop: v1.9.2</title>
    <updated>2022-04-04T17:25:39Z</updated>
    <dc:date>2022-04-04T17:25:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.106</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.106"/>
    <summary>## API Updates
 * Minimum supported rust version (MSRV) is now 1.41.1 (#1310).
 * Lightning feature `option_scid_alias` is now supported and may be negotiated
   when opening a channel with a peer. It can be configured via
   `ChannelHandshakeConfig::negotiate_scid_privacy` and is off by default but
   will be on by default in the future (#1351).
 * `OpenChannelRequest` now has a `channel_type` field indicating the features
   the channel will operate with and should be used to filter channels with
   undesirable features (#1351). See the Serialization Compatibility section.
 * `ChannelManager` supports sending and receiving short channel id aliases in
   the `funding_locked` message. These are used when forwarding payments and
   constructing invoice route hints for improved privacy. `ChannelDetails` has a
   `inbound_scid_alias` field and a `get_inbound_payment_scid` method to support
   the latter (#1311).
 * `DefaultRouter` and `find_route` take an additional random seed to improve
   privacy by adding a random CLTV expiry offset to each path's final hop. This
   helps obscure the intended recipient from adversarial intermediate hops
   (#1286). The seed is  also used to randomize candidate paths during route
   selection (#1359).
 * The `lightning-block-sync` crate's `init::synchronize_listeners` method
   interface has been relaxed to support multithreaded environments (#1349).
 * `ChannelManager::create_inbound_payment_for_hash`'s documentation has been
   corrected to remove the one-year restriction on `invoice_expiry_delta_secs`,
   which is only applicable to the deprecated `create_inbound_payment_legacy`
   and `create_inbound_payment_for_hash_legacy` methods (#1341).
 * `Features` mutator methods now take `self` by reference instead of by value
   (#1331).
 * The CLTV of the last hop in a path is now included when comparing against
   `RouteParameters::max_total_cltv_expiry_delta` (#1358).
 * Invoice creation functions in `lightning-invoice` crate's `utils` module
   include versions that accept a description hash instead of only a description
   (#1361).
 * `RoutingMessageHandler::sync_routing_table` has been renamed `peer_connected`
   (#1368).
 * `MessageSendEvent::SendGossipTimestampFilter` has been added to indicate that
   a `gossip_timestamp_filter` should be sent (#1368).
 * `PeerManager` takes an optional `NetAddress` in `new_outbound_connection` and
   `new_inbound_connection`, which is used to report back the remote address to
   the connecting peer in the `init` message (#1326).
 * `ChannelManager::accept_inbound_channel` now takes a `user_channel_id`, which
   is used in a similar manner as in outbound channels. (#1381).
 * `BackgroundProcessor` now persists `NetworkGraph` on a timer and upon
   shutdown as part of a new `Persister` trait, which also includes
   `ChannelManager` persistence (#1376).
 * `ProbabilisticScoringParameters` now has a `base_penalty_msat` option, which
   default to 500 msats. It is applied at each hop to help avoid longer paths
   (#1375).
 * `ProbabilisticScoringParameters::liquidity_penalty_multiplier_msat`'s default
   value is now 40,000 msats instead of 10,000 msats (#1375).
 * The `lightning` crate has a `grind_signatures` feature used to produce
   signatures with low r-values for more predictable transaction weight. This
   feature is on by default (#1388).
 * `ProbabilisticScoringParameters` now has a `amount_penalty_multiplier_msat`
   option, which is used to further penalize large amounts (#1399).
 * `PhantomRouteHints`, `FixedPenaltyScorer`, and `ScoringParameters` now
   implement `Clone` (#1346).

## Bug Fixes
 * Fixed a compilation error in `ProbabilisticScorer` under `--feature=no-std`
   (#1347).
 * Invoice creation functions in `lightning-invoice` crate's `utils` module
   filter invoice hints in order to limit the invoice size (#1325).
 * Fixed a bug where a `funding_locked` message was delayed by a block if the
   funding transaction was confirmed while offline, depending on the ordering
   of `Confirm::transactions_confirmed` calls when brought back online (#1363).
 * Fixed a bug in `NetGraphMsgHandler` where it didn't continue to receive
   gossip messages from peers after initial connection (#1368, #1382).
 * `ChannelManager::timer_tick_occurred` will now timeout a received multi-path
   payment (MPP) after three ticks if not received in full instead of waiting
   until near the HTLC timeout block(#1353).
 * Fixed an issue with `find_route` causing it to be overly aggressive in using
   MPP over channels to the same first hop (#1370).
 * Reduced time spent processing `channel_update` messages by checking
   signatures after checking if no newer messages have already been processed
   (#1380).
 * Fixed a few issues in `find_route` which caused preferring paths with a
   higher cost (#1398).
 * Fixed an issue in `ProbabilisticScorer` where a channel with not enough
   liquidity could still be used when retrying a failed payment if it was on a
   path with an overall lower cost (#1399).

## Serialization Compatibility
 * Channels open with `option_scid_alias` negotiated will be incompatible with
   prior releases (#1351). This may occur in the following cases:
   * Outbound channels when `ChannelHandshakeConfig::negotiate_scid_privacy` is
     enabled.
   * Inbound channels when automatically accepted from an `OpenChannel` message
     with a `channel_type` that has `ChannelTypeFeatures::supports_scid_privacy`
     return true. See `UserConfig::accept_inbound_channels`.
   * Inbound channels when manually accepted from an `OpenChannelRequest` with a
     `channel_type` that has `ChannelTypeFeatures::supports_scid_privacy` return
     true. See `UserConfig::manually_accept_inbound_channels`.

In total, this release features 43 files changed, 4052 insertions, 1274
deletions in 75 commits from 11 authors, in alphabetical order:
 * Devrandom
 * Duncan Dean
 * Elias Rohrer
 * Jeffrey Czyz
 * Jurvis Tan
 * Luiz Parreira
 * Matt Corallo
 * Omar Shamardy
 * Viktor Tigerström
 * dependabot[bot]
 * psycho-pirate</summary>
    <title>lightningdevkit/rust-lightning: v0.0.106</title>
    <updated>2022-04-03T16:35:30Z</updated>
    <dc:date>2022-04-03T16:35:30Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.1</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.1"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/Specter-Setup-v1.9.1.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/SpecterDesktop-v1.9.1.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/specter_desktop-v1.9.1-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/specterd-v1.9.1-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/specterd-v1.9.1-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/specterd-v1.9.1-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.1/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Bugfix: opening non-installed extensions in new window #1650 (Kim Neunert)
- Bugfix: price provider uses wrong user #1640 (Kim Neunert)
- Bugfix: Restore editing of labels #1649 (Kim Neunert)
- Chore: Bump ansi-regex from 4.1.0 to 4.1.1 in /pyinstaller/electron #1643 (dependabot[bot])
- Chore: Bump minimist from 1.2.5 to 1.2.6 #1639 (dependabot[bot])
- Chore: Update elements to 0.21.0.2 #1641 (Kim Neunert)
</summary>
    <title>cryptoadvance/specter-desktop: v1.9.1</title>
    <updated>2022-04-02T19:53:51Z</updated>
    <dc:date>2022-04-02T19:53:51Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits-legend/releases/tag/0.8.0</id>
    <link href="https://github.com/lnbits/lnbits-legend/releases/tag/0.8.0"/>
    <summary>General fixes/improvements, mainly restoring the fee reserve improvements made to the Quart branch.</summary>
    <title>lnbits/lnbits-legend: 0.8.0</title>
    <updated>2022-04-02T00:29:36Z</updated>
    <dc:date>2022-04-02T00:29:36Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.9</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.9"/>
    <summary>### Bug fixes:
* Fix plugin installer @Kukks
* Fix text around shopify settings @pavlenex</summary>
    <title>btcpayserver/btcpayserver: v1.4.9</title>
    <updated>2022-04-01T11:23:57Z</updated>
    <dc:date>2022-04-01T11:23:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.3</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.3"/>
    <summary>- Move account tabs to the left with clearer color hierarchy
- Update BWT for Bitcoin Core v23 compatibility (@shesek)
- Add PDF export of wallet output descriptor from QR display dialog
- Restore collaborative (Stowaway) sends to linked PayNyms
- Support searching for custom PayNyms when initiating collaborative sends
- Use paynym.is onion address when Tor proxy is set
- Always use &quot;Deposit&quot; label for default Account #0 wallet
- Ensure unique Stonewall input txids for entire tx (not just per set)
- Support PSBT Taproot BIP32 derivation field
- Ensure order of unencrypted wallet tabs is retained across app restarts
- Warn if saved certificate file could not be deleted when requested
- Indicate when a server failure occurs when loading a transaction from file or text
- Show an error message if partial signatures do not match the wallet on finalizing a PSBT
- Change show delay duration for help tooltips to 500ms
- Remove earn.com as fee rates source
- Bug fix: Disable BIP47 support for Taproot wallets (for now)
- Bug fix: Omit frozen UTXOs from Soroban collaborations
- Bug fix: Update UTXO tab fiat balances as rates change
- Bug fix: Fix issues updating UTXO chart when mixing
- Bug fix: Ensure wallet rescan occurs when changing the wallet birthday in the transactions table
- Bug fix: Perform signature verification on PSBT inputs only after all have been parsed (required for Taproot signatures)</summary>
    <title>sparrowwallet/sparrow: 1.6.3</title>
    <updated>2022-03-31T13:44:20Z</updated>
    <dc:date>2022-03-31T13:44:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.8</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.8"/>
    <summary>### New features:
* Greenfield: Send email via store (#3181) @woutersamaey @kukks
* Greenfield: Configure store email settings (#3554) @kukks
* Greenfield: Create lightning invoice with description hash (#3559) @dennisreimann

### Bug fixes:
* Fix crash on Wallet send page @bolatovumar
* Various UI fixes (#3519 #3522 #3543 #3553 #3584 #3578) @dennisreimann @bolatovumar @dafunction
* Fix plugin listing error due to Github rate limiting (#3502) @kukks
* Fix shopify integration (#3589) @kukks
* Fix order id in invoices updating (#3521) @woutersamaey
* Fix missing permissions in API keys creation pages @Kukks

### Improvements:
* Various improvements around plugin system @dennisreimann @kukks
* Various tweaks around copy in UI @phershbe @dennisreimann @kukks @pavlenex</summary>
    <title>btcpayserver/btcpayserver: v1.4.8</title>
    <updated>2022-03-31T11:41:00Z</updated>
    <dc:date>2022-03-31T11:41:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.0</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.9.0"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/Specter-Setup-v1.9.0.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/SpecterDesktop-v1.9.0.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/specter_desktop-v1.9.0-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/specterd-v1.9.0-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/specterd-v1.9.0-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/specterd-v1.9.0-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.9.0/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
- Feature: added better scrollbar for all table-style-lists #1598 (relativisticelectron)
- Feature: CLI and a publishing model for extensions #1566 (Kim Neunert)
- Feature: Import of raw transaction #1591 (relativisticelectron)
- Feature: initial devhelper extension #1547 (Kim Neunert)
- Feature: introduction of url-prefixes and defaults #1561 (Kim Neunert)
- UIUX: add Added hover titles #1621 (relativisticelectron)
- UIUX: Add margin under Device type dropdown #1616 (cypherhoodlum)
- UIUX: Adds KYC warning and link to learn more #1560 (kdmukai)
- UIUX: Add two missing titles in the settings bar #1618 (cypherhoodlum)
- UIUX: Placeholder for amount send #1545 (VCBhatawadekar)
- UIUX: Redesign the main page #1620 (cypherhoodlum)
- UIUX: Renaming and static plugin list teasering + refactoring #1569 (Kim Neunert)
- UIUX: Update icon for Passport signing device #1589 (BitcoinQnA)
- Buffix: Electrum PSBT import fixes #1544  #1548 (relativisticelectron)
- Bugfix: App Icon for Gnome Doc #1158 #1592 (salderma)
- Bugfix: Chore - update black to fix linter failure #1642 (Kim Neunert)
- Bugfix: electrum single-sig wallet import #1573 (relativisticelectron)
- Bugfix: Fixed missing vsize in tx.  This led to no available feerate for RBF #1585 (relativisticelectron)
- Bugfix: fixing the logging-system screwup #1578 (Kim Neunert)
- Bugfix: logging error, caused by passing 2 arguments #1576 (relativisticelectron)
- Bugfix: OAuth2_hostname #1579 (Kim Neunert)
- Bugfix: Price data edge-case, fixes #1554 #1624 (Kim Neunert)
- Bugfix: refactor and fix css #1607 (Kim Neunert)
- Bugfix: Release-process #1608 (Kim Neunert)
- Bugfix: Reserving too many addresses at Swan, fix v2; Bugfix: admin change password #1563 (kdmukai)
- Bugfix: TXs in csv and in the UI now get blocktime for time if confirmed fixes #1552  #1559 (Kim Neunert)
- Bugfix: upgrade pyinstaller #1556 (Kim Neunert)
- Bugfix: versionChecker and downloadloc #1633 (Kim Neunert)
- Chore: Build Script improvements #1612 (Kim Neunert)
- Chore: Bump follow-redirects from 1.14.4 to 1.14.7 #1557 (dependabot[bot])
- Chore: Bump follow-redirects from 1.14.7 to 1.14.8 #1590 (dependabot[bot])
- Chore: Migrate to elements v0.21.0.1 #1601 (Kim Neunert)
- Chore: some build-improvements #1603 (Kim Neunert)
- Chore: Service class refactoring #1623 (Kim Neunert)
- Chore: Price Provider and error-management #1551 (Kim Neunert)
- Docs: Changes that didn't make into merge commit for #1591 #1611 (Manolis)
- Docs: Fix various typos and grammatical errors #1606 (Matt Wesley)
- Docs: Update docs/reverse-proxy.md #1587 (GoofyAF)
- Docs: Update daemon.md #1586 (GoofyAF)
</summary>
    <title>cryptoadvance/specter-desktop: v1.9.0</title>
    <updated>2022-03-30T10:17:28Z</updated>
    <dc:date>2022-03-30T10:17:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.22</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.22"/>
    <summary>### Fix wallet creation on some devices

This version fixes an issue on some devices where creating an entry in the keystore would fail, preventing new wallets from being created.

List of commits (filter on phoenix-legacy)

- https://github.com/ACINQ/phoenix/compare/android-legacy-v1.4.21...android-legacy-v1.4.22

## Verifying signatures

You will need `gpg` and our release signing key E434ED292E85643A. Note that you can get it:
- from our website: https://acinq.co/pgp/padioupm.asc
- from github user @pm47, a committer on eclair: https://api.github.com/users/pm47/gpg_keys

To import our signing key:
```
$ gpg --import padioupm.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.22</title>
    <updated>2022-03-25T10:10:39Z</updated>
    <dc:date>2022-03-25T10:10:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rsksmart/rskj/releases/tag/IRIS-3.3.0</id>
    <link href="https://github.com/rsksmart/rskj/releases/tag/IRIS-3.3.0"/>
    <summary>This release contains several enhancements in JSON-RPC interface, Ethereum compatibility fixes and node robustness enhancements. This is a non-comprehensive list of the changes included in this version:

* Fix `web3_sha3` method for non-hex encoded strings in https://github.com/rsksmart/rskj/pull/1637
* JSON-RPC compatibility fixes in https://github.com/rsksmart/rskj/pull/1659
* `eth_getLogs` method performance improvements in https://github.com/rsksmart/rskj/pull/1650
* Mitigated db inconsistency issue after improper node shutdown in https://github.com/rsksmart/rskj/pull/1660
* Enabled fast block propagation mode by default in https://github.com/rsksmart/rskj/pull/1677
* Added tracing options to `debug_traceTransaction` method in https://github.com/rsksmart/rskj/pull/1644

You can find a complete list of the changes introduced in [Iris 3.3.0 milestone](https://github.com/rsksmart/rskj/milestone/28).

SHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):
cce6c949251d1ee6d9ab8bf1d29e026778a846f048a854ca5ef114000b05f079 rskj-core-3.3.0-IRIS-all.jar

</summary>
    <title>rsksmart/rskj: IRIS-3.3.0</title>
    <updated>2022-03-23T18:31:51Z</updated>
    <dc:date>2022-03-23T18:31:51Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.13.1</id>
    <link href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.13.1"/>
    <summary># Summary

This release upgrades the built-in Tor client from v.0.4.5.10 to v0.4.6.9. There are many significant changes, that greatly increase the network stability and performance. The release also contains some rare but annoying crash fix.  Make sure your Tor client is not running in the background so Wasabi can update it - the easiest way is to restart your machine and start the new version of Wasabi. 

- Updated Tor client to [0.4.6.9](https://github.com/zkSNACKs/WalletWasabi/pull/7460).

# Newbie Guide

While setting up Wasabi is straightforward, even a Linux wizard with the longest beard can get stuck on the most basic tasks. Consider taking a look at the [Installation Instructions](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html) guide.

# Advanced Guide

If you want to build Wasabi from source code or update the source code check out [these instructions.](https://docs.wasabiwallet.io/using-wasabi/BuildSource.html)

From version 1.1.3 Wasabi also introduces [reproducible builds](https://reproducible-builds.org/): [Deterministic Build Guide](https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Documentation/Guides/DeterministicBuildGuide.md)

Build with .NET Core 3.1.407-win-x64.

## FAQ

- **Frequently asked questions [here](https://github.com/zkSNACKs/WalletWasabi/discussions/categories/faq).**
- **Requirements?** x64, Linux, &gt;Win10, &gt;macOS 10.13.

# Release Notes

- **Recover from AddressManager file corruption** https://github.com/zkSNACKs/WalletWasabi/pull/6723
- **Minor bugfixes** https://github.com/zkSNACKs/WalletWasabi/pull/4106 https://github.com/zkSNACKs/WalletWasabi/pull/6683
- **Bitcoin Knots to LTS** https://github.com/zkSNACKs/WalletWasabi/pull/7016
- **Major Tor update** https://github.com/zkSNACKs/WalletWasabi/pull/7579</summary>
    <title>zkSNACKs/WalletWasabi: v1.1.13.1</title>
    <updated>2022-03-22T09:21:48Z</updated>
    <dc:date>2022-03-22T09:21:48Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.21</id>
    <link href="https://github.com/ACINQ/phoenix/releases/tag/android-legacy-v1.4.21"/>
    <summary>## Main changes

### Remove send all checkbox

When sending a payment, the &quot;send all&quot; checkbox lets users use all their balance for that payment and forces the app to use the highest possible trampoline fee, which can lead to unintended high fees (especially if the default trampoline fees have been altered by the user). This checkbox has thus been removed until we find a better solution.

- **app**: https://github.com/ACINQ/phoenix/compare/android-legacy-v1.4.20...android-legacy-v1.4.21

## Verifying signatures

You will need `gpg` and our release signing key E434ED292E85643A. Note that you can get it:
- from our website: https://acinq.co/pgp/padioupm.asc
- from github user @pm47, a committer on eclair: https://api.github.com/users/pm47/gpg_keys

To import our signing key:
```
$ gpg --import padioupm.asc
```

To verify the release file checksums and signatures:
```
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```</summary>
    <title>ACINQ/phoenix: android-legacy-v1.4.21</title>
    <updated>2022-03-18T14:00:59Z</updated>
    <dc:date>2022-03-18T14:00:59Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.2</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.2"/>
    <summary>- Support linking and sending directly to payment codes (without paynym.is)
- Automatically label new BIP47 receive addresses to identify incoming BIP47 transactions
- Allow any linked PayNym contact to be renamed (right-click on the contact in the PayNym dialog)
- Add PayNym contacts from the followers list
- Allow mix partner to more easily retry listening if a timeout occurs via a provided link in the dialog
- Label invalid notification transactions and avoid attempting to relink with them
- Identify and color code signatures in transaction hex witness data
- Bug fix: Make db-updater a daemon thread to fix an issue shutting down properly on Windows
- Bug fix: Enable Create Transaction button when sending max payment to a linked PayNym</summary>
    <title>sparrowwallet/sparrow: 1.6.2</title>
    <updated>2022-03-17T13:57:16Z</updated>
    <dc:date>2022-03-17T13:57:16Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.16</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.16"/>
    <summary>This update brings the latest versions of Jam, Krystal Bull, Suredbits Wallet, Bitfeed, LNDg, and Urbit to the Umbrel App Store.</summary>
    <title>getumbrel/umbrel: v0.4.16</title>
    <updated>2022-03-15T12:36:38Z</updated>
    <dc:date>2022-03-15T12:36:38Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.4</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.4"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.4</title>
    <updated>2022-03-10T13:04:25Z</updated>
    <dc:date>2022-03-10T13:04:25Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bisq-network/bisq/releases/tag/v1.8.4</id>
    <link href="https://github.com/bisq-network/bisq/releases/tag/v1.8.4"/>
    <summary>This is a follow-up release that fixes the news badge on `Settings` for existing Bisq users and handles an additional case where the DAO needs resync.

See https://github.com/bisq-network/bisq/milestone/69?closed=1 for more details.

Here are the release notes from v1.8.3:

## Release notes
This release improves privacy by automatically deleting past trade data, improves the UI in many places, and fixes bugs across the board (as always).

### Improvements
- [Clear payment account payload info from closed trades](https://github.com/bisq-network/bisq/pull/6001)
- [Allow dispute to be closed if trade has paid out](https://github.com/bisq-network/bisq/pull/6015)
- [Include penalty for exceeding transfer limits](https://github.com/bisq-network/bisq/pull/5965)
- [Show buyer/seller in terms of BTC](https://github.com/bisq-network/bisq/pull/6049)
- [Show signed payment account status when applicable in Trade &amp; Dispute information screens](https://github.com/bisq-network/bisq/pull/6053)
- [Show proposal transaction ID with explore and copy icons](https://github.com/bisq-network/bisq/pull/5977)
- [Sign/Verify message for DAO bonded roles](https://github.com/bisq-network/bisq/pull/6032)
- [Obtain trade fee settings from filter](https://github.com/bisq-network/bisq/pull/6048)
- [Warn and prompt for password before showing wallet keys](https://github.com/bisq-network/bisq/pull/6021)
- [Add ability to copy popup text to clipboard](https://github.com/bisq-network/bisq/pull/6054)
- [Add support/help links on the UI](https://github.com/bisq-network/bisq/pull/5985)
- [Add filter option to lists](https://github.com/bisq-network/bisq/pull/5963)
- [Improve text and icon colors for disabled offers](https://github.com/bisq-network/bisq/pull/6017)
- [Remove references to Keybase and switch to Matrix](https://github.com/bisq-network/bisq/pull/6005)
- [Improve BSQ swap error messaging &amp; DAO resync popup](https://github.com/bisq-network/bisq/pull/6063)

### Bug fixes
- [Fix exception: heightOfLastBlock must match chainHeight](https://github.com/bisq-network/bisq/pull/6018)
- [Fix issue selecting specific BSQ UTXO for sending BSQ](https://github.com/bisq-network/bisq/pull/6040)
- [Fix error in failed trades view when trade contract is null](https://github.com/bisq-network/bisq/pull/6045)
- [Fix NullPointerException when editing a new payment account](https://github.com/bisq-network/bisq/pull/6058)
- [Fix unhandled exception when locale specifies unknown country/region code.](https://github.com/bisq-network/bisq/pull/6029)
- [Fix column sorting](https://github.com/bisq-network/bisq/pull/6019)
- [Fix sorting on bonded roles view](https://github.com/bisq-network/bisq/pull/6002)
- [Prevent reset offer values after switch to same currency payment account](https://github.com/bisq-network/bisq/pull/5983)
- [Filter out the BSQ swap payment method from dropdown on edit/duplicate offer](https://github.com/bisq-network/bisq/pull/5984)
- [Fix CSV export issue on open offers view](https://github.com/bisq-network/bisq/pull/5991)
- [Enable Tor bridges set in application settings](https://github.com/bisq-network/bisq/pull/5966)
- Get payment method ID from offerPayload: [1](https://github.com/bisq-network/bisq/pull/6072), [2](https://github.com/bisq-network/bisq/pull/6069)
- [Disable roll over popups in combobox item renderers.](https://github.com/bisq-network/bisq/pull/6070)

### Development &amp; Documentation
- API: [Add API `gettrades` method](https://github.com/bisq-network/bisq/pull/5976)
- API: [Fix FeeService NullPointerException](https://github.com/bisq-network/bisq/pull/6052)
- [Update copyright string for Windows](https://github.com/bisq-network/bisq/pull/5998)
- [Update copyright string for macOS](https://github.com/bisq-network/bisq/pull/5997)
- [Cleanup: remove unused classes](https://github.com/bisq-network/bisq/pull/5987)
- [Improve instructions and wording](https://github.com/bisq-network/bisq/pull/5994)
- [Update hostname of BSQ explorer mempool.emzy.de](https://github.com/bisq-network/bisq/pull/5981)

### New Assets
No new assets were added.

## Verification

For a detailed description on how to verify your Bisq installer please have a look at our wiki: https://bisq.wiki/Downloading_and_installing#Verify_installer_file

Url of the signing key (Christoph Atteneder): https://bisq.network/pubkey/29CDFD3B.asc
Full fingerprint: `CB36 D7D2 EBB2 E35D 9B75  500B CD5D C1C5 29CD FD3B`

Import the key:
`curl https://bisq.network/pubkey/29CDFD3B.asc | gpg --import`
GPG prints a confusion warning: &quot;This key is not certified with a trusted signature!&quot; - See https://serverfault.com/questions/569911/how-to-verify-an-imported-gpg-key for background information what it means.

How to verify signatures?
`gpg --digest-algo SHA256 --verify BINARY{.asc*,}`
Replace BINARY with the file you downloaded (e.g. Bisq-1.8.4.dmg)

Verify jar file inside binary:
You can verify on OSX the jar file with:
shasum -a256 [PATH TO BISQ APP]/Bisq.app/Contents/app/desktop-1.8.4-all.jar
The output need to match the value from the Bisq-1.8.4.jar.txt file.

There are three hashes within the Bisq-1.8.4.jar.txt file (macOS, Windows, Linux).
If you want to reproduce and verify the hash of the jar file locally, you need to do so on Windows or Linux using Java 15.0.5 and the v1.8.4 release tag. Because of the signing and notarization process that requires the developer certificate used for the build on macOS it is not possible to create the same jar on macOS.

## Known issues with installation 

### Windows:

There is a known issue with Anti Virus software. We got several reports from users running into different problems. Either the AV software blocks Bisq or Tor, delete files in the data directory [2] or app directory [1]) or cause such a long delay at startup that Tor gets terminated and a file remains locked which can cause that Bisq cannot be started afterwards. To resolve that you need to restart Windows then the lock get released. We are working on solutions to fix those issues.

If you use Crypto currencies on your Windows system be aware that Windows is much more vulnerable to malware than Linux or OSX. Consider to use a dedicated non-Windows system when dealing with cryptocurrencies.

[1] Application directory (contains application installation files):
C:\Users\&lt;username&gt;\AppData\Local\Bisq

[2] Data directory (contains all Bisq data including wallet):
C:\Users\&lt;username&gt;\AppData\Roaming\Bisq\btc_mainnet\tor (you can delete everything except the hiddenservice directory)


### Linux:

Hint for Debian users:
If you have problems starting Bisq on Debian use: `/opt/bisq/bin/Bisq`

If your Linux distro does not support .deb files please follow this instruction:
```
cd ~/Downloads  
mkdir tmp  
cd tmp   
ar x ../Bisq-64bit-1.8.4.deb  
sudo tar Jxvf data.tar.xz  
sudo cp -rp opt/Bisq /opt/
```
That instruction is not tested on many different distros. If you encounter problems please report it in a Github issue so we can improve it. 

## Credits

Thanks to everyone who directly contributed to this release:

- @Emzy
- @ghubstan
- @jmacxx 
- @MarnixCroes 
- @MwithM 
- @ripcurlx 
- @sqrrm 
- @w0000000t 
- @wiz 
- @xyzmaker123 

A special thanks to our first time contributors:
  - @MarnixCroes: [Update Apple plist copyright notice](https://github.com/bisq-network/bisq/pull/5997)

As well as to everyone that helped with translations on [Transifex](https://transifex.com/bisq/bisq-desktop).</summary>
    <title>bisq-network/bisq: v1.8.4</title>
    <updated>2022-03-08T10:37:06Z</updated>
    <dc:date>2022-03-08T10:37:06Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.1</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.1"/>
    <summary>- Add PayNym Addresses dialog to view linked PayNym addresses (Addresses tab)
- Roll back to preferring IPv4 over IPv6 addresses
- Bug fix: Fix issue where BIP47 addresses that were sent to did not get history updates
- Bug fix: Update optimization buttons after Max button pressed
- Bug fix: Fix regression with expanded transaction diagram dark theme background</summary>
    <title>sparrowwallet/sparrow: 1.6.1</title>
    <updated>2022-03-04T13:22:07Z</updated>
    <dc:date>2022-03-04T13:22:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.6</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.6"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#096-mar-4-2022</summary>
    <title>romanz/electrs: v0.9.6</title>
    <updated>2022-03-04T07:56:34Z</updated>
    <dc:date>2022-03-04T07:56:34Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0.2</id>
    <link href="https://github.com/ElementsProject/elements/releases/tag/elements-0.21.0.2"/>
    <summary>Changelog:  

- raise max P2P message size to account for larger elements dynafed headers
- remove block from in-flight list when a duplicate is received through RPC</summary>
    <title>ElementsProject/elements: elements-0.21.0.2</title>
    <updated>2022-03-03T14:05:07Z</updated>
    <dc:date>2022-03-03T14:05:07Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.6.0</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.6.0"/>
    <summary>- Implement BIP47 - linking, sending to and receiving from PayNyms on Legacy, Nested Segwit and Segwit addresses
- Introduce nested wallet support to allow BIP47 wallets to contribute to the first (master) wallet
- Add BIP39 option to File &gt; Import Wallet dialog, discovering any existing wallets using common script types and derivations
- Improve label handling by detaching and storing labels before a wallet refresh, and labelling matching entries from this store as the wallet is updated
- Buffer address history update notifications to perform fewer wallet history refreshes
- Improved IPv6 handling on NAT64 networks
- Use smaller, shared stage icon to reduce memory usage
- Add link to Server Preferences in status bar on connection failure
- Add SeedSigner to File &gt; Import Wallet dialog
- Bug fix: Fix expanding grey area in Transaction viewer when increasing hex area height
- Bug fix: Add border to undecorated stages on Windows
- Bug fix: Mixing UTXOs should reflect in Send Selected total on UTXOs tab
- Bug fix: Fix resolution of mDNS (.local) hostnames when connecting to Bitcoin Core
- Bug fix: Prevent wallet response updates while Whirlpool is starting to avoid empty UTXO mix queue</summary>
    <title>sparrowwallet/sparrow: 1.6.0</title>
    <updated>2022-03-03T13:17:27Z</updated>
    <dc:date>2022-03-03T13:17:27Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.7</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.7"/>
    <summary>### New features:

* Plugins: Expose file service @Kukks
* Plugins: Allow writing Greenfield API endpoints (#3495) @dennisreimann

### Bug fixes:
* Fix Shopify configuration UI due to shopify changes (#3479) @Kukks
* Various fixes related to store context (#3505) @dennisreimann @Kukks
* Various fixes related to plugin system @dennisreimann @Kukks
* Add missing documentation for wallet generation Greenfield API @Kukks
* Fix broken modal views on mobile (#3504) @dennisreimann
* Custom amount option in point of sale print view was not showing  (#3503) @Kukks
* Fix code copying buttons (#3489 #3499) @dennisreimann @bolatovumar
* Various UI fixes @dennisreimann @bolatovumar
</summary>
    <title>btcpayserver/btcpayserver: v1.4.7</title>
    <updated>2022-03-02T12:03:44Z</updated>
    <dc:date>2022-03-02T12:03:44Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.15</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.15"/>
    <summary>This update brings three brand new apps to the Umbrel App Store — Jam (JoinMarket UI), Snowflake Tor Proxy, and Bleskomat Server, along with updated apps and bugfixes.</summary>
    <title>getumbrel/umbrel: v0.4.15</title>
    <updated>2022-03-01T14:07:30Z</updated>
    <dc:date>2022-03-01T14:07:30Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0</id>
    <link href="https://github.com/Start9Labs/embassy-os/releases/tag/v0.3.0"/>
    <summary>- Websockets
	- Real-time sync
- Patch DB
	- Closely mirror FE and BE state. Most operating systems are connected to their GUI. Here it is served over the web. Patch DB and websockets serve to close the perceptual gap of this inherent challenge.
- Switch base OS from 32bit Raspbian to 64bit Raspberry Pi OS
- Merging of lifeline, agent, and appmgr into embassyd
	- Elimination of Haskell in favor of pure Rust
	- Unified API for interacting with the OS
	- Easier to build from source
- OS (quarantined from OS and service data)
	- Kernel/boot
	- Persistent metadata (disk guid, product key)
	- Rootfs (the os)
	- Reserved (for updates) - swaps with rootfs
- Revamped OS updates
	- Progress indicators
	- Non-blocking
	- Simple swap on reboot
- Revamped setup flow
	- Elimination of Setup App (Apple/Google dependencies gone)
	- Setup Wizard on http://embassy.local
- Revamped service config
	- Dynamic, validated forms
- Diagnostic UI
	- Missing disk, wrong disk, corrupt disk
- Turing complete API for actions, backup/restore, config, properties, notifications, health checks, and dependency requirements
- Optional, arbitrary inputs for actions
- Install, update, recover progress for apps
- Multiple interfaces
	- E.g. rpc, p2p, ui
- Health checks
	- Developer defined
	- Internal, dependencies, and/or external
- Full Embassy backup (diff-based)
- External drive support/requirement
	- Single at first
	- Groundwork for extension and mirror drives
- Disk encryption
	- Random key encrypted with static value
	- Groundwork for swapping static value with chosen password
- Session Management
	- List all active sessions
	- Option to kill
- More robust and extensive logs
- Donations</summary>
    <title>Start9Labs/embassy-os: v0.3.0</title>
    <updated>2022-03-01T05:45:37Z</updated>
    <dc:date>2022-03-01T05:45:37Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.105</id>
    <link href="https://github.com/lightningdevkit/rust-lightning/releases/tag/v0.0.105"/>
    <summary>## API Updates
 * `Phantom node` payments are now supported, allowing receipt of a payment on
   any one of multiple nodes without any coordination across the nodes being
   required. See the new `PhantomKeysManager`'s docs for more, as well as
   requirements on `KeysInterface::get_inbound_payment_key_material` and
   `lightning_invoice::utils::create_phantom_invoice` (#1199).
 * In order to support phantom node payments, several `KeysInterface` methods
   now accept a `Recipient` parameter to select between the local `node_id` and
   a phantom-specific one.
 * `ProbabilisticScorer`, a `Score` based on learning the current balances of
   channels in the network, was added. It attempts to better capture payment
   success probability than the existing `Scorer`, though may underperform on
   nodes with low payment volume. We welcome feedback on performance (#1227).
 * `Score::channel_penalty_msat` now always takes the channel value, instead of
   an `Option` (#1227).
 * `UserConfig::manually_accept_inbound_channels` was added which, when set,
   generates a new `Event::OpenChannelRequest`, which allows manual acceptance
   or rejection of incoming channels on a per-channel basis (#1281).
 * `Payee` has been renamed to `PaymentParameters` (#1271).
 * `PaymentParameters` now has a `max_total_cltv_expiry_delta` field. This
   defaults to 1008 and limits the maximum amount of time an HTLC can be pending
   before it will either fail or be claimed (#1234).
 * The `lightning-invoice` crate now supports no-std environments. This required
   numerous API changes around timestamp handling and std+no-std versions of
   several methods that previously assumed knowledge of the time (#1223, #1230).
 * `lightning-invoice` now supports parsing invoices with expiry times of more
   than one year. This required changing the semantics of `ExpiryTime` (#1273).
 * The `CounterpartyCommitmentSecrets` is now public, allowing external uses of
   the `BOLT 3` secret storage scheme (#1299).
 * Several `Sign` methods now receive HTLC preimages as proof of state
   transition, see new documentation for more (#1251).
 * `KeysInterface::sign_invoice` now provides the HRP and other invoice data
   separately to make it simpler for external signers to parse (#1272).
 * `Sign::sign_channel_announcement` now returns both the node's signature and
   the per-channel signature. `InMemorySigner` now requires the node's secret
   key in order to implement this (#1179).
 * `ChannelManager` deserialization will now fail if the `KeysInterface` used
   has a different `node_id` than the `ChannelManager` expects (#1250).
 * A new `ErrorAction` variant was added to send `warning` messages (#1013).
 * Several references to `chain::Listen` objects in `lightning-block-sync` no
   longer require a mutable reference (#1304).

## Bug Fixes
 * Fixed a regression introduced in 0.0.104 where `ChannelManager`'s internal
   locks could have an order violation leading to a deadlock (#1238).
 * Fixed cases where slow code (including user I/O) could cause us to
   disconnect peers with ping timeouts in `BackgroundProcessor` (#1269).
 * Now persist the `ChannelManager` prior to `BackgroundProcessor` stopping,
   preventing race conditions where channels are closed on startup even with a
   clean shutdown. This requires that users stop network processing and
   disconnect peers prior to `BackgroundProcessor` shutdown (#1253).
 * Fields in `ChannelHandshakeLimits` provided via the `override_config` to
   `create_channel` are now applied instead of the default config (#1292).
 * Fixed the generation of documentation on docs.rs to include API surfaces
   which are hidden behind feature flags (#1303).
 * Added the `channel_type` field to `accept_channel` messages we send, which
   may avoid some future compatibility issues with other nodes (#1314).
 * Fixed a bug where, if a previous LDK run using `lightning-persister` crashed
   while persisting updated data, we may have failed to initialize (#1332).
 * Fixed a rare bug where having both pending inbound and outbound HTLCs on a
   just-opened inbound channel could cause `ChannelDetails::balance_msat` to
   underflow and be reported as large, or cause panics in debug mode (#1268).
 * Moved more instances of verbose gossip logging from the `Trace` level to the
   `Gossip` level (#1220).
 * Delayed `announcement_signatures` until the channel has six confirmations,
   slightly improving propagation of channel announcements (#1179).
 * Several fixes in script and transaction weight calculations when anchor
   outputs are enabled (#1229).

## Serialization Compatibility
 * Using `ChannelManager` data written by versions prior to 0.0.105 will result
   in preimages for HTLCs that were pending at startup to be missing in calls
   to `KeysInterface` methods (#1251).
 * Any phantom invoice payments received on a node that is not upgraded to
   0.0.105 will fail with an &quot;unknown channel&quot; error. Further, downgrading to
   0.0.104 or before and then upgrading again will invalidate existing phantom
   SCIDs which may be included in invoices (#1199).

## Security
0.0.105 fixes two denial-of-service vulnerabilities which may be reachable from
untrusted input in certain application designs.

 * Route calculation spuriously panics when a routing decision is made for a
   path where the second-to-last hop is a private channel, included due to a
   multi-hop route hint in an invoice.
 * `ChannelMonitor::get_claimable_balances` spuriously panics in some scenarios
   when the LDK application's local commitment transaction is confirmed while
   HTLCs are still pending resolution.

In total, this release features 109 files changed, 7270 insertions, 2131
deletions in 108 commits from 15 authors, in alphabetical order:
 * Conor Okus
 * Devrandom
 * Elias Rohrer
 * Jeffrey Czyz
 * Jurvis Tan
 * Ken Sedgwick
 * Matt Corallo
 * Naveen
 * Tibo-lg
 * Valentine Wallace
 * Viktor Tigerström
 * dependabot[bot]
 * hackerrdave
 * naveen
 * vss96
</summary>
    <title>lightningdevkit/rust-lightning: v0.0.105</title>
    <updated>2022-03-01T04:15:52Z</updated>
    <dc:date>2022-03-01T04:15:52Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.3</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.3"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.3</title>
    <updated>2022-02-28T09:06:00Z</updated>
    <dc:date>2022-02-28T09:06:00Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.6</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.6"/>
    <summary>### New features:

* Greenfield: Exposes LNUrl's comment and LN address in invoice's payment method (#3427) @Kukks
* Greenfield: Add maxFeePercent/maxFeeFlat to the lightning payment API (#3454) @dennisreimann @NicolasDorier
* Greenfield: Find 1 user by ID or by email, or list all users. (#3176) @woutersamaey

### Bug fixes:

* Fix: All PSBT flows were crashing @NicolasDorier

### Improvements:

* UI: Add border for mobile menu (#3477 #3469) @denniseimann @dstrukt
* UI: Sticky headers improvements (#3471) @denniseimann
* UX: Remove payment methods not currently configured when creating invoice (#3394) @ubolator
* UX: Add pull payment grouping options (#3177) @ubolator
* UI: Redesign Wallet UI (#3408) @denniseimann @dstrukt
* UI: Remove storeid from the invoice's filter, as it is implicit @NicolasDorier</summary>
    <title>btcpayserver/btcpayserver: v1.4.6</title>
    <updated>2022-02-21T08:26:22Z</updated>
    <dc:date>2022-02-21T08:26:22Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/rootzoll/raspiblitz/releases/tag/v1.7.2</id>
    <link href="https://github.com/rootzoll/raspiblitz/releases/tag/v1.7.2"/>
    <summary>Cache &amp; Backgroundscan refactor &amp; new apps: LNbits c-lightning, Tallycoin Connect, Helipad, ...</summary>
    <title>rootzoll/raspiblitz: v1.7.2</title>
    <updated>2022-02-20T23:28:13Z</updated>
    <dc:date>2022-02-20T23:28:13Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits-legend/releases/tag/0.7.0</id>
    <link href="https://github.com/lnbits/lnbits-legend/releases/tag/0.7.0"/>
    <summary>- Fixes issue of LNDHub extension linked to busy wallet taking down LNbits
- Support for AES-encrypted macaroons (for LND)
- Fixes LNURLwithdraw bug where withdraws would fail
- .env theme selection working properly
- Adds &quot;bitcoin&quot; theme
</summary>
    <title>lnbits/lnbits-legend: 0.7.0</title>
    <updated>2022-02-18T23:29:20Z</updated>
    <dc:date>2022-02-18T23:29:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.0</id>
    <link href="https://github.com/bitcoin-s/bitcoin-s/releases/tag/1.9.0"/>
    <summary># 1.9.0

##  Executive Summary
This release is backwards incompatible with previous releases of bitcoin-s.
You will not be able to build a DLC with prior releases of bitcoin-s. This was due to a bug
in how we computed `contractId` in a DLC. See #4012 for more information.

We now have official typescript bindings for our `oracleServer` and `appServer`

- https://www.npmjs.com/package/@bitcoin-s-ts/wallet-ts
- https://www.npmjs.com/package/@bitcoin-s-ts/oracle-server-ts

See the individual module sections for more information on lower level updates to the codebase.

## Running Bitcoin-S

If you want to run the standalone server binary, after verifying gpg signatures, you
can `unzip bitcoin-s-server-1.9.0.zip` and then run it with `./bin/bitcoin-s-server` to start the node. You will need to
configure the node properly first, you can find example
configurations [here](https://bitcoin-s.org/docs/config/configuration#example-configuration-file).

You can then unzip the `bitcoin-s-cli-1.9.0.zip` folder and start using the `bitcoin-s-cli` like this:

```bashrc
./bin/bitcoin-s-cli --help
Usage: bitcoin-s-cli [options] [&lt;cmd&gt;]

  -n, --network &lt;value&gt;    Select the active network.
  --debug                  Print debugging information
  --rpcport &lt;value&gt;        The port to send our rpc request to on the server
  -h, --help               Display this help message and exit
```

For more information on what commands `bitcoin-s-cli` supports check the documentation, here is where to
start: https://bitcoin-s.org/docs/next/applications/server#server-endpoints

## Verifying signatures

This release is signed with [Chris's signing key](https://bitcoin-s.org/docs/next/security#disclosure) with
fingerprint `339A49229576050819083EB3F99724872F822910`

To do the verification, first hash the executable using `sha256sum`. You should check that the result is listed in
the `SHA256SUMS.asc` file next to its file name. After doing that you can use `gpg --verify` to authenticate the
signature.

Example:

```
sha256sum bitcoin-s-server-1.9.0.zip
ec2bccd61bdabc1f0453d1f8b7608b628da28fe45d55754a269e30391106c18d  bitcoin-s-server-1.9.0.zip

gpg --verify SHA256SUMS.asc
gpg: Signature made Tue 15 Feb 2022 12:58:48 PM CST
gpg:                using RSA key 339A49229576050819083EB3F99724872F822910
gpg: Good signature from &quot;Chris Stewart &lt;stewart.chris1234@gmail.com&gt;&quot; [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 339A 4922 9576 0508 1908  3EB3 F997 2487 2F82 2910
```

### Contributors

    89  Chris Stewart
    36  Scala Steward
    35  benthecarman
    31  rorp
     3  Nadav Kohen
     2  user411
     1  Shreyansh
     1  dependabot[bot]

### Website

https://bitcoin-s.org/

### Releases

https://repo1.maven.org/maven2/org/bitcoin-s/

### Snapshot releases

https://oss.sonatype.org/content/repositories/snapshots/org/bitcoin-s/

### Docker

https://hub.docker.com/orgs/bitcoinscala/repositories

## app commons

Bug fixes and improve the API for `AppConfig`

4e6c68155e Sort outcomes in `decodeoffer` response (#4094)
142612f034 Make newConfigOfType use Vector[Config] (#4039)
2066447cdc Add isEndpoint to numeric contract descriptor serialization (#4033)
e802254a20 2022 01 24 rm appconfig varargs (#4011)
3162c1b2d0 Ignore .DS_Store files when making backups (#4000)
a7af8cac4c Patch bug where `zipdatadir` doesn't work if the directory was not created (#3959)

## App server

The major features shipped this release is support for websockets.
You can now be notified of websocket events from the wallet, dlc wallet, and chain.
These are used on the [wallet-server-ui](https://github.com/bitcoin-s/bitcoin-s-ts/tree/master/wallet-server-ui) to notify when events happen

This module will be renamed to `Wallet Server` in future releases as that
is a more accurate name for this module.

There are various PRs that broke API compatability from `1.8` -&gt; `1.9`. See [the list](https://github.com/bitcoin-s/bitcoin-s/pulls?q=is%3Apr+label%3Aapi-breaking+is%3Aclosed+milestone%3A1.9)

08941206fc Bump timeout to 60 seconds (#4021)
d2f53db82e Change BTC RPC log level (#4010)
f438ce2897 Refactor zipDatadir (#3999)
d88e2494e0 Make RPC authentication optional for localhost (#3980)
ee3ee53191 RPC password authentication (#3961)
9dd126bb9f Modify estimatefee endpoint to return a number rather than a string (#3973)
66e23b61a8 2021 01 11 issue 3938 (#3971)
eeeecb00c5 Reduce polling log to trace when we try to poll bitcoind (#3964)
5de325e7de Exclude seeds from backup (#3950)
f8f8f50aae Implement ping every 5 seconds to keep websocket connection alive (#3947)
7527388be5 2021 12 20 ws dlc callbacks (#3926)
50bec2abc6 2021 12 14 websockets (#3906)
4b07629d56 Add `getmediantimepast` RPC call (#3921)
4646ef6e19 Remove BitcoinSServerMain.startedFP (#3928)
3cd57d37f5 Remove backupwallet / backup oracle (#3920)
f8f5a8e8dc Update docker-application.conf (#3905)
7e214da601 Improve `BitcoinSAppConfig.zipDatadir` (#3903)
6c67e83d3f 2021 12 10 issue 3891 (#3894)
41585a18ca Make Bitcoin Core RPC backend to retry on Error -28: Verifying blocks (#3896)
a38309bed1 Add range of block heights to the error message (#3886)
d393848cc2 2021 11 30 issue 3847 (#3862)
0b9500f4f2 Add `hex` fields to `decodecontractinfo` JSON response (#3830)
1d7529236f 2021 11 13 scan bitcoind witspkv1 mempool (#3825)
5189b6ad5c revert logging directives on request/response back to DEBUG (#3819)
a40ef1ab21 Break existing api to get new address to remove the requirement for null label (#3818)
21fab4ee70 Improve app server validation error handling (#3796)
403c78fd8f Server Docker config (#3775)

## bitcoind rpc

Implements rudimentary support for bitcoin core v22. This release does not implement all RPCs on v22.

5366428fb2 Implement `BitcoindRpcClient.epochSecondToBlockHeight` (#4068)
c0c54acc24 Make non-final bitcoind RPC error message more descriptive (#3915)
a6898defe2 Support for Bitcoin Core v22 (#3834)

## Build

Ergonomic improvements for runnign test suites, make the installer names more readable
for non technical users.

52dcf51e82 Automatically download binaries if they are used in test suite (#4005)
e24efd65ae 2022 01 12 docker ws (#3976)
6e7af37ca0 2021 12 03 installer rename (#3876)
cd3006c020 Verify binary download hashes (#3849)

## Cli

## chain

Adds a callback so that we can be notified when a header is processed by the chain module.

7ee1f0f406 Implement batching of database calls for our chain callback (#4003)
d06b064b6b 2021 12 28 blockprocessed callback (#3946)

## clightning rpc

This is a new module in the 1.9 release. It adds support for a clightning RPC.

cb704da927 Add clightning sendcustommsg (#3883)
7933c90741 Update c-lightning to v0.10.2 (#3857)
cd5451adaa Add clightning listtransactions func (#3797)
01a7c7c838 Make clightning tests execute async (#3768)
6d43d443ba Initial c-lightning rpc support (#3755)

## Core

This release merges support for general payout curves in the `core` module for the DLC specification.
See #3854 for more information

This release also merges support for disjoint union contracts in the DLC specification.

This release fixes a bug in our `contractId` computation.

This breaks backward compatibility in older releases of bitcoin-s.

13c46e0af8 Move expensive script checks to last inside of P2PKWithTimeoutScriptPubKey (#4087)
e2b9c458e4 Change `DLCUtil.buildOracleSignatures` (#4061)
7a6f0430d6 2022 02 03 issue 4032 (#4042)
71711ca582 Add invariant to make sure spendingTxId is different than the txid (#4019)
b918cf78b7 Fix bugs where we were building internally inconsistent SpendingInfoDb (#4016)
d983ad14f3 Fix contractid computation (#4012)
21de609ed8 2022 01 22 cetsignatures refactor (#4004)
214213b59d 2022 01 16 issue 3983 (#3987)
93c5121632 2021 01 06 tlv invariants (#3965)
8857af2b66 Address ben's code review on #3854 (#3962)
b342f373ae Make ContractDescriptorTemplate an unsealed trait (#3963)
8c5288d758 Implemented general payout curves (#3854)
6652448f99 Added constructor for p2pkh for decompressed public keys (#3944)
d66afe9e43 Add satoshisRounded to Bitcoins (#3904)
0d37c4b54f 2021 12 08 block parsing bug caused by 65 byte taproot signatures (#3887)
8765c2f845 Disjoint union dlc (#3839)
422aea2242 Fix TypeIdentifier fromBytes (#3832)
0b3654f020 Remove scientific notation from Bitcoins.toString() (#3811)
09c2562675 Added WitnessScriptPubKeyV1 for sending to Taproot addresses (#3737)
aa748c012f 2021 11 03 protocol version (#3793)
18726c10bb Move ValueIterator out of TLVFactory trait (#3794)
92cf042ccb Expose MnemonicCode.toEntropy() and MnemonicCode.toEntropyWithChecksum() methods (#3786)
92ab9faa45 Decide which coin selection solution to use based on waste metric (#3646)

## Crypto

f4a2ec8554 Make AesEncryptedData a network element / factory (#3952)

## Db commons

A major theme this release is enabling our APIs to use [database actions in Slick](https://scala-slick.org/doc/3.3.3/dbio.html).
This allows us to build database transactions to avoid corrupting data.

We also fixed some bugs in our database implementations around storing very large scriptpubkeys.

4d85b7a3d7 Support for big SPKs (#4084)
3d674c37f3 Create upsertAllAction (#4073)
2166faf61d Make findByPrimaryKeysAction public (#4079)
3991789129 Don't call findByPrimaryKeys if ids is empty (#4074)
48189d5c1d Make `CRUD.run` and `CRUD.runVec` transactional (#4059)
0079489a15 Create DbMapper for DoubleSha256Digest (#3995)
6c2bb0d111 Rename database username and password variables (#3930)
afb51228b4 Add NodeId to DbCommonsColumnMappers (#3880)
085b8b1910 Implement CRUDAction.deleteAction() (#3877)
2d5732375f Add CRUDAction.{updateAllAction, updateAction} (#3872)
f71d3567ed 2021 11 23 crud action (#3851)

## DLC node

The major change this release is implementing a connection timeout for dlc node.
If we cannot connect to a peer within 45 seconds, we throw a timeout exception.

55ecc1ae8f Implement connection timeout (#4081)
019c9b2644 Fix log message failure in DLCDataHandler (#3845)
41cb26a3bb Make DLC node's external IP configurable (#3838)

## DLC Oracle

Improvements to the database handling code so that announcement/attestation creation is transactional.

49d4d7f179 2022 02 06 issue 4049 (#4056)
7f344ad3ff 2022 02 06 announcement creation logging (#4055)
524c5212e0 Add MasterXPubTable to list of DLCOracle tables (#3955)
c3d1b2ee12 Give DLCOracle to filter events by pending/completed (#3953)

## DLC wallet

This release of dlc wallet fixes bugs for accepting offers multiple times.

We also add a new column in `global_dlc_data` for `serialization_version` for when we
break binary level serialization in the DLC protocol spec. This will be done in the 2.0
release of bitcoin-s.

Finally there is a ton of improvements to database handling code.

6cfbf67812 Prevent DB state corruption while accepting the same offer multiple times (#4067)
bce58ba33d Validate announcement signatures on create/accept offer (#4071)
9de4b0272a 2022 01 31 issue 4030 (#4066)
f253b5055e 2022 02 08  dlc accept refactor (#4064)
5aeecdb893 Reworking/refactoring acceptDLCOffer (#4048)
590cd9c72e 2022 02 06 remoteclaimed refactor (#4054)
d213e9935d Add better exception messages (#4053)
bd5bcfef3a 2022 01 18 issue 3969 Add `serialization_version` to `global_dlc_data` (#3992)
8a881b37f4 Add DLC callback for refunded DLC (#3989)
ee0d62c5b8 2022 01 14 `DLCDataManagement` refactor (#3982)
4ca586ca46 2021 12 19 dlc callbacks (#3923)

## Eclair rpc

d71208cf0f Support Eclair v0.6.2 (#3765)

## Esplora

This release adds a new module so you can use esplora on as a chain data source.

03abb7537b Add basic esplora client (#4018)

## fee provider

5f4053b2e4 Create FallbackFeeRateApi (#3974)
bf8b165fe9 Implement recovery for when we cannot receive a fee rate from a FeeRateApi (#3975)

## gui

Small bug fixes. We are moving to having a web interface for bitcoin-s.

This can be found here:

https://github.com/bitcoin-s/bitcoin-s-ts/tree/master/wallet-server-ui

546e030dde [GUI] Fix 'First and last points must be endpoints' exception (#4029)
2aa6f168eb Implement rpc password in GUI (#3986)
7f9fb87a55 Call trim on peer address in Accept dialog (#3942)
856e455be3 Remove 'not set' rate of return % sign on wallet (#3828)

## keymanager

## Lnd rpc

Upgrades lnd to 0.14.2, implements more lnd rpc functionality.

44373f8449 Add functions for LND subscription (#4062)
afc6a32c62 Update lnd to v0.14.2 (#4040)
3ba8fb6dd4 Allow creating invoices with description hash (#3966)
f54ed98c74 Add subscribe invoices function to lnd (#3860)
09f0ac4657 Update lnd to v0.14.1 (#3848)
155301fc1d Allow lnd remote to work with certificate string (#3840)
079fa62073 Lnd v0.14.0 (#3835)

## node

Fixes various bugs around broadcasting witness transactions. Also fixes bugs to make sure
we fetch the entire witness transaction (witnesses included). Previously we wouldn't get the witness
which leads to problems when calculating DLC outcome state.

This release also adds the ability to store peers we see on the p2p network in teh database. Eventually
we will be able to connect to random peers we see on the p2p network rather than just connecting
to the node configured in `bitcoin-s.node.peers`

98c5d816ac 2022 01 25 issue 4014 (#4015)
dbfd58da86 Add log txids inside of inventories in big endian rather than little endian (#4013)
a58ef1cd02 Storing peers in database (#3773)
90e01d7fc6 Fix broadcasting witness vs legacy txs (#3841)
9701769125 Handle TypeIdentifier.MsgWitnessTx messages (#3836)
fc09f41db2 Request witness versions of transactions from nodes (#3829)

## Oracle explorer client

## Oracle server

## secp256k1jni
Updates to the underlying libsecp256k1 to give better performance.

9c9a0a618f Update secp256k1-zkp (#3856)

## wallet

Improves database handling code in the wallet so we use database transactions more often.

This release included various bug fixes and performance.

dc47c070a2 Fix SpendingInfoDAO.findOutputsReceived() bug (#4090)
eeabe5cd77 2022 02 11 clearutxoandaddresses for account transactional (#4077)
883b01006d Fetch blockHeight earlier in TransactionProcessing.processBlock() (#4025)
8d04ca1cd3 2022 01 30 optimize processblock (#4024)
cf16d93648 Fix bug where we didn't set spendingTxId when transitioning from `Reserved` -&gt; `PendingConfirmationsSpent` (#3909)
42d6955f79 Filter dust from coin selection (#3866)
21c97bba12 Filter transactions for onTransactionProcessed (#3990)
41b96c4c7e Add `rescan` field to `walletinfo` response (#3933)
665f931721 Work around for WalletAppConfig.scheduler being blocked by AddressQueueRunnable (#3917)
2d9d12816b Add WalletCallbacks.onBlockProcessed() (#3912)
1969056372 Add better logs for fundTransactionInternal (#3911)
8307fdc0d1 2021 12 12 wallet doublespend tests (#3898)
174c511cd3 2021 12 12 wallet optimization (#3897)
d060c1c5fa Use bigendian txids in wallet log messages (#3893)
174c511cd3 2021 12 12 wallet optimization (#3897)
d060c1c5fa Use bigendian txids in wallet log messages (#3893)
ba88fb1a03 2021 11 12 fix multiple tag issue (#3822)
b3d61bc793 Add deleting address tags to to clearAllUtxosAndAddresses() (#3817)
31e8324522 Make sure exception is caught by Future inside of UtxoHandling.unmarkUTXOsAsReserved() (#3816)

## testkit

## tor

Upgrades tor to 0.4.6.9

1708add6ec Make Tor connect error message more human readable (#4078)
2dcbe73504 Update Tor version to 0.4.6.9 (#3993)
169222a306 Add default proxy params (#3863)
e02c9bba12 Overridable Tor config (#3780)

## Website

95d9bf44a5 Add 1.9.0 of the website (#4096)
e8ee5d7339 Bump website dependencies (#4095)
3931897e7f 2022 02 13 issue 3405 (#4089)
07fcfd0568 2022 02 12 update mdoc fix downloadlink (#4086)
e5707d5002 Fix broken website examples (#4085)
526ed37a28 Cleanup docs that use $ (#4083)
4ea87c741f 2022 02 12 cleanup example config (#4082)
35dccd88d6 Add new section to README for running bitcoin-s, add link to the web frontend (#4069)
99418c798a 2022 02 07 release note draft (#4060)
</summary>
    <title>bitcoin-s/bitcoin-s: 1.9.0</title>
    <updated>2022-02-15T16:59:28Z</updated>
    <dc:date>2022-02-15T16:59:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.5</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.5"/>
    <summary>### New features:

* Ability to bump fees of transactions and invoices via CPFP (#3395) @NicolasDorier
* Add ability to add description to pull payment (#3363) @ubolator
* Greenfield: Can add store guest/owner to a store (#3363) @Kukks

### Bug fixes:

* Fix payment request archival actions (#3443) @dennisreimann
* Fix: filtering paid invoices in the invoice list wasn't working anymore (#3434) @dennisreimann @NicolasDorier
* Fix: Clicking any per-store nav links from the pairing approval page fails with 404 (#3431 #3438) @dennisreimann

### Improvements:

* UI improvements for the crowdfund settings (#3437 #3422) @dstrukt @dennisreimann
* Redirect to transactions list after wallet creation (#3451) @dennisreimann
* Setup guide: Link wallet setup always to BTC (#3442)
</summary>
    <title>btcpayserver/btcpayserver: v1.4.5</title>
    <updated>2022-02-15T06:07:59Z</updated>
    <dc:date>2022-02-15T06:07:59Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.2</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.2"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.2</title>
    <updated>2022-02-11T17:28:39Z</updated>
    <dc:date>2022-02-11T17:28:39Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.14</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.14"/>
    <summary>This update brings four brand new apps to the Umbrel App Store — Urbit, Urbit Bitcoin Connector, Tailscale, and usocial, along with LND 0.14.2, updated apps, and Nunchuk wallet connection support.</summary>
    <title>getumbrel/umbrel: v0.4.14</title>
    <updated>2022-02-09T15:35:35Z</updated>
    <dc:date>2022-02-09T15:35:35Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.4</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.4"/>
    <summary>### Bug fixes:

* Ensure compresed public key is used for SIN generation even if uncompressed key was provided (fix #3432) (#3433) @CherryDT
* After login, redirect user to the main page even if a root app configured (#3429) @NicolasDorier
* docker-entrypoint would crash if missing ssh pubkey, but not the private key @NicolasDorier
* Error messages when starting BTCPay Server where not shown (Fix #3404) @NicolasDorier

### Improvements:

* UI: Use sticky headers for pages with tab navigation. (#3416) @dennisreimann
* UI: Prevent initial scroll to section nav (#3411) @dennisreimann
</summary>
    <title>btcpayserver/btcpayserver: v1.4.4</title>
    <updated>2022-02-08T04:51:41Z</updated>
    <dc:date>2022-02-08T04:51:41Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lnbits/lnbits-legend/releases/tag/0.6.0</id>
    <link href="https://github.com/lnbits/lnbits-legend/releases/tag/0.6.0"/>
    <summary>Updated LNURLPoS to LNURLDevices, to give the extension greater scope
Added admin users to allow easy debiting of admin accounts, and admin only extensions
Added FakeWallet, so LNbits can be used completely detached from bitcoin as a centralised payment server (for use as voucher system in schools, universities, businesses, events, etc)</summary>
    <title>lnbits/lnbits-legend: 0.6.0</title>
    <updated>2022-02-07T13:41:11Z</updated>
    <dc:date>2022-02-07T13:41:11Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.1</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.1"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.1</title>
    <updated>2022-02-07T09:07:03Z</updated>
    <dc:date>2022-02-07T09:07:03Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/vulpemventures/marina/releases/tag/v0.4.0</id>
    <link href="https://github.com/vulpemventures/marina/releases/tag/v0.4.0"/>
    <summary></summary>
    <title>vulpemventures/marina: v0.4.0</title>
    <updated>2022-02-04T16:49:04Z</updated>
    <dc:date>2022-02-04T16:49:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/romanz/electrs/releases/tag/v0.9.5</id>
    <link href="https://github.com/romanz/electrs/releases/tag/v0.9.5"/>
    <summary>https://github.com/romanz/electrs/blob/master/RELEASE-NOTES.md#095-feb-4-2022</summary>
    <title>romanz/electrs: v0.9.5</title>
    <updated>2022-02-04T15:45:49Z</updated>
    <dc:date>2022-02-04T15:45:49Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/lightningnetwork/lnd/releases/tag/v0.14.2-beta</id>
    <link href="https://github.com/lightningnetwork/lnd/releases/tag/v0.14.2-beta"/>
    <summary>This is the second minor release of the 0.14x cycle! This release contains no new larger/major features, and instead packages up a series of bug fixes (several obscure crash fixes), and enhancements (like begin able to convert a node to a watch-only mode for use with the remote signer feature).

We strongly recommend that all users update!

# Verifying the Release

In order to verify the release, you'll need to have `gpg` or `gpg2` installed on your system. Once you've obtained a copy (and hopefully verified that as well), you'll first need to import the keys that have signed this release if you haven't done so already: 

```
curl https://raw.githubusercontent.com/lightningnetwork/lnd/master/scripts/keys/roasbeef.asc | gpg --import
```

Once you have the required PGP keys, you can verify the release (assuming `manifest-roasbeef-v0.14.2-beta.sig` and `manifest-v0.14.2-beta.txt` are in the current directory) with:

```
gpg --verify manifest-roasbeef-v0.14.2-beta.sig manifest-v0.14.2-beta.txt
```

You should see the following if the verification was successful:

```
gpg: Signature made Thu Feb  3 13:55:45 2022 PST
gpg:                using RSA key 60A1FA7DA5BFF08BDCBBE7903BBD59E99B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot; [ultimate]
```

That will verify the signature of the manifest file, which ensures integrity and authenticity of the archive you've downloaded locally containing the binaries. Next, depending on your operating system, you should then re-compute the `sha256` hash of the archive with `shasum -a 256 &lt;filename&gt;`, compare it with the corresponding one in the manifest file, and ensure they match *exactly*.

## Verifying the Release Timestamp 

From this new version onwards, in addition time-stamping the _git tag_ with [OpenTimeStamps](https://opentimestamps.org/), we'll also now timestamp the manifest file along with its signature. Two new files are now included along with the rest of our release artifacts: ` manifest-roasbeef-v0.14.2-beta.txt.asc.ots`.

Assuming you have the opentimestamps client installed locally, the timestamps can be verified with the following commands: 
```
ots verify manifest-roasbeef-v0.14.2-beta.sig.ots -f manifest-roasbeef-v0.14.2-beta.sig
```

Alternatively, [the open timestamps website](https://opentimestamps.org/) can be used to verify timestamps if one doesn't have a `bitcoind` instance accessible locally. 

These timestamps should give users confidence in the integrity of this release even after the key that signed the release expires. 

## Verifying the Release Binaries

Our release binaries are fully reproducible. Third parties are able to verify that the release binaries were produced properly without having to trust the release manager(s). See our [reproducible builds guide](https://github.com/lightningnetwork/lnd/tree/master/build/release) for how this can be achieved.
The release binaries are compiled with `go1.17.3`, which is required by verifiers to arrive at the same ones.
They include the following build tags: `autopilotrpc`, `signrpc`, `walletrpc`, `chainrpc`, `invoicesrpc`, `routerrpc`, `watchtowerrpc` and `monitoring`. Note that these are already included in the release script, so they do not need to be provided.

The `make release` command can be used to ensure one rebuilds with all the same flags used for the release. If one wishes to build for only a single platform, then `make release sys=&lt;OS-ARCH&gt; tag=&lt;tag&gt;` can be used. 

Finally, you can also verify the _tag_ itself with the following command:

```
$ git verify-tag v0.14.2-beta
gpg: Signature made Thu 03 Feb 2022 08:21:05 PM UTC using RSA key ID 9B280306
gpg: Good signature from &quot;Olaoluwa Osuntokun &lt;laolu32@gmail.com&gt;&quot;
```

## Verifying the Docker Images

To verify the `lnd` and `lncli` binaries inside the docker images against the signed, reproducible release binaries, there is a verification script in the image that can be called (before starting the container for example):

```shell
$ docker run --rm --entrypoint=&quot;&quot; lightninglabs/lnd:v0.14.2-beta /verify-install.sh v0.14.2-beta
$ OK=$?
$ if [ &quot;$OK&quot; -ne &quot;0&quot; ]; then echo &quot;Verification failed!&quot;; exit 1; done
$ docker run lightninglabs/lnd [command-line options]
```

# Building the Contained Release 

Users are able to rebuild the target release themselves without having to fetch any of the dependencies. In order to do so, assuming
that `vendor.tar.gz` and `lnd-source-v0.14.2-beta.tar.gz` are in the current directory, follow these steps:

```
tar -xvzf vendor.tar.gz
tar -xvzf lnd-source-v0.14.2-beta.tar.gz
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.2-beta&quot; ./cmd/lnd
GO111MODULE=on go install -v -mod=vendor -ldflags &quot;-X github.com/lightningnetwork/lnd/build.Commit=v0.14.2-beta&quot; ./cmd/lncli
```

The `-mod=vendor` flag tells the `go build` command that it doesn't need to fetch the dependencies, and instead, they're all enclosed in the local vendor directory. 

Additionally, it's now possible to use the [enclosed `release.sh` script to bundle a release for a _specific_ system like so](https://github.com/lightningnetwork/lnd/pull/2191): 

```
make release sys=&quot;linux-arm64 darwin-amd64&quot;
```

⚡️⚡️⚡️ OK, now to the rest of the release notes! ⚡️⚡️⚡️

The release notes can be found here: https://github.com/lightningnetwork/lnd/blob/master/docs/release-notes/release-notes-0.14.2.md 
</summary>
    <title>lightningnetwork/lnd: v0.14.2-beta</title>
    <updated>2022-02-03T22:33:20Z</updated>
    <dc:date>2022-02-03T22:33:20Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/sparrowwallet/sparrow/releases/tag/1.5.6</id>
    <link href="https://github.com/sparrowwallet/sparrow/releases/tag/1.5.6"/>
    <summary>- Add wallet search dialog for labels, address, values and txids across all wallet accounts (View menu)
- Add dialog to sweep a private key in WIF format (e.g. Opendime) to any address (Tools menu)
- Expand transaction diagram in popup by clicking on it to display more inputs, outputs and their values
- Do database updates in a background thread and improve efficiency when refreshing a deep wallet
- Improve deep wallet loading performance by adding a setting to watch only the last X used addresses plus the gap limit (Settings &gt; Advanced)
- General wallet loading performance improvements
- Add broadcasting step to Soroban initiator dialog and indicate when the transaction has been successfully broadcasted
- Add fee rate, RBF and vB from tip information to the tooltip for unconfirmed transactions in transactions tab
- Remove AOPP
- Pass PSBTs and messages to HWI on stdin to avoid overly long process arguments
- Support retrieving a keystore from a scanned crypto-output QR
- Indicate output descriptor key expressions are shown in canonical order
- Indicate payment label is required
- Request focus on password field for encrypted locked wallets when wallet window becomes active
- Increase maximum number of UTXO chart bars
- (Re)allow full addresses in Whirlpool child wallet address CSV exports
- Ensure monotonically increasing ids are used for all JSON-RPC requests in a session
- Tune batch page size for better performance over Tor (maxPageSize config setting)
- Detect Fulcrum version to enable batching (&gt; 1.6.0)
- Upgrade to H2 2.0.206
- Bug fix: Fix memory leak in Jetty ShutdownThread when mixing
- Bug fix: Fix regression selecting a public server in regtest
- Bug fix: Don't enable the Max button when Clear is pressed
- Bug fix: Use unique (per session) integers as ids for all paged server queries
- Bug fix: Adapt to non-commented derivation entries for multiple derivation path wallets in Coldcard export file (firmware &gt; 3.2.1)
- Bug fix: Fix incorrect mix out probability percentage shown in tooltip
- Bug fix: Fix NPE when performing Soroban reply without UTXOs
- Bug fix: Only retain one day of mempool rate sizes to keep memory usage bounded
- Bug fix: Fix reversion of transaction labels when switching servers
- Bug fix: Fix disappearing watch only accounts with the same derivation path
- Bug fix: Improve label cell performance by avoiding clipboard retrieval on creation</summary>
    <title>sparrowwallet/sparrow: 1.5.6</title>
    <updated>2022-02-03T12:04:52Z</updated>
    <dc:date>2022-02-03T12:04:52Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.18</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.18"/>
    <summary>* FIX: Reorder wallets screen crash on macOS</summary>
    <title>BlueWallet/BlueWallet: v6.2.18</title>
    <updated>2022-02-02T20:13:32Z</updated>
    <dc:date>2022-02-02T20:13:32Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.13</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.13"/>
    <summary>This update includes the latest Kollider app which contains a bugfix.

Umbrel 0.4.12 brings four brand new apps in the Umbrel App Store — Kollider, Bitfeed, Suredbits Wallet, and LNDg, updated apps, a security patch, bug fixes, and more.

If you face any difficulties while updating, please message us on Telegram: https://t.me/getumbrel</summary>
    <title>getumbrel/umbrel: v0.4.13</title>
    <updated>2022-02-02T15:30:28Z</updated>
    <dc:date>2022-02-02T15:30:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/getumbrel/umbrel/releases/tag/v0.4.12</id>
    <link href="https://github.com/getumbrel/umbrel/releases/tag/v0.4.12"/>
    <summary>Umbrel 0.4.12 brings four brand new apps in the Umbrel App Store — Kollider, Bitfeed, Suredbits Wallet, and LNDg, updated apps, a security patch, bug fixes, and more.</summary>
    <title>getumbrel/umbrel: v0.4.12</title>
    <updated>2022-02-02T13:53:43Z</updated>
    <dc:date>2022-02-02T13:53:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.3</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.3"/>
    <summary>### Bug fixes:

* Ensure the swagger doc is semantically correct (#3390) @ubolator
* Fix crashes with some plugins (#3401) @Kukks
* Fix crash of payment request list (#3392) @NicolasDorier
* Reference correct payment type definition for webhook events in Swagger docs @ubolator
* Fix pay button type comparison (#3403) @dennisreimann
* No JS error in crowdfund if canvas unavailable @NicolasDorier
* Bump z-index on header (#3393, #3377) @ubolator

### Improvements:

* Delete user preferences cookie on logout (#3379) @dennisreimann
* Pay Button Alert: Add missing alert-link classes (#3397)
* Fix pay button type comparison (#3403 #3403) @dennisreimann
* Various CSS UI adjustment @dstrukt</summary>
    <title>btcpayserver/btcpayserver: v1.4.3</title>
    <updated>2022-02-02T11:46:28Z</updated>
    <dc:date>2022-02-02T11:46:28Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.1</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.1"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/Specter-Setup-v1.8.1.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/SpecterDesktop-v1.8.1.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/specter_desktop-v1.8.1-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/specterd-v1.8.1-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/specterd-v1.8.1-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/specterd-v1.8.1-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.1/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes
* Bugfix: Import electrum multisig wallet (with available seed) (#1543 relativisticelectron) 
* Feature: Adds JS polling to improve Swan integration flow completion (#1546 kdmukai )</summary>
    <title>cryptoadvance/specter-desktop: v1.8.1</title>
    <updated>2022-02-01T15:37:31Z</updated>
    <dc:date>2022-02-01T15:37:31Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/ACINQ/eclair/releases/tag/v0.7.0</id>
    <link href="https://github.com/ACINQ/eclair/releases/tag/v0.7.0"/>
    <summary># Eclair v0.7.0

This release adds official support for two long-awaited lightning features: anchor outputs and onion messages.
Support for the PostreSQL database backend is also now production ready!
This release also includes a few bug fixes and many new (smaller) features.
It is fully compatible with 0.6.2 (and all previous versions of eclair).

Because this release changes the default type of channels that your node will use, make sure you read the release notes carefully!
The release notes can be found [here](https://github.com/ACINQ/eclair/blob/master/docs/release-notes/eclair-v0.7.0.md).

## Verifying signatures

You will need `gpg` and our release signing key 7A73FE77DE2C4027. Note that you can get it:

- from our website: https://acinq.co/pgp/drouinf.asc
- from github user @sstone, a committer on eclair: https://api.github.com/users/sstone/gpg_keys

To import our signing key:

```sh
$ gpg --import drouinf.asc
```

To verify the release file checksums and signatures:

```sh
$ gpg -d SHA256SUMS.asc &gt; SHA256SUMS.stripped
$ sha256sum -c SHA256SUMS.stripped
```

## Building

Eclair builds are deterministic. To reproduce our builds, please use the following environment (*):

- Ubuntu 20.04
- AdoptOpenJDK 11.0.6
- Maven 3.8.1

Use the following command to generate the eclair-node package:

```sh
mvn clean install -DskipTests
```

That should generate `eclair-node/target/eclair-node-0.7.0-a804905-bin.zip` with sha256 checksums that match the one we provide and sign in `SHA256SUMS.asc`

(*) You may be able to build the exact same artefacts with other operating systems or versions of JDK 11, we have not tried everything.

## Upgrading

This release is fully compatible with previous eclair versions. You don't need to close your channels, just stop eclair, upgrade and restart.</summary>
    <title>ACINQ/eclair: v0.7.0</title>
    <updated>2022-02-01T09:15:56Z</updated>
    <dc:date>2022-02-01T09:15:56Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.17</id>
    <link href="https://github.com/BlueWallet/BlueWallet/releases/tag/v6.2.17"/>
    <summary>* ADD: show selected coins summary on CoinControl screen 
* ADD: Navigate to selected wallet 
* DEL: AOPP 
* FIX: Reorder wallet is clunky to use. #4405</summary>
    <title>BlueWallet/BlueWallet: v6.2.17</title>
    <updated>2022-01-31T20:46:04Z</updated>
    <dc:date>2022-01-31T20:46:04Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.0</id>
    <link href="https://github.com/cryptoadvance/specter-desktop/releases/tag/v1.8.0"/>
    <summary># Binaries

There are two types of binaries:

## Specter Desktop
It's a windowed GUI application with Specter server included.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/Specter-Setup-v1.8.0.exe), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/SpecterDesktop-v1.8.0.dmg), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/specter_desktop-v1.8.0-x86_64-linux-gnu.tar.gz)

**Note on Linux**: you need to set up udev rules (included in the archive). Check out [readme](https://github.com/cryptoadvance/specter-desktop/blob/master/udev/README.md#usage).

**Note on macOS**: The current build supports only macOS Catalina (10.15) or higher. If you'd like to run Specter on an older macOS version, you can [install Specter from Pip](https://github.com/cryptoadvance/specter-desktop#installing-specter-from-pip).

## specterd
It's a command-line program that only runs Specter server.
Supported platforms: [Windows](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/specterd-v1.8.0-win64.zip), [MacOS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/specterd-v1.8.0-osx.zip), [Linux (x86_64)](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/specterd-v1.8.0-x86_64-linux-gnu.zip)

## Signatures and hashes
[SHA256SUMS](https://github.com/cryptoadvance/specter-desktop/releases/download/v1.8.0/SHA256SUMS) file contains sha256 hashes of all binary files and signed with &quot;Specter Signer's&quot; GPG key.
You can get the public key from [here](http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x785a2269ee3a9736ac1a4f4c864b7cf9a811fef7).
Fingerprint of the key is `785A 2269 EE3A 9736 AC1A 4F4C 864B 7CF9 A811 FEF7`
This key has been signed by @k9ert's key which you might have used for validating th 1.7.0 release.

# Release notes

- Feature: Add Jade multisig support #1520 (Stepan Snigirev)
- Feature: add liquid-testnet support #1527 (Stepan Snigirev)
- Feature: Allow descriptors with xpubs but without derivations (just wpkh(xpub) ) for wallet imports  #1519 (Stepan Snigirev)
- Feature: search improvements #1497 (Kim Neunert)
- Feature: Send dialog refactored and sped up #1454 (Kim Neunert)
- Feature: Service integration - Swan #1517 (kdmukai)
- Bugfix: Coin selection - unselection via toggle #1536 (Manolis)
- Bugfix: deactivate internal Tor for non-AppImages #1499 (Kim Neunert)
- Bugfix: Edge case for electrum label import #1542 (relativisticelectron)
- Bugfix/Feature: Restoring send functionalities and better address validation and fee selection #1532 (Manolis)
- Bugfix: Final Swan service updates #1533 (kdmukai)
- Bugfix: fix jade signing of unconfidential inputs #1528 (Stepan Snigirev)
- Bugfix: fix keypoolrefill perfomance and adjusted callback logic #1508 (Kim Neunert)
- Bugfix: Multiple send bug fixes #1538 (Manolis)
- Bugfix: prevent using keys twice #1500 (Kim Neunert)
- Bugfix: Restore ability to import address labels of unlabeled addresses #1511 (relativisticelectron)
- Bugfix: Revision of test-new-releases.md #1529 (Manolis)
- Bugfix: Servicediscovery in pyinstaller-packages (specterd) #1531 (Kim Neunert)
- Bugfix: service icons breaking liquid #1534 (Stepan Snigirev)
- Bugfix: Very last fixes for Service swan #1537 (Kim Neunert)
- Documentation: message signature #1310 (Kim Neunert)
- Documentation: added endless pacman troubleshooting Guide #1498 (Kim Neunert)
- Documentation: Create document for testing-setups and cleaning up swan #1526 (Kim Neunert)
- Documentation: Update Donation Link #1514 (Moritz)
- I18N: Fixed the translation error. #1507 (2a3dex)
- UIUX: Added suggestion to quit other wallet software when connecting HWI over USB #1535 (Lobbelt)
- UIUX: Improve behaviour for apps #1540 (Kim Neunert)
- UIUX: Fixed help text #1510 (relativisticelectron)
- Chore: Bump HWI to 2.0.2 #1522 (Michael Henke)
- Chore: Fix running bitcoind with docker #1523 (Kim Neunert)
</summary>
    <title>cryptoadvance/specter-desktop: v1.8.0</title>
    <updated>2022-01-29T12:15:02Z</updated>
    <dc:date>2022-01-29T12:15:02Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.2</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.2"/>
    <summary>### Bug fixes:

* Newly created guest cannot login (#3373) @dennisreimann
* Guest users shouldn't see Payouts menu item @NicolasDorier
* Add plugins link in server nav @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.4.2</title>
    <updated>2022-01-28T13:58:43Z</updated>
    <dc:date>2022-01-28T13:58:43Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/mempool/mempool/releases/tag/v2.3.1</id>
    <link href="https://github.com/mempool/mempool/releases/tag/v2.3.1"/>
    <summary>This is a minor bug fix release for an issue that may cause historical mempool graphs to appear incorrectly after upgrading from v2.2 - we recommend upgrading directly to v2.3.1 instead of v2.3.0 if you are currently using v2.2

### Changelog

* Don't set `autocommit=0` flag when migrating SQL database 

**Full Changelog**: https://github.com/mempool/mempool/compare/v2.3.0...v2.3.1</summary>
    <title>mempool/mempool: v2.3.1</title>
    <updated>2022-01-28T04:48:57Z</updated>
    <dc:date>2022-01-28T04:48:57Z</dc:date>
  </entry>
  <entry>
    <id>https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.1</id>
    <link href="https://github.com/btcpayserver/btcpayserver/releases/tag/v1.4.1"/>
    <summary>Bug fixes:

Fix: Existing Lightning addresses were not loaded (#3367 #3368) @Kukks</summary>
    <title>btcpayserver/btcpayserver: v1.4.1</title>
    <updated>2022-01-28T01:48:32Z</updated>
    <dc:date>2022-01-28T01:48:32Z</dc:date>
  </entry>
  <dc:date>2022-07-15T04:09:24+00:00</dc:date>
</feed>